#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass sweavel-beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}


\usepackage{graphicx}
\usepackage{listings}
\lstset{tabsize=2, breaklines=true,style=Rstyle}
\usetheme{Antibes}
% or ...

%\setbeamercovered{transparent}
% or whatever (possibly just delete it)

%\mode<presentation>
%{
 % \usetheme{KU}
 % \usecolortheme{dolphin} %dark blues
%}

% In document Latex options:
\fvset{listparameters={\setlength{\topsep}{0em}}}
\def\Sweavesize{\scriptsize} 
\def\Rcolor{\color{black}} 
\def\Rbackground{\color[gray]{0.95}}

\newcommand\makebeamertitle{\frame{\maketitle}}%



\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}

%\usepackage{handoutWithNotes}
%\pgfpagesuselayout{3 on 1 with notes}[letterpaper, border shrink=5mm]

\expandafter\def\expandafter\insertshorttitle\expandafter{%
 \insertshorttitle\hfill\insertframenumber\,/\,\inserttotalframenumber}
\end_preamble
\use_default_options false
\master Interaction-Categorical-1-lecture.lyx
\begin_modules
sweave
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch notrun
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Branch R
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=F>>=
\end_layout

\begin_layout Plain Layout

unlink("plots", recursive=T)
\end_layout

\begin_layout Plain Layout

dir.create("plots", showWarnings=T)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=plots/t,split=T,ae=F,height=4,width=6}
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
normalsize} 
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Rcolor{
\backslash
color{black}} 
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Rbackground{
\backslash
color[gray]{0.85}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, echo=F>>=
\end_layout

\begin_layout Plain Layout

options(width=100, prompt=" ", continue="  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE) 
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

op <- par() 
\end_layout

\begin_layout Plain Layout

pjmar <- c(5.1, 5.1, 1.5, 2.1) 
\end_layout

\begin_layout Plain Layout

#pjmar <- par("mar")
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Practice Problems
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
small
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Problems}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
I'm working on an R function to automatically plot interactions involving
 categorical variables.
 The function is currently called 
\begin_inset Quotes eld
\end_inset

catplot
\begin_inset Quotes erd
\end_inset

 and it is circulating in a file called 
\begin_inset Quotes eld
\end_inset

plotCategorical.R
\begin_inset Quotes erd
\end_inset

.
 Please try that out.
\end_layout

\begin_layout Enumerate
There are several functions available in R packages to draw plots of categorical
 interactions.
 Try these:
\end_layout

\begin_deeper
\begin_layout Enumerate
In package HH, the function 
\begin_inset Quotes eld
\end_inset

ancova
\begin_inset Quotes erd
\end_inset

 makes a plot that is interesting.
 Here's some code that works, and it saves a copy of the hotdog data for
 you in a file 
\begin_inset Quotes eld
\end_inset

hotdog.RData
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

library(HH)
\end_layout

\begin_layout Plain Layout

hotdog <- read.table(hh("datasets/hotdog.dat"), header=TRUE)
\end_layout

\begin_layout Plain Layout

save(hotdog, file="hotdog.RData")
\end_layout

\begin_layout Plain Layout

## This is the usual usage for NO interaction
\end_layout

\begin_layout Plain Layout

## y ~ x + a or y ~ a + x 	
\end_layout

\begin_layout Plain Layout

## constant slope, different intercepts 
\end_layout

\begin_layout Plain Layout

ancova(Sodium ~ Calories + Type, data=hotdog) 
\end_layout

\begin_layout Plain Layout

ancova(Sodium ~ Type + Calories, data=hotdog)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

## y ~ x * a or y ~ a * x for an interaction
\end_layout

\begin_layout Plain Layout

## different slopes, and different intercepts 
\end_layout

\begin_layout Plain Layout

ancova(Sodium ~ Calories * Type, data=hotdog) 
\end_layout

\begin_layout Plain Layout

ancova(Sodium ~ Type * Calories, data=hotdog) 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I mention that one because it gives you the hotdog data set.
 
\end_layout

\end_deeper
\begin_layout Enumerate
In the base graphics package's there is 
\begin_inset Quotes eld
\end_inset

coplot
\begin_inset Quotes erd
\end_inset

.
 The 
\begin_inset Quotes eld
\end_inset

car
\begin_inset Quotes erd
\end_inset

 package has a nice little panel plugin to plot lm models.
 See if this is fun:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

coplot(Sodium ~ Calories | Type, data=hotdog) 
\end_layout

\begin_layout Plain Layout

coplot(Sodium ~ Calories | Type, data=hotdog, panel = function(x, y, ...) panel.smoo
th(x, y, span = .8, ...) )
\end_layout

\begin_layout Plain Layout

library(car) 
\end_layout

\begin_layout Plain Layout

coplot(Sodium ~ Calories | Type, panel=panel.car, lowess.line=F, col=c("blue"),
 data=hotdog)
\end_layout

\begin_layout Plain Layout

coplot(Sodium ~ Calories | Type, panel=panel.car, lowess.line=T, col=c("blue"),
 data=hotdog)
\end_layout

\begin_layout Plain Layout

coplot(Sodium ~ Calories | Type, panel=panel.car, rows=1, lowess.line=F, col=c("bl
ue"), data=hotdog)
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
I wish you'd learn how to do these plots with the lattice and the ggplot2
 packages.
 The xyplot function in lattice is made for this kind of thing, but for
 some reason I just can't concentrate hard enough to master all of the options.
 ggplot2 also makes lovely plots, but I can't wrap my mind around the term
 
\begin_inset Quotes eld
\end_inset

aesthetic
\begin_inset Quotes erd
\end_inset

 as it is used in that documentation.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\end_body
\end_document
