#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass sweavel-beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}


\usepackage{graphicx}
\usepackage{listings}
\lstset{tabsize=2, breaklines=true,style=Rstyle}
%\usetheme{Warsaw}
% or ...

%\setbeamercovered{transparent}
% or whatever (possibly just delete it)



% In document Latex options:
\fvset{listparameters={\setlength{\topsep}{0em}}}
\def\Sweavesize{\normalsize} 
\def\Rcolor{\color{black}} 
\def\Rbackground{\color[gray]{0.95}}


\mode<presentation>

\usetheme{Antibes}

\newcommand\makebeamertitle{\frame{\maketitle}}%

\expandafter\def\expandafter\insertshorttitle\expandafter{%
 \insertshorttitle\hfill\insertframenumber\,/\,\inserttotalframenumber}

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}
\end_preamble
\use_default_options false
\begin_modules
sweave
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Branch R
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=F>>=
\end_layout

\begin_layout Plain Layout

dir.create("plots3", showWarnings=F)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=plots3/t,split=T,ae=F,height=5,width=6}
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize} 
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Rcolor{
\backslash
color{black}} 
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Rbackground{
\backslash
color[gray]{0.94}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, echo=F>>=
\end_layout

\begin_layout Plain Layout

options(width=100, prompt=" ", continue="  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE) 
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

op <- par() 
\end_layout

\begin_layout Plain Layout

##pjmar <- c(2.1, 3.1, 1, 2.1) 
\end_layout

\begin_layout Plain Layout

##pjmar <- par("mar")
\end_layout

\begin_layout Plain Layout

##par(mar=pjmar, ps=11)
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(ps=12, xpd=F)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=11)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Oregon Temperature
\end_layout

\begin_layout BeginFrame
Get Data For Regression
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=T>>=
\end_layout

\begin_layout Plain Layout

## If you have the ortann.rds file already, use it.
\end_layout

\begin_layout Plain Layout

## Otherwise download
\end_layout

\begin_layout Plain Layout

if (file.exists("ortann.rds")){
\end_layout

\begin_layout Plain Layout

    print("Using saved file ortann.rds")
\end_layout

\begin_layout Plain Layout

    dat <- readRDS("ortann.rds")
\end_layout

\begin_layout Plain Layout

} else {
\end_layout

\begin_layout Plain Layout

    print("Wait.
 Downloading ortann.csv file")
\end_layout

\begin_layout Plain Layout

dat <- read.table(url("http://pj.freefaculty.org/guides/stat/DataSets/OregonTemps/o
rtann.csv"), header=T, sep=",")
\end_layout

\begin_layout Plain Layout

    saveRDS(dat, file = "ortann.rds")
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

str(dat)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{summarize}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

library(rockchalk)
\end_layout

\begin_layout Plain Layout

summarize(dat)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{One recode before going too much further}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I know (from reading ahead in lecture â˜º) that the calculations based on
 elevation will lead to coefficients that are too small, as in 0.000043.
\end_layout

\begin_layout Itemize
I create a new variable elevationP100 to fix that
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=T>>=
\end_layout

\begin_layout Plain Layout

dat$elevationP100 <- dat$elevation / 100
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Note my style
\end_layout

\begin_deeper
\begin_layout Enumerate
DO NOT recode 
\begin_inset Quotes eld
\end_inset

over
\begin_inset Quotes erd
\end_inset

 old variable, create new one for bug-checking
\end_layout

\begin_layout Enumerate
Create new variable with same name at front, suffix represents change
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Plot}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<elev10, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

plot(tann ~ elevationP100, data = dat, xlab = "Elevation (100s feet)", ylab="Ann
ual Temperature Average")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=8cm]{plots3/t-elev10.pdf}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots3/t-elev10.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks, containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Regression Analysis}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=T>>=
\end_layout

\begin_layout Plain Layout

mod1 <- lm (tann ~ elevationP100, data=dat)
\end_layout

\begin_layout Plain Layout

summary(mod1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Regression Table}
\end_layout

\end_inset


\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=F, results=tex>>=
\end_layout

\begin_layout Plain Layout

library(rockchalk)
\end_layout

\begin_layout Plain Layout

outreg(list("One Predictor Model" = mod1), varLabels = c("elevationP100"
 = "elevation/100"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
Estimated Intercept
\end_layout

\begin_layout Itemize
Estimated Slope
\end_layout

\begin_layout Itemize
Standard Error of Intercept Estimate (estimated standard deviation of intercept
 estimator)
\end_layout

\begin_layout Itemize
Standard Error of Slope Estimate (estimated standard deviation of slope
 estimator)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Hypothesis Test for Slope}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Theory: 
\begin_inset Formula $tann_{i}=\beta_{0}+\beta_{1}elevation_{i}+e_{i}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
3 parameters: 
\begin_inset Formula $\beta_{0}$
\end_inset

 ,
\begin_inset Formula $\beta_{1}$
\end_inset

 and 
\begin_inset Formula $\sigma_{e}^{2}$
\end_inset

 (recall 
\begin_inset Formula $E[e_{i}]=0$
\end_inset

, 
\begin_inset Formula $Var[e_{i}]=E[e_{i}^{2}]=\sigma_{e}^{2}$
\end_inset

).
 
\end_layout

\end_deeper
\begin_layout Itemize
The Null Hypothesis: 
\begin_inset Formula $H_{0}:\beta_{1}=0$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\hat{\beta}_{1}$
\end_inset

 is approximately Normal, but its standard deviation, 
\begin_inset Formula $\sqrt{Var[\hat{\beta}_{1}]}$
\end_inset

 is unknown.
 However, using 
\begin_inset Formula $std.err.(\hat{\beta}_{1})$
\end_inset

, we form the test statistic that has a T distribution:
\begin_inset Formula 
\[
\hat{t}=\frac{\hat{\beta}_{1}-0}{std.err.(\hat{\beta}_{1})}=\frac{-0.3237}{0.02016}=-16.06
\]

\end_inset


\end_layout

\begin_layout Itemize
The critical value of t is:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

> qt( c(0.025, 0.975), df=90)
\end_layout

\begin_layout Plain Layout

[1] -1.986675  1.986675
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Conclusion: 
\begin_inset Quotes eld
\end_inset

The estimate 
\begin_inset Formula $\hat{\beta}_{1}$
\end_inset

 is statistically significantly different from 0.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Confidence Intervals for Intercept and Slope}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

confint(mod1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Supposing the model's theory is correct, we believe 
\end_layout

\begin_layout Itemize
the probability is 0.95 that the true slope 
\begin_inset Formula $\beta_{1}$
\end_inset

 is between -0.363 and -0.284.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Draw Predicted Values}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<elev20, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

plot(tann ~ elevationP100, data = dat, xlab = "Elevation (100s feet)", ylab
 = "Annual Temperature Average")
\end_layout

\begin_layout Plain Layout

abline(mod1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=8cm]{plots3/t-elev20.pdf}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots3/t-elev20.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Superimpose Confidence Interval For Predicted Values}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<elev30, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

plot(tann ~ elevationP100, data = dat, xlab="Elevation (100s feet)", ylab="Annua
l Temperature Average")
\end_layout

\begin_layout Plain Layout

abline(mod1)
\end_layout

\begin_layout Plain Layout

newdf <- data.frame(elevationP100 = plotSeq(dat$elevationP100, 20))
\end_layout

\begin_layout Plain Layout

pconf <- predict(mod1, interval = "confidence", newdata = newdf)
\end_layout

\begin_layout Plain Layout

lines(newdf$elevation, pconf[, "lwr"], lwd = 1.5, lty=4, col="red")
\end_layout

\begin_layout Plain Layout

lines(newdf$elevation, pconf[, "upr"], lwd = 1.5, lty=4, col="green")
\end_layout

\begin_layout Plain Layout

legend("topright", legend=c("predicted","lower CI","upper CI"), lty=c(1,4,4),
 col=c("black", "red","green"), lwd = c(1, 1.5, 1.5))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=9cm]{plots3/t-elev30.pdf}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Code For Previous}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots3/t-elev30.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
VERY important 
\end_layout

\begin_layout Enumerate
R idiom: Create newdata object, give that to predict.
\end_layout

\begin_layout Enumerate
Use lines or other R plotting functions to decorate the existing plot
\end_layout

\begin_layout Enumerate
All well-defined regression routines in R will include predict function
 
\end_layout

\begin_layout Itemize
rockchalk::plotSeq simply gives a selection of evenly spaced values.
 I should have named that something else.
 I was not aware of built-in R function pretty when I created that function.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Superimpose Confidence and Prediction Intervals}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<elev40, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

plot(tann ~ elevationP100, data = dat, xlab = "Elevation (100s feet)", ylab="Ann
ual Temperature Average")
\end_layout

\begin_layout Plain Layout

abline(mod1)
\end_layout

\begin_layout Plain Layout

newdf <- data.frame(elevationP100 = plotSeq(dat$elevationP100, 20))
\end_layout

\begin_layout Plain Layout

pconf <- predict(mod1, interval="confidence", newdata=newdf)
\end_layout

\begin_layout Plain Layout

lines(newdf$elevationP100, pconf[ ,"lwr"], lwd = 1.5, lty=2, col="red")
\end_layout

\begin_layout Plain Layout

lines(newdf$elevationP100, pconf[ ,"upr"], lwd = 1.5, lty=2, col="red")
\end_layout

\begin_layout Plain Layout

ppred <- predict(mod1, interval="prediction", newdata=newdf)
\end_layout

\begin_layout Plain Layout

lines(newdf$elevationP100, ppred[ ,"lwr"], lwd = 1.5, lty=4, col="green")
\end_layout

\begin_layout Plain Layout

lines(newdf$elevationP100, ppred[ ,"upr"], lwd = 1.5, lty=4, col="green")
\end_layout

\begin_layout Plain Layout

legend("topright", legend=c("predicted","conf.
 int.","pred.
 int."), lty=c(1,2,4), col=c("black", "red","green"), lwd = c(1, 1.5, 1.5))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=9cm]{plots3/t-elev40.pdf}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Code For Previous}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots3/t-elev40.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
If you step through this line-by-line, you see pconf is a matrix, not a
 data.frame.
\end_layout

\begin_layout Standard
I was lazy here, did not try to bind together newdf and ppred.
 But in many cases, I would do that (as in lab notes)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Same plot from rockchalk plotSlopes}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<elev50, fig=T, include = F, echo = T>>=
\end_layout

\begin_layout Plain Layout

plotSlopes(mod1, plotx = "elevationP100", xlab="Elevation (100s feet)",
 ylab="Annual Temperature Average", interval = "confidence")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=9cm]{plots3/t-elev50.pdf}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{plotSlopes usage is a little simpler}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots3/t-elev50.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I didn't write this to 
\begin_inset Quotes eld
\end_inset

overlay
\begin_inset Quotes erd
\end_inset

 both confidence and prediction intervals.
 May think of way to do that, someday.
\end_layout

\begin_layout Itemize
plotSlopes was originally intended to help with purpose of plotting several
 lines on one plot.
 See argument modx.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\end_body
\end_document
