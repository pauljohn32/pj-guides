\batchmode
\makeatletter
\def\input@path{{/home/pauljohn/SVN/SVN-guides/stat/Regression/ElementaryOLS//}}
\makeatother
\documentclass[10pt,english]{beamer}
\usepackage{lmodern}
\renewcommand{\sfdefault}{lmss}
\renewcommand{\ttdefault}{lmtt}
\usepackage[T1]{fontenc}
\usepackage[latin9]{inputenc}
\usepackage{listings}
\setcounter{secnumdepth}{3}
\setcounter{tocdepth}{3}
\usepackage{wasysym}

\makeatletter
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Textclass specific LaTeX commands.
\usepackage{Sweavel}
<<echo=F>>=
  if(exists(".orig.enc")) options(encoding = .orig.enc)
@
 \long\def\lyxframe#1{\@lyxframe#1\@lyxframestop}%
 \def\@lyxframe{\@ifnextchar<{\@@lyxframe}{\@@lyxframe<*>}}%
 \def\@@lyxframe<#1>{\@ifnextchar[{\@@@lyxframe<#1>}{\@@@lyxframe<#1>[]}}
 \def\@@@lyxframe<#1>[{\@ifnextchar<{\@@@@@lyxframe<#1>[}{\@@@@lyxframe<#1>[<*>][}}
 \def\@@@@@lyxframe<#1>[#2]{\@ifnextchar[{\@@@@lyxframe<#1>[#2]}{\@@@@lyxframe<#1>[#2][]}}
 \long\def\@@@@lyxframe<#1>[#2][#3]#4\@lyxframestop#5\lyxframeend{%
   \frame<#1>[#2][#3]{\frametitle{#4}#5}}
 \def\lyxframeend{} % In case there is a superfluous frame end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
\usepackage{dcolumn}
\usepackage{booktabs}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}


\usepackage{graphicx}
\usepackage{listings}
\lstset{tabsize=2, breaklines=true,style=Rstyle}
%\usetheme{Warsaw}
% or ...

%\setbeamercovered{transparent}
% or whatever (possibly just delete it)



% In document Latex options:
\fvset{listparameters={\setlength{\topsep}{0em}}}
\def\Sweavesize{\normalsize} 
\def\Rcolor{\color{black}} 
\def\Rbackground{\color[gray]{0.95}}


\mode<presentation>

\usetheme{Antibes}

\newcommand\makebeamertitle{\frame{\maketitle}}%

\expandafter\def\expandafter\insertshorttitle\expandafter{%
 \insertshorttitle\hfill\insertframenumber\,/\,\inserttotalframenumber}

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}

\makeatother

\usepackage{babel}
\begin{document}
<<echo=F>>=
dir.create("plots3", showWarnings=F)
@

% In document Latex options:
\fvset{listparameters={\setlength{\topsep}{0em}}}
\SweaveOpts{prefix.string=plots3/t,split=T,ae=F,height=5,width=6}
\def\Sweavesize{\scriptsize} 
\def\Rcolor{\color{black}} 
\def\Rbackground{\color[gray]{0.94}}

<<Roptions, echo=F>>=
options(width=100, prompt=" ", continue="  ")
options(useFancyQuotes = FALSE) 
set.seed(12345)
op <- par() 
##pjmar <- c(2.1, 3.1, 1, 2.1) 
##pjmar <- par("mar")
##par(mar=pjmar, ps=11)
options(SweaveHooks=list(fig=function() par(ps=12, xpd=F)))
pdf.options(onefile=F,family="Times",pointsize=11)
@


\lyxframeend{}\section{Oregon Temperature}


\lyxframeend{}\lyxframe{Get Data For Regression}

<<echo=T>>=
## If you have the ortann.rds file already, use it.
## Otherwise download
if (file.exists("ortann.rds")){
    print("Using saved file ortann.rds")
    dat <- readRDS("ortann.rds")
} else {
    print("Wait. Downloading ortann.csv file")
dat <- read.table(url("http://pj.freefaculty.org/guides/stat/DataSets/OregonTemps/ortann.csv"), header=T, sep=",")
    saveRDS(dat, file = "ortann.rds")
}
str(dat)
@


\lyxframeend{}

\begin{frame}[containsverbatim]
\frametitle{summarize}

<<>>=
library(rockchalk)
summarize(dat)
@

\end{frame}

\begin{frame}
\frametitle{One recode before going too much further}
\begin{itemize}
\item I know (from reading ahead in lecture \smiley{}) that the calculations
based on elevation will lead to coefficients that are too small, as
in 0.000043.
\item I create a new variable elevationP100 to fix that
\end{itemize}
<<echo=T>>=
dat$elevationP100 <- dat$elevation / 100
@
\begin{itemize}
\item Note my style

\begin{enumerate}
\item DO NOT recode ``over'' old variable, create new one for bug-checking
\item Create new variable with same name at front, suffix represents change
\end{enumerate}
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{Plot}

<<elev10, fig=T, include=F>>=
plot(tann ~ elevationP100, data = dat, xlab = "Elevation (100s feet)", ylab="Annual Temperature Average")
@

\includegraphics[width=8cm]{plots3/t-elev10.pdf}

\input{plots3/t-elev10.tex}

\end{frame}

\begin{frame}[allowframebreaks, containsverbatim]
\frametitle{Regression Analysis}

<<echo=T>>=
mod1 <- lm (tann ~ elevationP100, data=dat)
summary(mod1)
@

\end{frame}

\begin{frame}
\frametitle{Regression Table}
\begin{columns}%{}


\column{6cm}


<<echo=F, results=tex>>=
library(rockchalk)
outreg(list("One Predictor Model" = mod1), varLabels = c("elevationP100" = "elevation/100"))
@


\column{6cm}
\begin{itemize}
\item Estimated Intercept
\item Estimated Slope
\item Standard Error of Intercept Estimate (estimated standard deviation
of intercept estimator)
\item Standard Error of Slope Estimate (estimated standard deviation of
slope estimator)
\end{itemize}
\end{columns}%{}
\end{frame}

\begin{frame}[containsverbatim, allowframebreaks]
\frametitle{Hypothesis Test for Slope}
\begin{itemize}
\item Theory: $tann_{i}=\beta_{0}+\beta_{1}elevation_{i}+e_{i}$


3 parameters: $\beta_{0}$ ,$\beta_{1}$ and $\sigma_{e}^{2}$ (recall
$E[e_{i}]=0$, $Var[e_{i}]=E[e_{i}^{2}]=\sigma_{e}^{2}$). 

\item The Null Hypothesis: $H_{0}:\beta_{1}=0$
\item $\hat{\beta}_{1}$ is approximately Normal, but its standard deviation,
$\sqrt{Var[\hat{\beta}_{1}]}$ is unknown. However, using $std.err.(\hat{\beta}_{1})$,
we form the test statistic that has a T distribution:
\[
\hat{t}=\frac{\hat{\beta}_{1}-0}{std.err.(\hat{\beta}_{1})}=\frac{-0.3237}{0.02016}=-16.06
\]

\item The critical value of t is:
\begin{lstlisting}
> qt( c(0.025, 0.975), df=90)
[1] -1.986675  1.986675
\end{lstlisting}

\item Conclusion: ``The estimate $\hat{\beta}_{1}$ is statistically significantly
different from 0.''
\end{itemize}
\end{frame}

\begin{frame}[containsverbatim]
\frametitle{Confidence Intervals for Intercept and Slope}

<<>>=
confint(mod1)
@

Supposing the model's theory is correct, we believe 
\begin{itemize}
\item the probability is 0.95 that the true slope $\beta_{1}$ is between
-0.363 and -0.284.
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{Draw Predicted Values}

<<elev20, fig=T, include=F>>=
plot(tann ~ elevationP100, data = dat, xlab = "Elevation (100s feet)", ylab = "Annual Temperature Average")
abline(mod1)
@

\includegraphics[width=8cm]{plots3/t-elev20.pdf}

\input{plots3/t-elev20.tex}

\end{frame}

\begin{frame}
\frametitle{Superimpose Confidence Interval For Predicted Values}

<<elev30, fig=T, include=F>>=
plot(tann ~ elevationP100, data = dat, xlab="Elevation (100s feet)", ylab="Annual Temperature Average")
abline(mod1)
newdf <- data.frame(elevationP100 = plotSeq(dat$elevationP100, 20))
pconf <- predict(mod1, interval = "confidence", newdata = newdf)
lines(newdf$elevation, pconf[, "lwr"], lwd = 1.5, lty=4, col="red")
lines(newdf$elevation, pconf[, "upr"], lwd = 1.5, lty=4, col="green")
legend("topright", legend=c("predicted","lower CI","upper CI"), lty=c(1,4,4), col=c("black", "red","green"), lwd = c(1, 1.5, 1.5))
@

\includegraphics[width=9cm]{plots3/t-elev30.pdf}

\end{frame}

\begin{frame}
\frametitle{Code For Previous}

\input{plots3/t-elev30.tex}

VERY important 
\begin{enumerate}
\item R idiom: Create newdata object, give that to predict.
\item Use lines or other R plotting functions to decorate the existing plot
\item All well-defined regression routines in R will include predict function \end{enumerate}
\begin{itemize}
\item rockchalk::plotSeq simply gives a selection of evenly spaced values.
I should have named that something else. I was not aware of built-in
R function pretty when I created that function.
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{Superimpose Confidence and Prediction Intervals}

<<elev40, fig=T, include=F>>=
plot(tann ~ elevationP100, data = dat, xlab = "Elevation (100s feet)", ylab="Annual Temperature Average")
abline(mod1)
newdf <- data.frame(elevationP100 = plotSeq(dat$elevationP100, 20))
pconf <- predict(mod1, interval="confidence", newdata=newdf)
lines(newdf$elevationP100, pconf[ ,"lwr"], lwd = 1.5, lty=2, col="red")
lines(newdf$elevationP100, pconf[ ,"upr"], lwd = 1.5, lty=2, col="red")
ppred <- predict(mod1, interval="prediction", newdata=newdf)
lines(newdf$elevationP100, ppred[ ,"lwr"], lwd = 1.5, lty=4, col="green")
lines(newdf$elevationP100, ppred[ ,"upr"], lwd = 1.5, lty=4, col="green")
legend("topright", legend=c("predicted","conf. int.","pred. int."), lty=c(1,2,4), col=c("black", "red","green"), lwd = c(1, 1.5, 1.5))
@

\includegraphics[width=9cm]{plots3/t-elev40.pdf}

\end{frame}

\begin{frame}
\frametitle{Code For Previous}

\input{plots3/t-elev40.tex}

If you step through this line-by-line, you see pconf is a matrix,
not a data.frame.

I was lazy here, did not try to bind together newdf and ppred. But
in many cases, I would do that (as in lab notes)

\end{frame}

\begin{frame}
\frametitle{Same plot from rockchalk plotSlopes}

<<elev50, fig=T, include = F, echo = T>>=
plotSlopes(mod1, plotx = "elevationP100", xlab="Elevation (100s feet)", ylab="Annual Temperature Average", interval = "confidence")
@

\includegraphics[width=9cm]{plots3/t-elev50.pdf}

\end{frame}

\begin{frame}
\frametitle{plotSlopes usage is a little simpler}

\input{plots3/t-elev50.tex}
\begin{itemize}
\item I didn't write this to ``overlay'' both confidence and prediction
intervals. May think of way to do that, someday.
\item plotSlopes was originally intended to help with purpose of plotting
several lines on one plot. See argument modx.
\end{itemize}
\end{frame}


\lyxframeend{}
\end{document}
