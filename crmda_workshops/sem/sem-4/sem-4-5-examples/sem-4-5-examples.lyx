#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}
\usepackage{array}
\usepackage{longtable}
\usepackage{graphicx}
\usepackage{siunitx}
\renewcommand{\doiprefix}{doi:\kern-1pt}
\setlength{\bibsep}{10pt}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
%for bold upright roman in math for matrix algebra
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}

%%\input{theme/guidePreambleSweavel.tex} 
%%% From beamer slide:
\usepackage{Sweave}
%% 
%% This controls display of code chunks
\usepackage{ae,fancyvrb,relsize,listings}

\providecommand{\Sweavesize}{\normalsize}
\providecommand{\Rsize}{}
\renewcommand{\Rsize}{\normalsize}
\providecommand{\Routsize}{\scriptsize}

\providecommand{\Rcolor}{\color[rgb]{0.1, 0.1, 0.1}}
\providecommand{\Routcolor}{\color[rgb]{0.2, 0.2, 0.2}}
\providecommand{\Rcommentcolor}{\color[rgb]{0.101, 0.43, 0.432}}

\providecommand{\Rbackground}{\color[gray]{0.91}}
\providecommand{\Routbackground}{\color[gray]{0.935}}
% Can specify \color[gray]{1} for white background or just \color{white}

\lstdefinestyle{Rinput}{
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  basicstyle=\Rsize\Rcolor\ttfamily,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%,
  commentstyle=\Rcommentcolor\ttfamily,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1{==}{{=\,=}}2{--}{{-\,-}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},%
  backgroundcolor=\Rbackground,%
  numbers=left,%
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}%

% Other options of interest:
% frame=single,framerule=0.1pt,framesep=1pt,rulecolor=\color{blue},
% numbers=left,numberstyle=\tiny,stepnumber=1,numbersep=7pt,
% keywordstyle={\bf\Rcolor}

\lstdefinestyle{Routput}{fancyvrb=false,
  literate={~}{{$\sim$}}1{R^2}{{$R^{2}$}}2{^}{{$^{\scriptstyle\wedge}$}}1{R-squared}{{$R^{2}$}}2,%
  basicstyle=\Routcolor\Routsize\ttfamily,%
  backgroundcolor=\Routbackground,
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1 {==}{{=\,=}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},
  numbers=left,
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}

\renewenvironment{Schunk}{}{}
\renewenvironment{Sinput}{}{}
\let\Sinput\relax
\let\Scode\relax
\let\Soutput\relax
\lstnewenvironment{Sinput}{\lstset{style=Rinput}}{}
\lstnewenvironment{Scode}{\lstset{style=Rinput}}{}
\lstnewenvironment{Soutput}{\lstset{style=Routput}}{}
%%end paste in from guidePreambleSweavel.tex


\lstset{tabsize=2, breaklines=true, style=Rinput, breakatwhitespace=true}

\fvset{listparameters={\setlength{\topsep}{0em}}}

\usepackage{xcolor}
\definecolor{light-gray}{gray}{0.90}
\usepackage{realboxes}
\providecommand*{\code}[1]{\texttt{#1}}
\renewcommand{\code}[1]{%
\Colorbox{light-gray}{#1}%
}%
%% end of paste

\usepackage[natbibapa]{apacite}

\definecolor{darkblue}{HTML}{1e2277}

%would be in beamerthemekucrmda%
\mode<presentation>
\definecolor{kublue}{RGB}{0,81,186}
\usefonttheme{professionalfonts}
\useoutertheme{infolines}
\useinnertheme{rounded}
%disable rounded for alert and example boxes%
\setbeamertemplate{blocks}[default]
\usecolortheme{whale}
\usecolortheme{orchid}
\setbeamercolor{structure}{bg=kublue,fg=kublue!90!black}
%\setbeamercolor{structure}{fg=kublue}
\setbeamercolor{frametitle}{bg=kublue}
\setbeamercolor{section in toc}{fg=kublue!40!black}

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}
\beamertemplatenavigationsymbolsempty
%end of beamerthemekucrmda%

%If you want bigger margins, try this:
\setbeamersize{text margin left=05mm,text margin right=10mm} 
\hypersetup{colorlinks,allcolors=.,urlcolor=darkblue}
%Following seems to have no effect now
%\usepackage{handoutWithNotes}
%\pgfpagesuselayout{3 on 1 with notes}[letterpaper, border shrink=5mm]

\titlegraphic{\includegraphics[width=6cm]{theme/logo}}
\logo{\includegraphics[width=5mm]{theme/logomini}}
\end_preamble
\options aspectratio=1609
\use_default_options false
\begin_modules
logicalmkup
sweave
natbibapa
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style \use_bibtopic false
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch semboot
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\branch cfalvm
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%following is LyX shortcut 
\backslash
vb for bold upright math for matrices
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\vb}[1]{\bm{\mathrm{#1}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch R
inverted 0
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% tmpout directory must exist first
\end_layout

\begin_layout Plain Layout

<<createdirs, echo=FALSE, include=FALSE, results=hide>>=
\end_layout

\begin_layout Plain Layout

tdir <- "tmpout"
\end_layout

\begin_layout Plain Layout

if(!dir.exists(tdir)) dir.create(tdir, showWarnings=FALSE)
\end_layout

\begin_layout Plain Layout

wdir <- "workingdata"
\end_layout

\begin_layout Plain Layout

if(!dir.exists(wdir)) dir.create(wdir, showWarnings=FALSE)
\end_layout

\begin_layout Plain Layout

odir <- "output"
\end_layout

\begin_layout Plain Layout

if(!dir.exists(odir)) dir.create(odir, showWarnings=FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=tmpout/t,split=T,ae=F,height=4.5,width=7}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<excludemeRoptions, include=F, echo=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

opts.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=100, prompt = " ", continue = "  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE)
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

par.orig <- par(no.readonly = TRUE) 
\end_layout

\begin_layout Plain Layout

pjmar <- c(4.1, 4.1, 1.5, 2.1)
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12, xpd=F)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

if(!file.exists("theme")) file.symlink("../../../../template/theme", "theme")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
SEM with Missing Data - Working Examples 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
missingExamples
\end_layout

\end_inset


\end_layout

\begin_layout Author
Chong Xing
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 and Paul Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Xing & Johnson
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Center for Research Methods and Data Analysis 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
CRMDA
\end_layout

\end_inset


\end_layout

\begin_layout Date
2019
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Outline}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Rsize{
\backslash
footnotesize}
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
tiny}
\end_layout

\end_inset


\end_layout

\begin_layout Section
The Demonstration Data
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The HBSC data set}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
A subset of the HBSC data (Health Behaviour in School-Aged Children; Iannotti,
 
\begin_inset CommandInset citation
LatexCommand citeyear
key "Iannotti-2005_2006-HBSC"
literal "true"

\end_inset

) will be used for the demonstrating the missing data techniques implemented
 in lavaan (Rosseel, 
\begin_inset CommandInset citation
LatexCommand citeyear
key "Yves-2012-lavaan"
literal "true"

\end_inset

) and Mplus (
\begin_inset CommandInset citation
LatexCommand citealp
key "muthen_linda_k_mplus_2017"
literal "true"

\end_inset

)
\end_layout

\begin_layout Itemize
We will use responses from the 6th and 7th graders
\end_layout

\begin_layout Itemize
For demonstration purpose, we will artificially increase the missing percentage
 on the focal variables (this practice is consider MCAR)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat10, include=T, echo=T, eval=T>>=
\end_layout

\begin_layout Plain Layout

## Loading pakcages
\end_layout

\begin_layout Plain Layout

library(lavaan)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat20, include=T, echo=T, eval=T>>=
\end_layout

\begin_layout Plain Layout

## The "data" folder contains the hbsc data
\end_layout

\begin_layout Plain Layout

ddir <- "data"
\end_layout

\begin_layout Plain Layout

hbsc.complete <- readRDS(file.path(ddir, "hbsc.rds"))
\end_layout

\begin_layout Plain Layout

## hbsc contains grades 6 and 7 responses
\end_layout

\begin_layout Plain Layout

hbsc <- hbsc.complete[hbsc.complete$Grade %in% c("6", "7"), ]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat30, include=T, echo=T, eval=T>>=
\end_layout

\begin_layout Plain Layout

## The dimension of the data set "hbsc"
\end_layout

\begin_layout Plain Layout

dim(hbsc)
\end_layout

\begin_layout Plain Layout

## Varibles in our demonstration data "hbsc"
\end_layout

\begin_layout Plain Layout

names(hbsc)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat40, include=T, echo=T, eval=T>>=
\end_layout

\begin_layout Plain Layout

## Creating a name vector for the depre items 
\end_layout

\begin_layout Plain Layout

varName_depre_i <- c("depre1_i","depre2_i", "depre3_i", "depre4_i", "depre5_i",
 "depre6_i")
\end_layout

\begin_layout Plain Layout

## Requesting summary information for the Depression items
\end_layout

\begin_layout Plain Layout

summary(hbsc[ , varName_depre_i])
\end_layout

\begin_layout Plain Layout

## Creating a demonstration data set (depre_i_miss) with increased missings
\end_layout

\begin_layout Plain Layout

depre_i <- (hbsc[ , varName_depre_i])
\end_layout

\begin_layout Plain Layout

depre_i_miss <- as.data.frame(lapply(depre_i, function(cc) cc[ sample(c(TRUE,
 NA), prob = c(0.90, 0.10), size = length(cc), replace = TRUE) ]))
\end_layout

\begin_layout Plain Layout

summary(depre_i_miss)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Listwise Deletion in lavaan
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Listwise deletion in lavaan - ordinal treated as numeric}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat50, eval=T, echo=T, include=T>>=
\end_layout

\begin_layout Plain Layout

## Specifying the model-structure object
\end_layout

\begin_layout Plain Layout

## One latent factor with six indicators
\end_layout

\begin_layout Plain Layout

cfa.01.v.01 <- '
\end_layout

\begin_layout Plain Layout

depress =~ NA*depre1_i + depre2_i + depre3_i +
\end_layout

\begin_layout Plain Layout

              depre4_i + depre5_i + depre6_i
\end_layout

\begin_layout Plain Layout

depress ~~ 1*depress '
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat60, eval=T, echo=T, include=T>>=
\end_layout

\begin_layout Plain Layout

## Estimating cfa.01.v01 
\end_layout

\begin_layout Plain Layout

## with listwise deletion
\end_layout

\begin_layout Plain Layout

cfa.01.v.01.fit.listwise <- 
\end_layout

\begin_layout Plain Layout

cfa(model = cfa.01.v.01, data = depre_i_miss,
\end_layout

\begin_layout Plain Layout

    mimic = "Mplus", estimator = "ML",
\end_layout

\begin_layout Plain Layout

    missing = "listwise", meanstructure = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat70, eval=T, echo=T, include=T>>=
\end_layout

\begin_layout Plain Layout

## Requesting an estimation summary
\end_layout

\begin_layout Plain Layout

## Please pay attention to
\end_layout

\begin_layout Plain Layout

## The used and the total observations and
\end_layout

\begin_layout Plain Layout

## The Minimum Function Test Statistics
\end_layout

\begin_layout Plain Layout

summary(cfa.01.v.01.fit.listwise, fit.measures = TRUE,
\end_layout

\begin_layout Plain Layout

        standardized = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Pairwise Deletion in lavaan
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Pairwise deletion in lavaan - ordinal treated as numeric}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat80, eval=T, echo=T, include=T>>=
\end_layout

\begin_layout Plain Layout

## Estimating cfa.01.v01 
\end_layout

\begin_layout Plain Layout

## with pairwise deletion
\end_layout

\begin_layout Plain Layout

cfa.01.v.01.fit.pairwise <- 
\end_layout

\begin_layout Plain Layout

cfa(model = cfa.01.v.01, data = depre_i_miss,
\end_layout

\begin_layout Plain Layout

    mimic = "Mplus", estimator = "ML",
\end_layout

\begin_layout Plain Layout

    missing = "pairwise", meanstructure = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat90, eval=T, echo=T, include=T>>=
\end_layout

\begin_layout Plain Layout

## Requesting an estimation summary
\end_layout

\begin_layout Plain Layout

## Please pay attention to
\end_layout

\begin_layout Plain Layout

## The used and the total observations and
\end_layout

\begin_layout Plain Layout

## The Minimum Function Test Statistics
\end_layout

\begin_layout Plain Layout

summary(cfa.01.v.01.fit.pairwise, fit.measures = TRUE,
\end_layout

\begin_layout Plain Layout

        standardized = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<cfa400tab,eval=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

library(semTable)
\end_layout

\begin_layout Plain Layout

labs <- c("depress" = "Depression")
\end_layout

\begin_layout Plain Layout

cfa.ld.pw <- 
\end_layout

\begin_layout Plain Layout

semTable(list("listwise" = cfa.01.v.01.fit.listwise, "pairwise" = cfa.01.v.01.fit.pairwise
), paramSets = c("loadings", "intercepts", "residualvariances", "fits"),
 columns = c("estsestars"), file = file.path(tdir, "cfa.ld.pw"), type = "tex",
 longtable = TRUE, varLabels = labs)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
framebreak
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
footnotesize{}
\end_layout

\begin_layout Plain Layout

<<echo=F, results=tex>>=
\end_layout

\begin_layout Plain Layout

<<cfa400tab>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
FIML in lavaan
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{FIML in lavaan - ordinal treated as numeric}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat100, eval=T, echo=T, include=T>>=
\end_layout

\begin_layout Plain Layout

## Estimating cfa.01.v01 
\end_layout

\begin_layout Plain Layout

## with full information maximum likelihood
\end_layout

\begin_layout Plain Layout

cfa.01.v.01.fit.fiml <- 
\end_layout

\begin_layout Plain Layout

cfa(model = cfa.01.v.01, data = depre_i_miss,
\end_layout

\begin_layout Plain Layout

    mimic = "Mplus", estimator = "ML",
\end_layout

\begin_layout Plain Layout

    missing = "ml", meanstructure = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat110, eval=T, echo=T, include=T>>=
\end_layout

\begin_layout Plain Layout

## Requesting an estimation summary
\end_layout

\begin_layout Plain Layout

## Please pay attention to
\end_layout

\begin_layout Plain Layout

## The used and the total observations and
\end_layout

\begin_layout Plain Layout

## The Minimum Function Test Statistics
\end_layout

\begin_layout Plain Layout

summary(cfa.01.v.01.fit.fiml, fit.measures = TRUE,
\end_layout

\begin_layout Plain Layout

        standardized = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Comparison Table}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<cfa500tab,eval=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

library(semTable)
\end_layout

\begin_layout Plain Layout

labs <- c("depress" = "Depression")
\end_layout

\begin_layout Plain Layout

cfa0101tab <- 
\end_layout

\begin_layout Plain Layout

semTable(list("listwise" = cfa.01.v.01.fit.listwise, "pairwise" = cfa.01.v.01.fit.pairwise
, "fiml" = cfa.01.v.01.fit.fiml), paramSets = c("loadings", "intercepts", "residualva
riances", "fits"), columns = c("estsestars"), file = file.path(tdir, "cfa0101a"),
 type = "tex", longtable = TRUE, varLabels = labs)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
framebreak
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
footnotesize{}
\end_layout

\begin_layout Plain Layout

<<echo=F, results=tex>>=
\end_layout

\begin_layout Plain Layout

<<cfa500tab>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
No FIML in lavaan for Categorical Data
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{FIML in lavaan - ordinal treated as ordinal}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat120, include=T, echo=T, eval=T>>=
\end_layout

\begin_layout Plain Layout

### Specifying the model-structure object 
\end_layout

\begin_layout Plain Layout

cfa.01.v.02 <- '
\end_layout

\begin_layout Plain Layout

depress =~ NA*depre1_i + depre2_i + depre3_i +
\end_layout

\begin_layout Plain Layout

              depre4_i + depre5_i + depre6_i
\end_layout

\begin_layout Plain Layout

depress ~~ 1*depress '
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat130, eval=T, echo=T, include=T>>=
\end_layout

\begin_layout Plain Layout

## Estimating cfa.01.v.02
\end_layout

\begin_layout Plain Layout

## cfa.01.v.02.fit.fiml <- 
\end_layout

\begin_layout Plain Layout

## cfa(model = cfa.01.v.02, data = depre_i_miss,
\end_layout

\begin_layout Plain Layout

##     mimic = "Mplus", estimator = "WLSMV",
\end_layout

\begin_layout Plain Layout

##     missing = "ml", meanstructure = TRUE,
\end_layout

\begin_layout Plain Layout

##     ordered = c("depre1_i", "depre2_i",
\end_layout

\begin_layout Plain Layout

##                 "depre3_i", "depre4_i",
\end_layout

\begin_layout Plain Layout

##                 "depre5_i", "depre6_i"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Quotation
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Error in lav_options_set(opt) : lavaan ERROR: missing="ml" is not allowed
 for estimator MLM, MLMV, GLS, ULS, ULSM, ULSMV, DWLS, WLS, WLSM, WLSMV,
 PML 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Pairwise deletion in lavaan - ordinal treated as ordinal}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat140, eval=T, echo=T, include=T>>=
\end_layout

\begin_layout Plain Layout

## Estimating cfa.01.v.02
\end_layout

\begin_layout Plain Layout

## With pairwise deletion
\end_layout

\begin_layout Plain Layout

cfa.01.v.02.fit.pairwise <- 
\end_layout

\begin_layout Plain Layout

cfa(model = cfa.01.v.02, data = depre_i_miss,
\end_layout

\begin_layout Plain Layout

    mimic = "Mplus", estimator = "WLSMV",
\end_layout

\begin_layout Plain Layout

    missing = "pairwise", meanstructure = TRUE,
\end_layout

\begin_layout Plain Layout

    ordered = c("depre1_i", "depre2_i",
\end_layout

\begin_layout Plain Layout

                "depre3_i", "depre4_i",                 
\end_layout

\begin_layout Plain Layout

                "depre5_i", "depre6_i"))
\end_layout

\begin_layout Plain Layout

summary(cfa.01.v.02.fit.pairwise, fit.measures = TRUE,
\end_layout

\begin_layout Plain Layout

        standardized = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Comparison Table}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<cfa600tab,eval=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

## 20190602: bug appears in output below, don't know why!
\end_layout

\begin_layout Plain Layout

## 20190606: bug solved
\end_layout

\begin_layout Plain Layout

labs <- c("depress" = "Depression")
\end_layout

\begin_layout Plain Layout

cfapairwise <- 
\end_layout

\begin_layout Plain Layout

semTable(list("Pairwise CFA ml" = cfa.01.v.01.fit.pairwise, "Pairwise CFA wlsmv"
 = cfa.01.v.02.fit.pairwise), paramSets = c("loadings", "thresholds", "intercepts",
 "residualvariances", "fits"), columns = c("estsestars"), file = file.path(tdir,
 "cfa0101b"), type = "tex", longtable = TRUE, varLabels = labs)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
framebreak
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
footnotesize{}
\end_layout

\begin_layout Plain Layout

<<cfa600q, echo=F, results=tex>>=
\end_layout

\begin_layout Plain Layout

<<cfa600tab>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
FIML in Mplus
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{FIML in Mplus - ordinal treated as numeric}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
When the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ESTIMATOR = ML
\end_layout

\end_inset

 is specified (or MLR) in Mplus for numeric data, Mplus will apply FIML
 if there are missing values detected
\end_layout

\begin_layout Standard
\noindent
\align center

\size tiny
\begin_inset CommandInset include
LatexCommand verbatiminput
filename "../../sem-3/semexample/Mplus/Ex-07-Ordinal/Continuous/cfa-Depress-1factor-ML.out"

\end_inset


\end_layout

\begin_layout Standard
If users want to change the default FIML behavior in Mplus, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
LISTWISE = ON
\end_layout

\end_inset

 in the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
DATA COMMAND
\end_layout

\end_inset

 can be specified
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{FIML in Mplus - ordinal treated as ordinal}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
To our knowledge, Mplus is currently the only SEM software that allows FIML
 estimation to be used for ordinal data with missing values
\end_layout

\begin_layout Itemize
Parameters of categorical variables are estimated (e.g., thresholds)
\end_layout

\begin_layout Itemize
Individual-level information are used, instead of covariance information,
 for model estimation
\end_layout

\begin_layout Itemize
Time consuming (a three-factor model can take about 20mins to converge)
\end_layout

\begin_layout Itemize
Some times large models do not converge at all
\end_layout

\begin_layout Standard
\noindent
\align center

\size tiny
\begin_inset CommandInset include
LatexCommand verbatiminput
filename "../../sem-3/semexample/Mplus/Ex-07-Ordinal/Categorical/cfa-Depress-1factor-ML.out"

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset CommandInset include
LatexCommand verbatiminput
filename "../../sem-3/semexample/Mplus/Ex-07-Ordinal/Categorical/cfa-Depress-3factor-ML.out"

\end_inset


\end_layout

\begin_layout Standard
If users want to change the default FIML behavior in Mplus, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
LISTWISE = ON
\end_layout

\end_inset

 in the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
DATA COMMAND
\end_layout

\end_inset

 can be specified
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Multiple Imputation
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Two Types of Imputation}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
mice: 
\begin_inset Quotes eld
\end_inset

fcs
\begin_inset Quotes erd
\end_inset

 fully conditional specification
\end_layout

\begin_deeper
\begin_layout Itemize
very slow with lots of ordinal variables
\end_layout

\end_deeper
\begin_layout Itemize
Amelia: multivariate normal approximation
\end_layout

\begin_deeper
\begin_layout Itemize
faster!
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Packages you'll need}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I installed 
\begin_inset Quotes eld
\end_inset

mice
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

amelia
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

mitools
\begin_inset Quotes erd
\end_inset

 to get this going.
 Probably several others will come along with those if you install them.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
mice
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Mice ran slowly in this case}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The imputation with mice is launched as follows.
 This takes several hours, so don't launch it unless you really mean it!
\end_layout

\begin_layout Itemize
I only asked for default number of completed sets, m=5, because I hoped
 it would be fast.
 Usually I'd want more.
 But even this was slow.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mice10, eval=F>>=
\end_layout

\begin_layout Plain Layout

library(mice)
\end_layout

\begin_layout Plain Layout

## I was careless, did not look at hbsc carefully first
\end_layout

\begin_layout Plain Layout

set5 <- mice(hbsc, m = 5)
\end_layout

\begin_layout Plain Layout

## To see what you get, do this
\end_layout

\begin_layout Plain Layout

par(ask = TRUE)
\end_layout

\begin_layout Plain Layout

plot(set5)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
After inspecting the initial set with 5 iterations, I concluded the results
 were inadequate, so I ran several additional commands to add more samples.
 To add more iterations, use 
\begin_inset Quotes eld
\end_inset

mice.mids
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mice20, eval=F>>=
\end_layout

\begin_layout Plain Layout

set15 <- mice.mids(set5, maxit = 10)
\end_layout

\begin_layout Plain Layout

## That was not adequate keep going
\end_layout

\begin_layout Plain Layout

set25 <- mice.mids(set15, maxit = 10)
\end_layout

\begin_layout Plain Layout

## Inadequate, keep going
\end_layout

\begin_layout Plain Layout

set30 <- mice.mids(set25, maxit = 5)
\end_layout

\begin_layout Plain Layout

## Expectations crashed that was not good
\end_layout

\begin_layout Plain Layout

set45 <- mice.mids(set45, maxit = 25)
\end_layout

\begin_layout Plain Layout

## Stop there, I had enough
\end_layout

\begin_layout Plain Layout

saveRDS(set45, file.path(wdir, "mice-45.rds"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Load the saved mice file from workingdata}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mice100>>=
\end_layout

\begin_layout Plain Layout

wdir <- "workingdata"
\end_layout

\begin_layout Plain Layout

list.files(wdir)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

library(mice)
\end_layout

\begin_layout Plain Layout

miceimputed <- readRDS(file.path(wdir, "mice-45.rds"))
\end_layout

\begin_layout Plain Layout

if(interactive()){
\end_layout

\begin_layout Plain Layout

   par(ask=TRUE)
\end_layout

\begin_layout Plain Layout

   plot(miceimputed)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
framebreak
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I want to fit this structural equation model
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

sem.01.int <- '
\end_layout

\begin_layout Plain Layout

## the measurement model
\end_layout

\begin_layout Plain Layout

gotBully =~ NA*gotBu1_i + gotBu2_i + gotBu3_i
\end_layout

\begin_layout Plain Layout

             + gotBu4_i + gotBu5_i + gotBu6_i
\end_layout

\begin_layout Plain Layout

             + gotBu7_i + gotBu8_i + gotBu9_i
\end_layout

\begin_layout Plain Layout

gotBully ~~ 1*gotBully
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

alcohol =~ NA*alc1_i + alc2_i + alc3_i
\end_layout

\begin_layout Plain Layout

            + alc4_i + alc5_i
\end_layout

\begin_layout Plain Layout

alcohol ~~ 1*alcohol
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# regress 
\end_layout

\begin_layout Plain Layout

alcohol ~ gotBully
\end_layout

\begin_layout Plain Layout

'
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
mice offers a way to run a set of models, one for each imputed data set.
 However in this case it does not work.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mice110, eval=F>>=
\end_layout

\begin_layout Plain Layout

fits.mice <- with(data = miceimputed, exp = 
\end_layout

\begin_layout Plain Layout

  sem(model = sem.01.int, mimic = "Mplus",
\end_layout

\begin_layout Plain Layout

      estimator = "ML"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
That returns without error, but further inspection indicates the model was
 not estimated and that the usual function 
\begin_inset Quotes eld
\end_inset

summary(fits.mice)
\begin_inset Quotes erd
\end_inset

 does not understand lavaan objects.
\end_layout

\begin_layout Itemize
So we fall back to manual method.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Step 1: pull a completed data set for each imputation}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Create a new list called 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
imps
\end_layout

\end_inset

 (
\begin_inset Quotes eld
\end_inset

imputations
\begin_inset Quotes erd
\end_inset

) and use the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
complete
\end_layout

\end_inset

 function to get the data frames
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mice150>>=
\end_layout

\begin_layout Plain Layout

imps <- list()
\end_layout

\begin_layout Plain Layout

for(i in 1:5){
\end_layout

\begin_layout Plain Layout

    imps[[i]] <- complete(miceimputed, action = i)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
When the imputation ran, it only filled in values for the ordinal 
\begin_inset Quotes eld
\end_inset

_o
\begin_inset Quotes erd
\end_inset

 variables, it left NAs on the integer ones.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
tiny}
\end_layout

\begin_layout Plain Layout

<<mice160>>=
\end_layout

\begin_layout Plain Layout

summary(imps[[1]])
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Replace the 
\begin_inset Quotes eld
\end_inset

_i
\begin_inset Quotes erd
\end_inset

 variables with fillins from 
\begin_inset Quotes eld
\end_inset

_o
\begin_inset Quotes erd
\end_inset

 data (as.integer coerces to integer).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mice200>>=
\end_layout

\begin_layout Plain Layout

ordvars <- grep("^.*_o$", colnames(imps[[1]]), value = TRUE)
\end_layout

\begin_layout Plain Layout

## Re-create the integer coded variables
\end_layout

\begin_layout Plain Layout

for(i in seq_along(imps)){
\end_layout

\begin_layout Plain Layout

    oneds <- imps[[i]]
\end_layout

\begin_layout Plain Layout

    for(j in ordvars){
\end_layout

\begin_layout Plain Layout

        newvar <- as.integer(oneds[ , j])
\end_layout

\begin_layout Plain Layout

        newname <- gsub("_o$", "_i", j)
\end_layout

\begin_layout Plain Layout

        oneds[ , newname] <- as.integer(oneds[ , j])
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    imps[[i]] <- oneds
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Step 2: Run each data set}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mice300>>=
\end_layout

\begin_layout Plain Layout

sem.01.int.fits <- list()
\end_layout

\begin_layout Plain Layout

for(i in seq_along(imps)){
\end_layout

\begin_layout Plain Layout

    sem.01.int.fits[[i]] <- sem(model = sem.01.int, mimic = "Mplus",
\end_layout

\begin_layout Plain Layout

                      estimator = "ML", data = imps[[i]])
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Step 3: Pool the fits}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mice310,results=hide>>=
\end_layout

\begin_layout Plain Layout

library(mitools)
\end_layout

\begin_layout Plain Layout

int.betas <- MIextract(sem.01.int.fits, fun = coef)
\end_layout

\begin_layout Plain Layout

int.vars <- MIextract(sem.01.int.fits, fun = vcov)
\end_layout

\begin_layout Plain Layout

int.fits.pooled <- summary(MIcombine(int.betas, int.vars))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{And the result is}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
tiny}
\end_layout

\begin_layout Plain Layout

<<mice320>>=
\end_layout

\begin_layout Plain Layout

int.fits.pooled
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Ordinal version of the SEM}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mice360>>=
\end_layout

\begin_layout Plain Layout

sem.01.ord <- '
\end_layout

\begin_layout Plain Layout

## the measurement model
\end_layout

\begin_layout Plain Layout

gotBully =~ NA*gotBu1_o + gotBu2_o + gotBu3_o
\end_layout

\begin_layout Plain Layout

             + gotBu4_o + gotBu5_o + gotBu6_o
\end_layout

\begin_layout Plain Layout

             + gotBu7_o + gotBu8_o + gotBu9_o
\end_layout

\begin_layout Plain Layout

gotBully ~~ 1*gotBully
\end_layout

\begin_layout Plain Layout

alcohol =~ NA*alc1_o + alc2_o + alc3_o
\end_layout

\begin_layout Plain Layout

            + alc4_o + alc5_o
\end_layout

\begin_layout Plain Layout

alcohol ~~ 1*alcohol
\end_layout

\begin_layout Plain Layout

# regress 
\end_layout

\begin_layout Plain Layout

alcohol ~ gotBully
\end_layout

\begin_layout Plain Layout

'
\end_layout

\begin_layout Plain Layout

## Run on each imputed data set
\end_layout

\begin_layout Plain Layout

sem.01.ord.fits <- list()
\end_layout

\begin_layout Plain Layout

for(i in seq_along(imps)){
\end_layout

\begin_layout Plain Layout

    sem.01.ord.fits[[i]] <- sem(model = sem.01.ord, mimic = "Mplus",
\end_layout

\begin_layout Plain Layout

                      estimator = "DWLS", data = imps[[i]])
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mice410, results=hide>>=
\end_layout

\begin_layout Plain Layout

ord.betas <- MIextract(sem.01.ord.fits, fun = coef)
\end_layout

\begin_layout Plain Layout

ord.vars <- MIextract(sem.01.ord.fits, fun = vcov)
\end_layout

\begin_layout Plain Layout

ord.fits.pooled <- summary(MIcombine(ord.betas, ord.vars))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{And the result is}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
tiny}
\end_layout

\begin_layout Plain Layout

<<mice420>>=
\end_layout

\begin_layout Plain Layout

ord.fits.pooled
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{For comparison}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mice500,results=hide,echo=T>>=
\end_layout

\begin_layout Plain Layout

sem.01.ord.ld <- sem(model = sem.01.ord, mimic = "Mplus",
\end_layout

\begin_layout Plain Layout

                      estimator = "DWLS", data = hbsc, missing = "listwise")
\end_layout

\begin_layout Plain Layout

sem.01.ord.pair <- sem(model = sem.01.ord, mimic = "Mplus",
\end_layout

\begin_layout Plain Layout

                      estimator = "DWLS", data = hbsc, missing = "pairwise")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout

<<mice509,echo=T,eval=T,results=hide>>=
\end_layout

\begin_layout Plain Layout

table509 <- semTable(list("listwise" = sem.01.ord.ld, "pairwise" = sem.01.ord.pair),
\end_layout

\begin_layout Plain Layout

             columns = c("estsestars","rsquare"), type = "tex", longtable=TRUE,
\end_layout

\begin_layout Plain Layout

             file = file.path(odir, "semtable509"), print.results=FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
framebreak
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout

<<mice510,results=tex,echo=F>>=
\end_layout

\begin_layout Plain Layout

##cat(table509)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Double-check a couple of the fitted models}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Results on coefficients are quite different.
 
\end_layout

\begin_layout Enumerate
Listwise deletion much like pairwise complete analysis
\end_layout

\begin_layout Enumerate
Note Regression slope with listwise deletion twice as large, is this meaningful?
\end_layout

\begin_layout Enumerate
Wondered if there is something wrong in the pooling, check a couple of models
 from the list
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout

<<mice450>>=
\end_layout

\begin_layout Plain Layout

summary(sem.01.ord.fits[[1]])
\end_layout

\begin_layout Plain Layout

summary(sem.01.ord.fits[[4]])
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Amelia
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Multivariate Normal Imputation}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<amel100,eval=F>>=
\end_layout

\begin_layout Plain Layout

library(Amelia)
\end_layout

\begin_layout Plain Layout

## Drop the redundant integer versions of the variables
\end_layout

\begin_layout Plain Layout

dato <- hbsc[ , grep("^.*_i$", colnames(hbsc), invert = TRUE)]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

## Don't have good reason for emburn setting, but
\end_layout

\begin_layout Plain Layout

## run was quitting so quickly I was not comfortable
\end_layout

\begin_layout Plain Layout

datoamelia <- amelia(dato, m = 5L, p2s=0,  idvars = "stud_id",
\end_layout

\begin_layout Plain Layout

                     ords = grep("^.*_o$", colnames(hbsc), value = TRUE),
\end_layout

\begin_layout Plain Layout

                     noms = c("Gender", "Grade"),
\end_layout

\begin_layout Plain Layout

                     emburn = c(100L, 10L))
\end_layout

\begin_layout Plain Layout

## Extract the imputed complete data sets
\end_layout

\begin_layout Plain Layout

imps <- datoamelia$imputations
\end_layout

\begin_layout Plain Layout

## Now re-create the integer coded variables
\end_layout

\begin_layout Plain Layout

ordvars <- grep("^.*_o$", colnames(imps[[1]]), value = TRUE)
\end_layout

\begin_layout Plain Layout

for(i in seq_along(imps)){
\end_layout

\begin_layout Plain Layout

    oneds <- imps[[i]]
\end_layout

\begin_layout Plain Layout

    for(j in ordvars){
\end_layout

\begin_layout Plain Layout

        newvar <- as.integer(oneds[ , j])
\end_layout

\begin_layout Plain Layout

        newname <- gsub("_o$", "_i", j)
\end_layout

\begin_layout Plain Layout

        oneds[ , newname] <- as.integer(oneds[ , j])
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    imps[[i]] <- oneds
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

saveRDS(imps, file.path(wdir, "amelia-imps.rds"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Run Models with Saved Amelia Imputations}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<amel110>>=
\end_layout

\begin_layout Plain Layout

imps <- readRDS(file.path(wdir, "amelia-imps.rds"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<amel120>>=
\end_layout

\begin_layout Plain Layout

## Run same model for each imputed data set
\end_layout

\begin_layout Plain Layout

ord.amelia.fits <- list()
\end_layout

\begin_layout Plain Layout

for (i in seq_along(imps)){
\end_layout

\begin_layout Plain Layout

    ord.amelia.fits[[i]] <- sem(model = sem.01.ord, data = imps[[i]],
\end_layout

\begin_layout Plain Layout

            mimic = "Mplus", estimator = "DWLS")
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<amel130,results=hide>>=
\end_layout

\begin_layout Plain Layout

ord.amelia.betas <- MIextract(ord.amelia.fits, fun = coef)
\end_layout

\begin_layout Plain Layout

ord.amelia.vars <- MIextract(ord.amelia.fits, fun = vcov)
\end_layout

\begin_layout Plain Layout

ord.amelia.fits.pooled <- summary(MIcombine(ord.amelia.betas, ord.amelia.vars))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Run Models with Saved Amelia Imputations}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout

<<amel510,echo=F>>=
\end_layout

\begin_layout Plain Layout

<<amel130>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Amelia imutation results contradict}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Note the estimate here for the alcohol ~ bully linkage is about the same
 as we got with listwise deletion
\end_layout

\begin_layout Itemize
Again, I wondered if there is something wrong in the pooling, check a couple
 of models from the list
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout

<<amel600>>=
\end_layout

\begin_layout Plain Layout

summary(ord.amelia.fits[[1]])
\end_layout

\begin_layout Plain Layout

summary(ord.amelia.fits[[4]])
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
If This were for real
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Changes I would make}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The alcohol variables have empty or very small cells.
 All of the lavaan runs for ordinal models warn us about that.
 I'd probably combine levels 3, 4, 5
\end_layout

\begin_layout Itemize
Raise number of imputations to 20
\end_layout

\begin_layout Itemize
Include more auxiliary variables in the imputation model
\end_layout

\begin_layout Itemize
Fix semTable to 
\end_layout

\begin_deeper
\begin_layout Itemize
show the number of cases used in the results
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{References}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../../../sem/sem"
options "apacitex"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Session}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sess10>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<opts20, include=F, echo=F>>=
\end_layout

\begin_layout Plain Layout

## Don't delete this.
 It puts the interactive session options
\end_layout

\begin_layout Plain Layout

## back the way they were.
 If this is compiled within a session
\end_layout

\begin_layout Plain Layout

## it is vital to do this.
\end_layout

\begin_layout Plain Layout

options(opts.orig)
\end_layout

\begin_layout Plain Layout

options(par.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
