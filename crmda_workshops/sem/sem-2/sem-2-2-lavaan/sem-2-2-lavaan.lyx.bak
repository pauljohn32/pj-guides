#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}
\usepackage{array}
\usepackage{longtable}
\usepackage{graphicx}
\newcommand\makebeamertitle{\frame{\maketitle}}%
\renewcommand{\doiprefix}{doi:\kern-1pt}
\setlength{\bibsep}{10pt}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
%for bold upright roman in math for matrix algebra
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}

%%\input{theme/guidePreambleSweavel.tex} 
%%% From beamer slide:
\usepackage{Sweave}
%% 
%% This controls display of code chunks
\usepackage{ae,fancyvrb,relsize,listings}

\providecommand{\Sweavesize}{\normalsize}
\providecommand{\Rsize}{}
\renewcommand{\Rsize}{\normalsize}
\providecommand{\Routsize}{\scriptsize}

\providecommand{\Rcolor}{\color[rgb]{0.1, 0.1, 0.1}}
\providecommand{\Routcolor}{\color[rgb]{0.2, 0.2, 0.2}}
\providecommand{\Rcommentcolor}{\color[rgb]{0.101, 0.43, 0.432}}

\providecommand{\Rbackground}{\color[gray]{0.91}}
\providecommand{\Routbackground}{\color[gray]{0.935}}
% Can specify \color[gray]{1} for white background or just \color{white}

\lstdefinestyle{Rinput}{
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  basicstyle=\Rsize\Rcolor\ttfamily,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%,
  commentstyle=\Rcommentcolor\ttfamily,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1{==}{{=\,=}}2{--}{{-\,-}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},%
  backgroundcolor=\Rbackground,%
  numbers=left,%
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}%

% Other options of interest:
% frame=single,framerule=0.1pt,framesep=1pt,rulecolor=\color{blue},
% numbers=left,numberstyle=\tiny,stepnumber=1,numbersep=7pt,
% keywordstyle={\bf\Rcolor}

\lstdefinestyle{Routput}{fancyvrb=false,
  literate={~}{{$\sim$}}1{R^2}{{$R^{2}$}}2{^}{{$^{\scriptstyle\wedge}$}}1{R-squared}{{$R^{2}$}}2,%
  basicstyle=\Routcolor\Routsize\ttfamily,%
  backgroundcolor=\Routbackground,
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1 {==}{{=\,=}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},
  numbers=left,
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}

\renewenvironment{Schunk}{}{}
\renewenvironment{Sinput}{}{}
\let\Sinput\relax
\let\Scode\relax
\let\Soutput\relax
\lstnewenvironment{Sinput}{\lstset{style=Rinput}}{}
\lstnewenvironment{Scode}{\lstset{style=Rinput}}{}
\lstnewenvironment{Soutput}{\lstset{style=Routput}}{}
%%end paste in from guidePreambleSweavel.tex


\lstset{tabsize=2, breaklines=true, style=Rinput, breakatwhitespace=true}

\fvset{listparameters={\setlength{\topsep}{0em}}}

\usepackage{xcolor}
\definecolor{light-gray}{gray}{0.90}
\usepackage{realboxes}
\providecommand*{\code}[1]{\texttt{#1}}
\renewcommand{\code}[1]{%
\Colorbox{light-gray}{#1}%
}%
%% end of paste

\usepackage[natbibapa]{apacite}

\definecolor{darkblue}{HTML}{1e2277}

%would be in beamerthemekucrmda%
\mode<presentation>
\definecolor{kublue}{RGB}{0,81,186}
\usefonttheme{professionalfonts}
\useoutertheme{infolines}
\useinnertheme{rounded}
%disable rounded for alert and example boxes%
\setbeamertemplate{blocks}[default]
\usecolortheme{whale}
\usecolortheme{orchid}
\setbeamercolor{structure}{bg=kublue,fg=kublue!90!black}
%\setbeamercolor{structure}{fg=kublue}
\setbeamercolor{frametitle}{bg=kublue}
\setbeamercolor{section in toc}{fg=kublue!40!black}

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}
\beamertemplatenavigationsymbolsempty
%end of beamerthemekucrmda%

%If you want bigger margins, try this:
\setbeamersize{text margin left=05mm,text margin right=10mm} 
\hypersetup{colorlinks,allcolors=.,urlcolor=darkblue}
%Following seems to have no effect now
%\usepackage{handoutWithNotes}
%\pgfpagesuselayout{3 on 1 with notes}[letterpaper, border shrink=5mm]

\titlegraphic{\includegraphics[width=6cm]{theme/logo}}
\logo{\includegraphics[width=5mm]{theme/logomini}}
\end_preamble
\options aspectratio=1609
\use_default_options false
\begin_modules
logicalmkup
sweave
natbibapa
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style 
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch semboot
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\branch cfalvm
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%following is LyX shortcut 
\backslash
vb for bold upright math for matrices
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\vb}[1]{\bm{\mathrm{#1}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch R
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% tmpout directory must exist first
\end_layout

\begin_layout Plain Layout

<<tmpout, echo=F, include=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

tmpout <- "tmpout"
\end_layout

\begin_layout Plain Layout

if(!dir.exists(tmpout)) dir.create(tmpout, showWarnings=FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=tmpout/t,split=F,ae=F,height=4.5,width=7}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<excludemeRoptions, echo=F>>=
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE)
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

par.orig <- par(no.readonly = TRUE) 
\end_layout

\begin_layout Plain Layout

pjmar <- c(4.1, 4.1, 1.5, 2.1)
\end_layout

\begin_layout Plain Layout

par(mar=pjmar, ps=11)
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12, xpd=F)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

if(!file.exists("theme")) file.symlink("../../../../template/theme", "theme")
\end_layout

\begin_layout Plain Layout

if(!file.exists(tmpout)) dir.create(tmpout, showWarnings=F)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<excludemezhidden, echo=F, include=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

opts.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=100, prompt = " ", continue = "  ")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
SEM with lavaan: syntax overview 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
lavaan
\end_layout

\end_inset


\end_layout

\begin_layout Author
Ben Kite
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

, Paul Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

, and others
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Kite, Johnson, et al
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Center for Research Methods and Data Analysis 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

 Previous GRAs, including but not limited to Terry Jorgensen, Sunthud Pornpraser
tmanit, Jared Harpole 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Date
2018
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSubsection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsubsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frametitle{Outline}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{There is no SEM in R base}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Neither R 
\begin_inset CommandInset citation
LatexCommand citep
key "RCore"

\end_inset

 nor any of the required or recommended packages distributed with it include
 structural equation models.
 But, 
\begin_inset Formula $\ldots$
\end_inset


\end_layout

\begin_layout Itemize
R includes a programming language and functions with which SEM estimators
 have been created
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{SEM packages}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sem()
\end_layout

\end_inset

 in the 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
car
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 package by John Fox.
 Nearly as old as R itself
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lavaan
\end_layout

\end_inset

, a package prepared by Yves Rosseel, who intends a function-by-function
 replication of the results in Mplus
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
OpenMX
\end_layout

\end_inset

 , a long-standing matrix calculation framework spearheaded by Steven Bolker,
 which has been re-written as an R package.
\end_layout

\begin_layout Itemize
Various other R packages exist, either as wholesale replacements (
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lava
\end_layout

\end_inset

) or as supplementary tools (
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semPlot
\end_layout

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Here we are focused on lavaan}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lavaan
\end_layout

\end_inset

 is the closest to a 
\begin_inset Quotes eld
\end_inset

full suite
\begin_inset Quotes erd
\end_inset

 of SEM tools needed by researchers
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lavaan
\end_layout

\end_inset

 includes many different estimation algorithms (FIML, WLSMV, etc)
\end_layout

\begin_layout Itemize
There is a comprehensive essay,
\end_layout

\begin_deeper
\begin_layout Standard
Rosseel, Yves (2012).
 lavaan: An R Package for Structural Equation Modeling.
 
\emph on
Journal of Statistical Software
\emph default
, 48(2), 1 - 36.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

doi:http://dx.doi.org/10.18637/jss.v048.i02
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Its author, Yves Rosseel, has demonstrated an extremely high willingness
 to interact with users and design new features when needs arise
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
For examples: the affect data
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Use affect data}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This data is about positive and negative affect.
 We use it in several of our training workshops
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

ddir <- "data"
\end_layout

\begin_layout Plain Layout

fn <- "affect-2.csv"
\end_layout

\begin_layout Plain Layout

dat <- read.csv(file.path(ddir, fn))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
tiny}
\end_layout

\begin_layout Plain Layout

<<agencyhead>>=
\end_layout

\begin_layout Plain Layout

head(dat)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
lavaan usage
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Quick Jargon review}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Indicators: The observed (aka 
\begin_inset Quotes eld
\end_inset

manifest
\begin_inset Quotes erd
\end_inset

) variables 
\end_layout

\begin_layout Description
Latent
\begin_inset space ~
\end_inset

variables: (aka 
\begin_inset Quotes eld
\end_inset

factors
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

latent constructs
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

common factors
\begin_inset Quotes erd
\end_inset

): unobserved variables thought to be the things we are truly interested
 in.
 We'd really like to study the relationship among them, but we are unable
 to do so.
\end_layout

\begin_layout Description
factor
\begin_inset space ~
\end_inset

loadings: the coefficients which indicate how tightly an indicator is linked
 to the latent variable.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{lavaan's "model fitting" functions}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The key lavaan modeling functions are
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lavaan()
\end_layout

\end_inset

: a general model fitter
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sem()
\end_layout

\end_inset

: a convenience 
\begin_inset Quotes eld
\end_inset

wrapper
\begin_inset Quotes erd
\end_inset

 for 
\emph on
fitting structural equation models
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
cfa()
\end_layout

\end_inset

: A convenience for 
\emph on
confirmatory factor analysis
\end_layout

\begin_layout Itemize
Def.
 
\begin_inset Quotes eld
\end_inset

wrapper
\begin_inset Quotes erd
\end_inset

: a function that receives the input, supplies other default parameters,
 and then asks other functions to do their work (in this case, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lavaan
\end_layout

\end_inset

)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Seemingly overwhelming number of arguments}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The help pages for 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sem
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
cfa
\end_layout

\end_inset

 list a lot of arguments
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

library(lavaan)
\end_layout

\begin_layout Plain Layout

##Run:
\end_layout

\begin_layout Plain Layout

?lavaan
\end_layout

\begin_layout Plain Layout

?parameterEstimates
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The most important arguments}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
model
\end_layout

\end_inset

: a formula (character variable representing a formula)
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
data
\end_layout

\end_inset

: name of data.frame containing variables
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
estimator
\end_layout

\end_inset

: model estimator, defaults to 
\begin_inset Quotes eld
\end_inset

ML
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ordered
\end_layout

\end_inset

: vector of variables to be treated as ordered-categorical
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Model Formula
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Start with R regression syntax}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
A regression in R:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<regr10, echo=T>>=
\end_layout

\begin_layout Plain Layout

mod1 <- lm(PosAFF1 ~ Agency1 + Intrin1, data = dat)
\end_layout

\begin_layout Plain Layout

summary(mod1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The syntax for the formula 
\begin_inset Quotes eld
\end_inset

PosAFF1 ~ Agency1 + Intrin1
\begin_inset Quotes erd
\end_inset

 is 
\emph on
in
\emph default
 the function call.
\end_layout

\begin_layout Itemize
We could write the formula separately, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
fmla2
\end_layout

\end_inset

, then use the formula in the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lm()
\end_layout

\end_inset

 function
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<regr20, echo=T, eval=F>>=
\end_layout

\begin_layout Plain Layout

fmla2 <- "PosAFF1 ~ Agency1 + Intrin1"
\end_layout

\begin_layout Plain Layout

mod2 <- lm(fmla2, data = dat)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
SEM are 
\begin_inset Quotes eld
\end_inset

larger
\begin_inset Quotes erd
\end_inset

 formulas, so we take that 2-step approach.
 Usually.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Lavaan formula-writing tools}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status open

\begin_layout Plain Layout
=~
\end_layout

\end_inset

 defines latent variables (measurement models)
\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status open

\begin_layout Plain Layout
~~
\end_layout

\end_inset

 sets covariances between latent variables
\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status open

\begin_layout Plain Layout
~
\end_layout

\end_inset

 is for regression, as in R regression
\end_layout

\begin_layout Standard
Will now illustrate
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{lavaan symbol "=$
\backslash
sim$"}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Syntax for linkage between observed 
\begin_inset Quotes eld
\end_inset

indicators
\begin_inset Quotes erd
\end_inset

 and unmeasured 
\begin_inset Quotes eld
\end_inset

latent
\begin_inset Quotes erd
\end_inset

 variables is like so:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

cfa.mod <- '
\end_layout

\begin_layout Plain Layout

a_latent_variable =~ indicator1 + indicator2 + indicator3
\end_layout

\begin_layout Plain Layout

'
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
a_latent_variable
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 whatever name we want.
 Could be 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
xi_1
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 or anything else.
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
indicator1
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
indicator2
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
indicator3
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 must be a variables named in the data frame
\end_layout

\begin_deeper
\begin_layout Itemize
Example
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

cfa.mod <- '
\end_layout

\begin_layout Plain Layout

Agency =~ Agency1 + Agency2 + Agency3
\end_layout

\begin_layout Plain Layout

'
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Some pressure to keep variable names short, to make typing easier
\end_layout

\begin_layout Itemize
You can use single or double quotes
\end_layout

\begin_layout Itemize
Line breaks are visual enhancement, which lavaan understands correctly
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
framebreak
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
lavaan 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
=~
\end_layout

\end_inset

 syntax looks backwards to some.
 Math would have indicators on left, and the latent variable on right:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\begin{align*}
Agency1_{i} & =\alpha_{1}+\lambda_{1}Agency_{i}+\varepsilon_{1i}\\
Agency2_{i} & =\alpha_{2}+\lambda_{2}Agency_{i}+\varepsilon_{2i}\\
Agency3_{i} & =\alpha_{3}+\lambda_{3}Agency_{i}+\varepsilon_{3i}
\end{align*}

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
book-keeping
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $i$
\end_inset

 is a 
\begin_inset Quotes eld
\end_inset

case
\begin_inset Quotes erd
\end_inset

 index (people in survey)
\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha$
\end_inset

 (alpha) is the 
\begin_inset Quotes eld
\end_inset

intercept
\begin_inset Quotes erd
\end_inset

 (often called 
\begin_inset Quotes eld
\end_inset

mean
\begin_inset Quotes erd
\end_inset

 b/c it is expected value when LV is 0)
\end_layout

\begin_layout Itemize
\begin_inset Formula $\lambda$
\end_inset

 (lambda) is the factor loading
\end_layout

\begin_layout Itemize
\begin_inset Formula $\varepsilon_{ji}$
\end_inset

 the error term 2 subscripts, one for the equation and one for the individual
 case
\end_layout

\end_deeper
\begin_layout Itemize
Mplus, a leading commercial program, introduced that backwards syntax.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[plain, allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Assignment: Make a lavaan formula for this}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/Slide8.png
	lyxscale 40
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
See hints next slides
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
framebreak
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Hint 1: You must use names of actual variables on RHS.
 Run 
\begin_inset Quotes eld
\end_inset

colnames(dat)
\begin_inset Quotes erd
\end_inset

 to see the column names.
\end_layout

\begin_layout Standard
Hint 2: Fill in 5 rows of formulae
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=R,basicstyle={\ttfamily},tabsize=3"
inline false
status open

\begin_layout Plain Layout

cfa.mod <- '
\end_layout

\begin_layout Plain Layout

Agency =~ Agency1 + Agency? + ?
\end_layout

\begin_layout Plain Layout

? =~ ? + ? + ?
\end_layout

\begin_layout Plain Layout

? =~ ? + ? + ?
\end_layout

\begin_layout Plain Layout

'
\end_layout

\end_inset


\end_layout

\begin_layout Standard
On LHS, you can choose whatever latent variable name you want!
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{You should end up with something like this}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav10>>=
\end_layout

\begin_layout Plain Layout

cfa.mod <- '
\end_layout

\begin_layout Plain Layout

Agency =~ Agency1 + Agency2 + Agency3
\end_layout

\begin_layout Plain Layout

Intrinsic =~ Intrin1 + Intrin2 + Intrin3
\end_layout

\begin_layout Plain Layout

Extrinsic =~ Extrin1 + Extrin2 + Extrin3
\end_layout

\begin_layout Plain Layout

Positive =~ PosAFF1 + PosAFF2 + PosAFF3
\end_layout

\begin_layout Plain Layout

Negative =~ NegAFF1 + NegAFF2 + NegAFF3
\end_layout

\begin_layout Plain Layout

'
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
One lesson: Pick simpler names.
 Wish we had them!
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Could instead write out one element per indicator}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

cfa.mod <- '
\end_layout

\begin_layout Plain Layout

Agency =~ Agency1
\end_layout

\begin_layout Plain Layout

Agency =~ Agency2
\end_layout

\begin_layout Plain Layout

Agency =~ Agency3
\end_layout

\begin_layout Plain Layout

Intrinsic =~ Intrin1
\end_layout

\begin_layout Plain Layout

Intrinsic =~ Intrin2
\end_layout

\begin_layout Plain Layout

Intrinsic =~ Intrin3
\end_layout

\begin_layout Plain Layout

Extrinsic =~ Extrin1
\end_layout

\begin_layout Plain Layout

Extrinsic =~ Extrin2
\end_layout

\begin_layout Plain Layout

Extrinsic =~ Extrin3
\end_layout

\begin_layout Plain Layout

Positive =~ PosAFF1
\end_layout

\begin_layout Plain Layout

Positive =~ PosAFF2
\end_layout

\begin_layout Plain Layout

Positive =~ PosAFF3
\end_layout

\begin_layout Plain Layout

Negative =~ NegAFF1
\end_layout

\begin_layout Plain Layout

Negative =~ NegAFF2
\end_layout

\begin_layout Plain Layout

Negative =~ NegAFF3
\end_layout

\begin_layout Plain Layout

'
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
That is verbose, we don't generally write it that way
\end_layout

\begin_layout Itemize
This may be easier in very large projects where functions are writing out
 the formula for us.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Another lavaan symbol: Covariance "$
\backslash
sim
\backslash
sim$"}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
To estimate the covariance between two latent variables, the symbol 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
~~
\end_layout

\end_inset

 (that's two tilde) is used.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

latent1 ~~ latent2
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Must use same latent variable names as are declared in the indicator part
 of the model.
\end_layout

\begin_layout Itemize
Some models assume covariance must be estimated, even if we don't request
 it (will see example)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{In lavaan, $
\backslash
sim$ represents a regression}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The symbol 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
latentA
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
~
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
latentB
\end_layout

\end_inset

 indicates that 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
latentB
\end_layout

\end_inset

 predicts 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
latentA
\end_layout

\end_inset

 in the regression sense.
\end_layout

\begin_layout Standard
We ask SEM to calculate coefficients for a regression model:
\begin_inset Formula 
\[
latentA_{i}=\beta_{0}+\beta_{1}latentB_{i}+v_{i}
\]

\end_inset


\end_layout

\begin_layout Standard
These slope coefficients represent 
\begin_inset Quotes eld
\end_inset

directionality
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Standard
Rather than covarying, latentB predicts latentA (could be a causal relationship).
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Coefficients can be named for future reference}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In lavaan formulae, coefficients can be named
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lavformula100>>=
\end_layout

\begin_layout Plain Layout

latentA ~ beta1*latentB
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Run our CFA
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Example model syntax for Confirmatory Factor Analysis}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav10b, eval=F>>=
\end_layout

\begin_layout Plain Layout

<<lav10>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Note, we do not include any 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
~~
\end_layout

\end_inset

 symbols here 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Estimate with cfa}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav20a>>=
\end_layout

\begin_layout Plain Layout

cfa1 <- cfa(cfa.mod, data = dat)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If there is no output, the model was estimated without errors
\end_layout

\begin_layout Itemize
If you did not do it yet, read 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
?cfa
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
As in other R model fitters, the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
summary()
\end_layout

\end_inset

 method is used to overview the results
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav20b>>=
\end_layout

\begin_layout Plain Layout

summary(cfa1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Why did we use cfa, not lavaan, to fit that?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Could have used the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lavaan()
\end_layout

\end_inset

 function, 
\end_layout

\begin_layout Itemize
But 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
cfa()
\end_layout

\end_inset

 has customized settings
\end_layout

\begin_layout Itemize
See 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
?cfa
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
cfa()
\end_layout

\end_inset

 sets defaults that are customary for confirmatory factor analysis.
\end_layout

\begin_deeper
\begin_layout Itemize
Estimate observed variable intercepts
\end_layout

\begin_layout Itemize
set the means of the latent variables to 0
\end_layout

\begin_layout Itemize
fix the loading for the first indicator to 1 (unless std.lv = TRUE), and
 
\end_layout

\begin_layout Itemize
estimate the covariances between latent variables (even though we did not
 explicitly ask for them).
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{CFA assumes you want to estimate variances among the latent variables
: "$
\backslash
sim
\backslash
sim$"}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Reminder: covariance estimate is requested by 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
latent1
\end_layout

\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
~~
\end_layout

\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
latent2
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Itemize
We could have asked, explicitly, for covariances 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav50a>>=
\end_layout

\begin_layout Plain Layout

cfa.mod2 <- '
\end_layout

\begin_layout Plain Layout

Agency =~ Agency1 + Agency2 + Agency3
\end_layout

\begin_layout Plain Layout

Intrinsic =~ Intrin1 + Intrin2 + Intrin3
\end_layout

\begin_layout Plain Layout

Extrinsic =~ Extrin1 + Extrin2 + Extrin3
\end_layout

\begin_layout Plain Layout

Positive =~ PosAFF1 + PosAFF2 + PosAFF3
\end_layout

\begin_layout Plain Layout

Negative =~ NegAFF1 + NegAFF2 + NegAFF3
\end_layout

\begin_layout Plain Layout

Agency ~~ Intrinsic
\end_layout

\begin_layout Plain Layout

Agency ~~ Extrinsic
\end_layout

\begin_layout Plain Layout

Agency ~~ Positive
\end_layout

\begin_layout Plain Layout

Agency ~~ Negative
\end_layout

\begin_layout Plain Layout

Intrinsic ~~ Extrinsic
\end_layout

\begin_layout Plain Layout

Intrinsic ~~ Positive
\end_layout

\begin_layout Plain Layout

Intrinsic ~~ Negative
\end_layout

\begin_layout Plain Layout

Extrinsic ~~ Positive
\end_layout

\begin_layout Plain Layout

Extrinsic ~~ Negative
\end_layout

\begin_layout Plain Layout

Positive ~~ Negative
\end_layout

\begin_layout Plain Layout

'
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
But cfa makes this unnecessary, we 
\begin_inset Quotes eld
\end_inset

got them for free
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Digression about symbols and formulae
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[plain,allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The mathematical formula}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Writing out each equation for each indicator will be exhausting
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
Agency1_{i} & =\alpha_{11}+\lambda_{11}Agency_{i}+\varepsilon_{11i}\\
Agency2_{i} & =\alpha_{12}+\lambda_{21}Agency_{i}+\varepsilon_{12i}\\
Agency3_{i} & =\alpha_{13}+\lambda_{31}Agency_{i}+\varepsilon_{13i}\\
Extrin1_{i} & =\alpha_{21}+\lambda_{42}Extrinsic{}_{i}+\varepsilon_{21i}\\
Extrin2_{i} & =\alpha_{22}+\lambda_{52}Extrinsic_{i}+\varepsilon_{22i}\\
Extrin3_{i} & =\alpha_{23}+\lambda_{62}Extrinsic_{i}+\varepsilon_{23i}\\
 & \mathrm{and}\:\mathrm{so\:forth}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Now I'm thinking in Matrix terms}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I'll just write out 2 LV's worth
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left[\begin{array}{c}
Agency1_{i}\\
Agency2_{i}\\
Agency3_{i}\\
Extrin1_{i}\\
Extrin2_{i}\\
Extrin3_{i}
\end{array}\right]=\left[\begin{array}{c}
\alpha_{11}\\
\alpha_{12}\\
\alpha_{13}\\
\alpha_{21}\\
\alpha_{22}\\
\alpha_{23}
\end{array}\right]+\left[\begin{array}{cc}
\lambda_{11} & 0\\
\lambda_{21} & 0\\
\lambda_{31} & 0\\
0 & \lambda_{42}\\
0 & \lambda_{52}\\
0 & \lambda_{62}
\end{array}\right]\left[\begin{array}{c}
Agency_{i}\\
Extrinsic_{i}
\end{array}\right]+\left[\begin{array}{c}
\varepsilon_{11i}\\
\varepsilon_{12i}\\
\varepsilon_{13i}\\
\varepsilon_{21i}\\
\varepsilon_{23i}\\
\varepsilon_{23i}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Standard
Subscripts on loading coefficients: subscript 1 is 
\begin_inset Quotes eld
\end_inset

row
\begin_inset Quotes erd
\end_inset

, subscript 2 is 
\begin_inset Quotes eld
\end_inset

column
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Matrix view}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Try to get used to the matrix 
\begin_inset Quotes eld
\end_inset

LISREL
\begin_inset Quotes erd
\end_inset

 notation
\begin_inset Formula 
\[
\vb x_{i}=\vb{\alpha}+\vb{\Lambda}\vb{\xi}_{i}+\vb{\varepsilon}_{i}
\]

\end_inset


\end_layout

\begin_layout Itemize
The latent variable vector is 
\begin_inset Formula $\vb{\xi}_{i}$
\end_inset

, as in 
\begin_inset Formula 
\[
\vb{\xi}_{i}=\left[\begin{array}{c}
\xi_{1i}\\
\xi_{2i}
\end{array}\right]=\left[\begin{array}{c}
Agency_{i}\\
Extrinsic_{i}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
one row per latent variable
\end_layout

\end_deeper
\begin_layout Itemize
observed variables 
\begin_inset Formula $\vb x_{i}$
\end_inset

, all indicators 
\begin_inset Quotes eld
\end_inset

stacked
\begin_inset Quotes erd
\end_inset

 in one column
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\vb x_{i}=\left[\begin{array}{c}
Agency1_{i}\\
Agency2_{i}\\
Agency3_{i}\\
Extrin1_{i}\\
Extrin2_{i}\\
Extrin3_{i}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
and error terms 
\begin_inset Formula $\vb{\varepsilon}_{i}$
\end_inset


\end_layout

\begin_layout Itemize
means (or intercepts) 
\begin_inset Formula $\vb{\alpha}$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
The loading matrix is 
\begin_inset Formula $\vb{\Lambda}$
\end_inset

 (capital lambda), it has one column per latent variable.
 
\end_layout

\begin_deeper
\begin_layout Itemize
possible assumed loadings
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="1in">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="1in">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Completely General
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[\begin{array}{cc}
\lambda_{11} & \lambda_{12}\\
\lambda_{21} & \lambda_{22}\\
\lambda_{31} & \lambda_{32}\\
\lambda_{41} & \lambda_{42}\\
\lambda_{51} & \lambda_{52}\\
\lambda_{61} & \lambda_{62}
\end{array}\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
More usual has plenty of 0's:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[\begin{array}{cc}
\lambda_{11} & 0\\
\lambda_{21} & 0\\
\lambda_{31} & 0\\
0 & \lambda_{42}\\
0 & \lambda_{52}\\
0 & \lambda_{62}
\end{array}\right]$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
And the whole model would be 
\begin_inset Formula 
\[
\vb x_{i}=\vb{\alpha}+\vb{\Lambda}\vb{\xi}_{i}+\vb{\varepsilon}_{i}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Coefficient Scaling
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Did you notice loadings = 1.0 in CFA output?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
It is not possible to estimate, at the same time, all of the loadings and
 variances.
 
\end_layout

\begin_layout Itemize
We must set the scale of some coefficients, then we estimate the others
\end_layout

\begin_layout Itemize
lavaan used the 
\begin_inset Quotes eld
\end_inset

marker variable
\begin_inset Quotes erd
\end_inset

 method (Lindell & Whitney, 2001), because for each latent variable a single
 variable was selected to determine the scale.
\end_layout

\begin_layout Itemize
Another commonly used method is to fix the variance of the latent variables
 at 1.0 (thus allowing the loadings to float freely)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Obtain "standardized latent variable" estimates}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav30a>>=
\end_layout

\begin_layout Plain Layout

cfa3 <- cfa(cfa.mod, data = dat, std.lv = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav30b>>=
\end_layout

\begin_layout Plain Layout

summary(cfa3)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note: The variances of Agency, Intrinsic, etc, are 1.0 because we selected
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
std.lv = TRUE
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Estimation Methods
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Estimation methods}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
estimator
\end_layout

\end_inset

 argument in lavaan functions determines the method of estimation
\end_layout

\begin_layout Itemize
ML: Maximum Wishart likelihood of the complete cases (listwise-delete missings)
\end_layout

\begin_deeper
\begin_layout Itemize
Choose estimates to make the observed covariance matrix most likely 
\end_layout

\begin_layout Itemize
If 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
missing = 
\begin_inset Quotes eld
\end_inset

fiml
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

, then Full Information Maximum Likelihood is used to avoid listwise deletion
\end_layout

\end_deeper
\begin_layout Itemize
WLSMV: weighted least squares with a mean and variance adjustment
\end_layout

\begin_deeper
\begin_layout Itemize
Standard error estimates that are 
\begin_inset Quotes eld
\end_inset

robust
\begin_inset Quotes erd
\end_inset

 to violations of multivariate normality
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Bootstrap estimates are also included}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The robust estimators of the standard errors are approximate, but they are
 widely used.
\end_layout

\begin_layout Itemize
lavaan functions include a bootstrap argument
\end_layout

\begin_layout Itemize
Why? In small samples, or when parameter distributions are unknown, this
 is a popular method to evaluate uncertainty.
\end_layout

\begin_layout Itemize
The bootstrap estimator will draw repeated random samples and re-estimate
 the model.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Explore Fitted lavaan Objects
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks, containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{summary}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
summary()
\end_layout

\end_inset

 method in lavaan generates estimate tables and some summary information.
\end_layout

\begin_layout Itemize
Observant readers might have noticed that the default output, obtained from
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

summary(cfa1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
did not include the 
\begin_inset Quotes eld
\end_inset

fit measures
\begin_inset Quotes erd
\end_inset

 that are often offered with CFA and SEM output in other software.
\end_layout

\end_deeper
\begin_layout Itemize
Two ways to deal with that.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Requests fits in summary function
\end_layout

\begin_layout Enumerate
Inspect model fit measures separately.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks, containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{summary with additional details}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
First, we will insert a request for 
\series bold
fit measures
\series default
 and the 
\series bold
rsquare
\series default
 into the summary output.
 The result looks quite a bit more like Mplus.
 We select ci=FALSE to reduce the width of the output
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
footnotesize}
\end_layout

\begin_layout Plain Layout

<<echo=T>>=
\end_layout

\begin_layout Plain Layout

summary(cfa3, rsquare = TRUE, fit.measures = TRUE, ci = FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
What other details could we ask for? We checked the lavaan source code,
 where we find the summary function allows these flags:
\end_layout

\begin_deeper
\begin_layout Itemize
header (default: TRUE)
\end_layout

\begin_layout Itemize
fit.measures (default: FALSE)
\end_layout

\begin_layout Itemize
estimates (default: TRUE)
\end_layout

\begin_layout Itemize
ci (default: FALSE)
\end_layout

\begin_layout Itemize
fmi (default: FALSE)
\end_layout

\begin_layout Itemize
standardized (default: FALSE)
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Itemize
rsquare (default: FALSE)
\end_layout

\begin_layout Itemize
std.nox (default: FALSE)
\end_layout

\begin_layout Itemize
modindices (default: FALSE)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks, containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{parameterEstimates}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
lavaan's 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
summary
\end_layout

\end_inset

 output is created by separate functions which can be accessed directly.
 
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
parameterEstimates()
\end_layout

\end_inset

 is doing most of the actual work.
 
\end_layout

\begin_layout Itemize
The relevant arguments for 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
parameterEstimates()
\end_layout

\end_inset

 are 
\end_layout

\begin_deeper
\begin_layout Itemize
se (default: TRUE) Show standard errors?
\end_layout

\begin_layout Itemize
zstat (default: TRUE) Show Z, ratio of estimate to standard error
\end_layout

\begin_layout Itemize
pvalue (default: TRUE) Show p value
\end_layout

\begin_layout Itemize
ci (default: TRUE) Show confidence interval
\end_layout

\begin_layout Itemize
level (default: 0.95) Confidence level required to calculate ci
\end_layout

\begin_layout Itemize
boot.ci.type: (default: 
\begin_inset Quotes eld
\end_inset

perc
\begin_inset Quotes erd
\end_inset

) Confidence interval for bootstrapped models
\end_layout

\begin_layout Itemize
standardized (default: FALSE) Add standardized parameter estimates
\end_layout

\begin_layout Itemize
fmi (default: FALSE) Show fraction of missing information, for 
\begin_inset Quotes eld
\end_inset

FIML
\begin_inset Quotes erd
\end_inset

 models
\end_layout

\begin_layout Itemize
remove.system.eq (default: TRUE) Hide user-constrained parameters
\end_layout

\begin_layout Itemize
remove.eq (default.eq: TRUE) Hide system-generated constraints
\end_layout

\begin_layout Itemize
remove.ineq (default: TRUE) Hide inequality constraints
\end_layout

\begin_layout Itemize
remove.def (default: FALSE) Hide parameter definitions
\end_layout

\begin_layout Itemize
rsquare (default: FALSE) Add rows for the R-square
\end_layout

\end_deeper
\begin_layout Itemize
The default output was too wide for these slides, so we don't look at p
 or ci.
 Here are the first 15 lines:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav40a,eval=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

parameterEstimates(cfa3, pvalue = FALSE, ci = FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav40b,echo=F>>=
\end_layout

\begin_layout Plain Layout

head(parameterEstimates(cfa3, pvalue = FALSE, ci = FALSE), 15)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{parTable}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
parTable()
\end_layout

\end_inset

: create a data.frame object that holds the estimated values, with one row
 per parameter:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav45,echo=T>>=
\end_layout

\begin_layout Plain Layout

cfa3.df <- parTable(cfa3)
\end_layout

\begin_layout Plain Layout

head(cfa3.df, 10)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{fitMeasures}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
A comprehensive list of fit indicators is returned by 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
fitMeasures(cfa1)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav50a>>=
\end_layout

\begin_layout Plain Layout

fitMeasures(cfa1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Just a few measures? How about the CFI and RMSEA only?
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav50b>>=
\end_layout

\begin_layout Plain Layout

fitMeasures(cfa1, fit.measures = c("cfi", "rmsea"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
fitMeasures
\end_layout

\end_inset

, you will see the list of all possible fit.measures is not fully documented,
 but it 
\emph on
at least 
\emph default
includes:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Soutput}
\end_layout

\begin_layout Plain Layout

"cfi","tli","nnfi","pnfi","rfi","nfi", 
\end_layout

\begin_layout Plain Layout

"ifi","rmsea","rmsea.ci.lower","rmsea.ci.upper", 
\end_layout

\begin_layout Plain Layout

"rmsea.pvalue","rmr", "srmr", "wrmr","agfi", "pgfi", "mfi", "ecvi",     
         
\end_layout

\begin_layout Plain Layout

"baseline.chisq", "baseline.pvalue", "baseline.df"
\end_layout

\begin_layout Plain Layout


\backslash
end{Soutput}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{CFA Commentary}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The model appears to fit well, 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
all factor loadings are significant, and the 
\end_layout

\begin_layout Itemize
standardized factor loadings indicate strong correlations between indicators
 and constructs.
\end_layout

\end_deeper
\begin_layout Itemize
However, we did not explicitly model the relationships among the latent
 variables.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
We don't have 
\begin_inset Quotes eld
\end_inset

Agency
\begin_inset Quotes erd
\end_inset

 as predictor of 
\begin_inset Quotes eld
\end_inset

Positive
\begin_inset Quotes erd
\end_inset

 affect.
 
\end_layout

\begin_layout Itemize
The CFA fits 
\begin_inset Quotes eld
\end_inset

unstructured covariances
\begin_inset Quotes erd
\end_inset

 between latent variables, not 
\begin_inset Quotes eld
\end_inset

directional regression relationships
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Other follow-up functions}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Other standard R accessor functions are available in lavaan
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav55, eval=F>>=
\end_layout

\begin_layout Plain Layout

coef(sem1)
\end_layout

\begin_layout Plain Layout

fitted(sem1)
\end_layout

\begin_layout Plain Layout

resid(sem1)
\end_layout

\begin_layout Plain Layout

anova(sem1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If you run those things, you will notice some wrinkles.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Notice that predicted observations (and residuals) are not 1-per-person
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
anova()
\end_layout

\end_inset

 returns a chi-squared test that indicates there are 0 degrees of freedom
 (that's an SEM concept).
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Presentable Tables
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks, containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{A nice output table}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav70, results=tex>>=
\end_layout

\begin_layout Plain Layout

library(kutils)
\end_layout

\begin_layout Plain Layout

lav70 <- semTable(cfa3, fits = c("cfi", "rmsea"), longtable = TRUE,
\end_layout

\begin_layout Plain Layout

         file = file.path(tmpout, "lav70"), print.results=FALSE)
\end_layout

\begin_layout Plain Layout

cat(lav70)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks, containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Remove unwanted "Latent Variances" component}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
See documentation for ?semTable, it lists the parameter sets that can be
 included.
 
\end_layout

\begin_layout Itemize
I don't need to see both SE and T, and never want p values.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav72a>>=
\end_layout

\begin_layout Plain Layout

lav72 <- semTable(cfa3, paramSets = c("loadings", "intercepts", "residualvarianc
es",  "latentcovariances", "fits"),  columns = c("estsestars"), fits = c("cfi",
 "rmsea"), longtable = TRUE, file = file.path(tmpout, "lav72"), print.results=FALS
E)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

/framebreak
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lav72b, results=tex>>=
\end_layout

\begin_layout Plain Layout

cat(lav72)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Plots
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks, containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Plots}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
There is no plot method for a lavaan object.
\end_layout

\begin_layout Itemize
But there are other packages devoted to creating graphics for models that
 involve path diagrams (e.g., SEM and neural networks).
  
\end_layout

\begin_layout Itemize
The path diagram is visualized here with the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
semPaths()
\end_layout

\end_inset

 function in semPlot.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<semplot10,fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

library(semPlot)
\end_layout

\begin_layout Plain Layout

semPaths(cfa1, layout = "tree2")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-semplot10}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Moderators
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What is this section about?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
We have a more detailed example of multi-group CFA in the semexamples archive
\end_layout

\begin_layout Itemize
This section is mostly about using the following lavaan features
\end_layout

\begin_deeper
\begin_layout Enumerate
Named groups
\end_layout

\begin_layout Enumerate
Named group parameters
\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status open

\begin_layout Plain Layout
anova()
\end_layout

\end_inset

 function to conduct likelihood ratio (LR) test
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
What does Moderator mean in SEM?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Moderator effects}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Moderators are categorical predictors.
\end_layout

\begin_layout Itemize
In a regression context, suppose 
\begin_inset Formula $Agency_{i}$
\end_inset

 is a continuous predictor of 
\begin_inset Formula $Positive_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Positive_{i}=\beta_{0}+\beta_{1}Agency_{i},\epsilon_{i}\sim N(0,\sigma_{\epsilon}^{2})
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
But we wonder if a categorical variable, 
\begin_inset Formula $female_{i}$
\end_inset

, causes a change in both the intercept and the slope:
\begin_inset Formula 
\begin{equation}
Positive_{i}=\beta_{0}+\beta_{1}Agency_{i}+\beta_{2}Female_{i}+\beta_{3}Agency_{i}\cdot Female_{i},\epsilon_{i}\sim N(0,\sigma_{\epsilon}^{2})
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
Here, the gender is a 
\begin_inset Quotes eld
\end_inset


\series bold
moderator
\series default

\begin_inset Quotes erd
\end_inset

 of the agency effect
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{SEM view of the moderator variable}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This sketch segregates the 2 genders entirely; we are estimating 2 separate
 sets of coefficients.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/Slide6.png
	width 8cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Estimate the Moderation Model
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{2 fits}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Moderation analysis focuses on the differences between groups.
 In this case, males and females.
\end_layout

\begin_layout Itemize
When one of the predictors in an interaction is categorical (e.g., gender),
 the sem 
\begin_inset Quotes eld
\end_inset

measurement invariance
\begin_inset Quotes erd
\end_inset

 approach would lead us to compare 
\end_layout

\begin_deeper
\begin_layout Itemize
a model in which the coefficients for the two groups are assumed to be entirely
 different, against
\end_layout

\begin_layout Itemize
a simpler model in which some coefficients might be the same 
\end_layout

\begin_layout Itemize
here, we 
\begin_inset Quotes eld
\end_inset

stay on the surface
\begin_inset Quotes erd
\end_inset

 just to show lavaan and the hypo-test.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{lavaan syntax}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The group argument in lavaan requests different loadings and intercepts
 for each group.
\end_layout

\begin_layout Itemize
We won't run the basic model
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

moderate.mod1 <- 'PosAFF1 ~ Agency1' 
\end_layout

\begin_layout Plain Layout

out.mod1 <- sem(moderate.mod1, data = dat, group = "Sex") 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
We want to name the coefficients 
\begin_inset Quotes eld
\end_inset

c(a1, a2)
\begin_inset Quotes erd
\end_inset

 so that we have a handle for them in later exercises.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<moderation99>>=
\end_layout

\begin_layout Plain Layout

moderate.mod1 <- 'PosAFF1 ~ c(a1, a2)*Agency1' 
\end_layout

\begin_layout Plain Layout

out.mod1 <- sem(moderate.mod1, data = dat, group = "Sex") 
\end_layout

\begin_layout Plain Layout

summary(out.mod1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{lavaan syntax}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This model constrains the loadings for agency to be equal to the same value
 for both sexes
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<moderation991>>=
\end_layout

\begin_layout Plain Layout

moderate.mod2 <- 'PosAFF1 ~ c(a1, a1)*Agency1' 
\end_layout

\begin_layout Plain Layout

out.mod2 <- sem(moderate.mod2, data = dat, group = "Sex") 
\end_layout

\begin_layout Plain Layout

summary(out.mod2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Obtain a likelihood ratio test}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
anova()
\end_layout

\end_inset

 function is a generic in R, it is used in many contexts for comparing models
 (even models that have nothing to do with ANOVA).
 
\end_layout

\begin_layout Itemize
In SEM, it is used to compare models, to conduct an assessment of the extent
 to which a simpler model fits the data as well as a more detailed model.
\end_layout

\begin_layout Itemize
Lavaan's implementation of anova() leads to a likelihood ratio test to compare
 the 2 fitted models
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<moderation992>>=
\end_layout

\begin_layout Plain Layout

anova(out.mod1, out.mod2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
A Path Model
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Regression relationships among latent variables}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This is the SEM! 
\end_layout

\begin_layout Itemize
Assume 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
there are 
\begin_inset Quotes eld
\end_inset

latent variables
\begin_inset Quotes erd
\end_inset

 (unmeasured personal traits)
\end_layout

\begin_layout Enumerate
assume that there is a multivariate normal relationship among those traits
\end_layout

\begin_layout Enumerate
the observed scores are a reflection of each individual's latent variables.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Big Picture}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The circles are unmeasured variables.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/Slide9.png
	width 8cm

\end_inset


\end_layout

\begin_layout Itemize
The SEM integrates 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

measurement error
\begin_inset Quotes erd
\end_inset

 analysis with 
\end_layout

\begin_layout Itemize
analysis of the underlying relationships.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Little Picture}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/RegressionSEMpj.png
	width 8cm

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{lavaan model will include named parameters}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
agency affects intrinsic motivation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Intrinsic=a_{1}Agency_{i}+\epsilon1_{i}\label{eq:intMotiv}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
positiveAffect is affected by intrinsic motivation and agency
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Positive=b_{1}Intrinsic+c\,Agency_{i}+\epsilon2_{i}\label{eq:posAffect}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
The product 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $a_{1}\cdot b_{1}$
\end_inset


\begin_inset Quotes erd
\end_inset

 is the indirect effect of agency on posAffect
\end_layout

\begin_layout Itemize
See why? Insert equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:intMotiv"

\end_inset

) into (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:posAffect"

\end_inset

):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
Positive & = & b_{1}\{a_{1}Agency_{i}+error_{i}\}+c\,Agency_{i}+\epsilon2_{i}\\
 & = & \{b_{1}\cdot a_{1}\}Agency_{i}+c\,Agency_{i}+\{\epsilon1_{i}+\epsilon2_{i}\}\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Itemize
Does the 
\begin_inset Quotes eld
\end_inset

truth
\begin_inset Quotes erd
\end_inset

 include just the direct effect 
\begin_inset Formula $c$
\end_inset

 or also the indirect effect 
\begin_inset Formula $a_{1}\cdot b_{1}$
\end_inset

?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Big lavaan formula}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch cfalvm
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<cfa30,results=hide,echo=F>>=
\end_layout

\begin_layout Plain Layout

mediat.mod.2 <- '
\end_layout

\begin_layout Plain Layout

Agency =~ Agency1 + Agency2 + Agency3
\end_layout

\begin_layout Plain Layout

Intrinsic =~ Intrin1 + Intrin2 + Intrin3
\end_layout

\begin_layout Plain Layout

Extrinsic =~ Extrin1 + Extrin2 + Extrin3
\end_layout

\begin_layout Plain Layout

Positive =~ PosAFF1 + PosAFF2 + PosAFF3
\end_layout

\begin_layout Plain Layout

Negative =~ NegAFF1 + NegAFF2 + NegAFF3
\end_layout

\begin_layout Plain Layout

Positive ~ b1*Intrinsic + Agency
\end_layout

\begin_layout Plain Layout

Negative ~ b2*Extrinsic
\end_layout

\begin_layout Plain Layout

Intrinsic ~ a1*Agency
\end_layout

\begin_layout Plain Layout

Extrinsic ~ a2*Agency
\end_layout

\begin_layout Plain Layout

Intrinsic ~~ Extrinsic
\end_layout

\begin_layout Plain Layout

## define mediation parameters (indirect effects)
\end_layout

\begin_layout Plain Layout

ind1 := a1 * b1
\end_layout

\begin_layout Plain Layout

ind2 := a2 * b2
\end_layout

\begin_layout Plain Layout

'
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-cfa30.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Points of Emphasis
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks, containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{1.
 Named parameters for indirect effect $ind1 = a_1 
\backslash
cdot b_1$}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Positive ~ b1*Intrinsic + Agency
\end_layout

\begin_layout Plain Layout

Negative ~ b2*Extrinsic
\end_layout

\begin_layout Plain Layout

Intrinsic ~ a1*Agency
\end_layout

\begin_layout Plain Layout

Extrinsic ~ a2*Agency
\end_layout

\begin_layout Plain Layout

## define mediation parameters (indirect effects)
\end_layout

\begin_layout Plain Layout

ind1 := a1 * b1
\end_layout

\begin_layout Plain Layout

ind2 := a2 * b2
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The product 
\begin_inset Formula $a_{1}\cdot b_{1}$
\end_inset

 can be tested because we represent it by 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ind1
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{2.
 Bootstrap the estimate of $a_1 b_1$}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The hull hypothesis we would like to test, 
\begin_inset Formula 
\[
H_{0}:a_{1}b_{1}=0
\]

\end_inset


\end_layout

\begin_layout Itemize
At the current time, no analytical 
\begin_inset Quotes eld
\end_inset

formula
\begin_inset Quotes erd
\end_inset

 exists for testing that.
 Instead, it is necessary to use 'bootstrapped standard errors'.
\end_layout

\begin_layout Itemize
The disadvantage of the bootstrap method is that the model must be calculated
 100s or 1000s of times (slow!)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Estimate with lavaan's sem function
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Structural Regressions among Latent Constructs}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The arguments for 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sem()
\end_layout

\end_inset

 that we focus on are 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
se
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
bootstrap
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Itemize
Rather than analytically approximate standard errors, the standard deviation
 of the bootstrapped estimates is used.
\end_layout

\begin_layout Standard
\begin_inset Branch cfalvm
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<cfa35, results=hide,echo=F>>=
\end_layout

\begin_layout Plain Layout

Nboot <- 500
\end_layout

\begin_layout Plain Layout

mediat.out.2 <- sem(mediat.mod.2, data = dat,
\end_layout

\begin_layout Plain Layout

                    std.lv = TRUE, se = "boot", bootstrap = Nboot)
\end_layout

\begin_layout Plain Layout

summary(mediat.out.2, standardized = TRUE, fit = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-cfa35.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Follow-up tests
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Use anova }
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The mediation model with latent variables estimates fewer parameters than
 the CFA, but it fits just as well as the CFA.
\end_layout

\begin_layout Standard
\begin_inset Branch cfalvm
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<cfa40, results=hide, echo=F>>=
\end_layout

\begin_layout Plain Layout

anova(cfa3, mediat.out.2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-cfa40.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Compare Standardized factor loadings}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The parameter standardized = TRUE requests a summary using standardized
 loading coefficients.
\end_layout

\begin_layout Itemize
Measurement error variance translates into low standardized factor loadings.
 Some of the difficulty we have interpreting latent regressions is due to
 measurement errors.
 
\end_layout

\begin_layout Standard
\begin_inset Branch cfalvm
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<cfa50, results=hide,echo=F>>=
\end_layout

\begin_layout Plain Layout

summary(mediat.out.2, standardized = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-cfa50.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{plot}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch cfalvm
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<semplot40,fig=T, include=F, results=hide,echo=F>>=
\end_layout

\begin_layout Plain Layout

semPaths(mediat.out.2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-semplot40.tex}
\end_layout

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-semplot40}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Subsection
Supplementary Hypothesis Test
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Check if c1 and c2 are signficantly different}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Did you wonder if c1 is significantly different from c2?
\end_layout

\begin_layout Itemize
The assumption that they are the same is another restriction we can put
 on the model.
\end_layout

\begin_layout Itemize
We re-fit, and then run the anova test.
\end_layout

\begin_layout Plain Layout
\begin_inset Branch cfalvm
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<cfa100>>=
\end_layout

\begin_layout Plain Layout

mediat.mod.3 <- '
\end_layout

\begin_layout Plain Layout

## measurement model
\end_layout

\begin_layout Plain Layout

Agency =~ Agency1 + Agency2 + Agency3
\end_layout

\begin_layout Plain Layout

Intrinsic =~ Intrin1 + Intrin2 + Intrin3
\end_layout

\begin_layout Plain Layout

Extrinsic =~ Extrin1 + Extrin2 + Extrin3
\end_layout

\begin_layout Plain Layout

Positive =~ PosAFF1 + PosAFF2 + PosAFF3
\end_layout

\begin_layout Plain Layout

Negative =~ NegAFF1 + NegAFF2 + NegAFF3
\end_layout

\begin_layout Plain Layout

## structural model
\end_layout

\begin_layout Plain Layout

Positive ~ b1*Intrinsic + Agency
\end_layout

\begin_layout Plain Layout

Negative ~ b2*Extrinsic
\end_layout

\begin_layout Plain Layout

Intrinsic ~ a1*Agency
\end_layout

\begin_layout Plain Layout

Extrinsic ~ a2*Agency
\end_layout

\begin_layout Plain Layout

Intrinsic ~~ Extrinsic
\end_layout

\begin_layout Plain Layout

## define mediation parameters (indirect effects)
\end_layout

\begin_layout Plain Layout

c1 := a1 * b1
\end_layout

\begin_layout Plain Layout

c2 := a2 * b2
\end_layout

\begin_layout Plain Layout

c1 == c2
\end_layout

\begin_layout Plain Layout

'
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-cfa100.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Branch cfalvm
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<cfa110>>=
\end_layout

\begin_layout Plain Layout

Nboot <- 500
\end_layout

\begin_layout Plain Layout

mediat.out.3 <- sem(mediat.mod.3, data = dat,
\end_layout

\begin_layout Plain Layout

                    std.lv = TRUE, se = "boot", bootstrap = Nboot)
\end_layout

\begin_layout Plain Layout

summary(mediat.out.3, standardized = TRUE, fit = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-cfa110.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Branch cfalvm
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<cfa111>>=
\end_layout

\begin_layout Plain Layout

anova(mediat.out.3, mediat.out.2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-cfa111.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Structural Equation Modeling}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In Psychology, SEM has been an area of tremendous growth since 1980.
\end_layout

\begin_layout Itemize
SEM is being absorbed slowly into other fields
\end_layout

\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

gold standard
\begin_inset Quotes erd
\end_inset

 software for SEM modeling is Mplus, although lavaan has succeeded in 
\begin_inset Quotes eld
\end_inset

matching
\begin_inset Quotes erd
\end_inset

 side-by-side many of the calculations.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{References}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "/home/pauljohn/GIT/CRMDA/workshops-lfs/topics/sem/sem"
options "apalike2"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Session}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sess10>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<opts20, include=F>>=
\end_layout

\begin_layout Plain Layout

## Don't delete this.
 It puts the interactive session options
\end_layout

\begin_layout Plain Layout

## back the way they were.
 If this is compiled within a session
\end_layout

\begin_layout Plain Layout

## it is vital to do this.
\end_layout

\begin_layout Plain Layout

options(opts.orig)
\end_layout

\begin_layout Plain Layout

options(par.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
