#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}
\usepackage{array}
\usepackage{longtable}
\usepackage{graphicx}
\renewcommand{\doiprefix}{doi:\kern-1pt}
\setlength{\bibsep}{10pt}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
%for bold upright roman in math for matrix algebra
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}

%%\input{theme/guidePreambleSweavel.tex} 
%%% From beamer slide:
\usepackage{Sweave}
%% 
%% This controls display of code chunks
\usepackage{ae,fancyvrb,relsize,listings}

\providecommand{\Sweavesize}{\normalsize}
\providecommand{\Rsize}{}
\renewcommand{\Rsize}{\normalsize}
\providecommand{\Routsize}{\scriptsize}

\providecommand{\Rcolor}{\color[rgb]{0.1, 0.1, 0.1}}
\providecommand{\Routcolor}{\color[rgb]{0.2, 0.2, 0.2}}
\providecommand{\Rcommentcolor}{\color[rgb]{0.101, 0.43, 0.432}}

\providecommand{\Rbackground}{\color[gray]{0.91}}
\providecommand{\Routbackground}{\color[gray]{0.935}}
% Can specify \color[gray]{1} for white background or just \color{white}

\lstdefinestyle{Rinput}{
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  basicstyle=\Rsize\Rcolor\ttfamily,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%,
  commentstyle=\Rcommentcolor\ttfamily,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1{==}{{=\,=}}2{--}{{-\,-}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},%
  backgroundcolor=\Rbackground,%
  numbers=left,%
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}%

% Other options of interest:
% frame=single,framerule=0.1pt,framesep=1pt,rulecolor=\color{blue},
% numbers=left,numberstyle=\tiny,stepnumber=1,numbersep=7pt,
% keywordstyle={\bf\Rcolor}

\lstdefinestyle{Routput}{fancyvrb=false,
  literate={~}{{$\sim$}}1{R^2}{{$R^{2}$}}2{^}{{$^{\scriptstyle\wedge}$}}1{R-squared}{{$R^{2}$}}2,%
  basicstyle=\Routcolor\Routsize\ttfamily,%
  backgroundcolor=\Routbackground,
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1 {==}{{=\,=}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},
  numbers=left,
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}

\renewenvironment{Schunk}{}{}
\renewenvironment{Sinput}{}{}
\let\Sinput\relax
\let\Scode\relax
\let\Soutput\relax
\lstnewenvironment{Sinput}{\lstset{style=Rinput}}{}
\lstnewenvironment{Scode}{\lstset{style=Rinput}}{}
\lstnewenvironment{Soutput}{\lstset{style=Routput}}{}
%%end paste in from guidePreambleSweavel.tex


\lstset{tabsize=2, breaklines=true, style=Rinput, breakatwhitespace=true}

\fvset{listparameters={\setlength{\topsep}{0em}}}

\usepackage{xcolor}
\definecolor{light-gray}{gray}{0.90}
\usepackage{realboxes}
\providecommand*{\code}[1]{\texttt{#1}}
\renewcommand{\code}[1]{%
\Colorbox{light-gray}{#1}%
}%
%% end of paste

\usepackage[natbibapa]{apacite}

\definecolor{darkblue}{HTML}{1e2277}

%would be in beamerthemekucrmda%
\mode<presentation>
\definecolor{kublue}{RGB}{0,81,186}
\usefonttheme{professionalfonts}
\useoutertheme{infolines}
\useinnertheme{rounded}
%disable rounded for alert and example boxes%
\setbeamertemplate{blocks}[default]
\usecolortheme{whale}
\usecolortheme{orchid}
\setbeamercolor{structure}{bg=kublue,fg=kublue!90!black}
%\setbeamercolor{structure}{fg=kublue}
\setbeamercolor{frametitle}{bg=kublue}
\setbeamercolor{section in toc}{fg=kublue!40!black}

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}
\beamertemplatenavigationsymbolsempty
%end of beamerthemekucrmda%

%If you want bigger margins, try this:
\setbeamersize{text margin left=05mm,text margin right=10mm} 
\hypersetup{colorlinks,allcolors=.,urlcolor=darkblue}
%Following seems to have no effect now
%\usepackage{handoutWithNotes}
%\pgfpagesuselayout{3 on 1 with notes}[letterpaper, border shrink=5mm]

\titlegraphic{\includegraphics[width=6cm]{theme/logo}}
\logo{\includegraphics[width=5mm]{theme/logomini}}
\end_preamble
\options aspectratio=1609
\use_default_options false
\begin_modules
logicalmkup
sweave
natbibapa
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style \use_bibtopic false
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch semboot
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\branch cfalvm
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%following is LyX shortcut 
\backslash
vb for bold upright math for matrices
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\vb}[1]{\bm{\mathrm{#1}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch R
inverted 0
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=tmpout/t,split=T,ae=F,height=4.5,width=7}
\end_layout

\begin_layout Plain Layout

% tmpout directory must exist first
\end_layout

\begin_layout Plain Layout

<<tmpout, echo=FALSE, include=FALSE, results=hide>>=
\end_layout

\begin_layout Plain Layout

tdir <- "tmpout"
\end_layout

\begin_layout Plain Layout

if(!dir.exists(tdir)) dir.create(tdir, showWarnings=FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<excludemeRoptions, echo=F>>=
\end_layout

\begin_layout Plain Layout

opts.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=100, prompt = " ", continue = "  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE)
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

par.orig <- par(no.readonly = TRUE) 
\end_layout

\begin_layout Plain Layout

pjmar <- c(4.1, 4.1, 1.5, 2.1)
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12, xpd=F)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

if(!file.exists("theme")) file.symlink("../../../../template/theme", "theme")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
The Briefest R overview, Ever 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
briefR
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Center for Research Methods and Data Analysis 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Date
2019
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSubsection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsubsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frametitle{Outline}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{This is Brief}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This talk introduces the vital R 
\begin_inset CommandInset citation
LatexCommand citep
key "RCore"
literal "true"

\end_inset

 terminology and usage necessary to get started with structural equation
 modeling
\end_layout

\begin_layout Itemize
Lets assume you have R and Rstudio already installed.
 If you don't, hurry up (
\begin_inset CommandInset href
LatexCommand href
name "Windows"
target "https://crmda.ku.edu/guide-46-windows_r_setup"
literal "false"

\end_inset

, 
\begin_inset CommandInset href
LatexCommand href
name "Mac"
target "https://crmda.ku.edu/guide-47-mac_r_setup"
literal "false"

\end_inset

)
\end_layout

\begin_layout Itemize
We can't make you R experts in 1 hour, but
\end_layout

\begin_deeper
\begin_layout Itemize
if you knew R before, you might remember
\end_layout

\begin_layout Itemize
if you never used R before, this is an interesting way to start
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Extract our Zip file}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\series bold
If you did not extract our zip folder yet, please do so now
\series default
 (In Win10, one can be fooled by the File Explorer.
 Do please drag the folder out of the zip)
\end_layout

\begin_layout Itemize
Use File manager to look for the folder sem-2/sem-2-1-R.
 
\end_layout

\begin_layout Itemize
We write 1 file (sem-2-1.R.lyx).
 It creates
\end_layout

\begin_deeper
\begin_layout Itemize
sem-2-1-R.pdf
\end_layout

\begin_layout Itemize
sem-2-1-R.R
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What you should do}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
DO NOT LAUNCH R or Rstudio from the program/applications menu
\end_layout

\begin_layout Itemize
Instead, use your file manager, navigate to sem-2/sem-2-1-R
\end_layout

\begin_layout Itemize
Find sem-2-1-R.R, and use 
\begin_inset Quotes eld
\end_inset

open with
\begin_inset Quotes erd
\end_inset

 on that file.
 Choose Rstudio.
\end_layout

\begin_deeper
\begin_layout Itemize
If you prefer another IDE (Notepad++, Emacs, Eclipse, OK!.
 On Windows, don't choose R)
\end_layout

\end_deeper
\begin_layout Itemize
Our R file has 
\begin_inset Quotes eld
\end_inset

code chunks
\begin_inset Quotes erd
\end_inset

 that parallel the examples below.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{All data analysis consists of 6 steps}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Data import
\end_layout

\begin_layout Enumerate
Recoding
\end_layout

\begin_layout Enumerate
Exploration
\end_layout

\begin_layout Enumerate
Analysis
\end_layout

\begin_layout Enumerate
Export of Tables & Graphs
\end_layout

\begin_layout Enumerate
Writeup
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Data Import
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Data Input Formats}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Base R includes importers for some data types
\end_layout

\begin_layout Itemize
Addon packages packages exist and can open various other types (with varying
 degrees of success)
\end_layout

\begin_deeper
\begin_layout Itemize
SPSS, Stata, SAS
\end_layout

\begin_layout Itemize
Excel
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Check which data files we have in "data"}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Check what files we provided for you in our data directory
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat10>>=
\end_layout

\begin_layout Plain Layout

ddir <- "data"
\end_layout

\begin_layout Plain Layout

list.files(ddir)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
look in neighboring folder 
\begin_inset Quotes eld
\end_inset

data
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Aside: R can create directories (
\begin_inset Flex Code
status open

\begin_layout Plain Layout
dir.create()
\end_layout

\end_inset

), copy files (
\begin_inset Flex Code
status open

\begin_layout Plain Layout
file.copy()
\end_layout

\end_inset

), etc.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Use read.table to import the csv file}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat20>>=
\end_layout

\begin_layout Plain Layout

fn <- "affect.csv"
\end_layout

\begin_layout Plain Layout

affect <- read.table(file.path(ddir, fn), header = TRUE, sep = ",", stringsAsFacto
rs = FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
First argument is a file name.
 Note, I'm using the R function 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
file.path
\end_layout

\end_inset

 which joins together the data directory and the file name.
\end_layout

\begin_layout Itemize
3 named arguments:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
header = TRUE
\end_layout

\end_inset

: use the first row as variable names
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sep = 
\begin_inset Quotes eld
\end_inset

,
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

: use the comma as the separator
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
stringsAsFactors = FALSE
\end_layout

\end_inset

: Leave character variables as characters.
 Do not turn them into labeled discrete variables (R factors)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Check the result}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
That thing is a data.frame object
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat30>>=
\end_layout

\begin_layout Plain Layout

str(affect)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
data.frame: columns can be different types of variables
\end_layout

\begin_deeper
\begin_layout Description
character: character strings
\end_layout

\begin_layout Description
integer: only integers, no floating point
\end_layout

\begin_layout Description
numeric: floating point
\end_layout

\end_deeper
\begin_layout Itemize
Other types we don't see here
\end_layout

\begin_deeper
\begin_layout Description
logical: Coded either 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
TRUE
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
FALSE
\end_layout

\end_inset

, symbols that are interpreted as 1 and 0
\end_layout

\begin_layout Description
factor: R's way of creating categorical variables, either nominal or ordered
\end_layout

\begin_layout Description
Date: Can subtract dates to find time between
\end_layout

\end_deeper
\begin_layout Itemize
The same information can be encoded in different ways
\end_layout

\begin_deeper
\begin_layout Itemize
Sex is an integer
\end_layout

\begin_layout Itemize
Gender is a character variable
\end_layout

\end_deeper
\begin_layout Itemize
Can see in spreadsheet-like thing with the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
View()
\end_layout

\end_inset

 function:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat35,eval=F>>=
\end_layout

\begin_layout Plain Layout

View(affect)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{R factor}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In R, the term 
\begin_inset Quotes eld
\end_inset

factor
\begin_inset Quotes erd
\end_inset

 is used for a categorical variable that has 
\begin_inset Quotes eld
\end_inset

internal integer values
\begin_inset Quotes erd
\end_inset

 but those values display as 
\begin_inset Quotes eld
\end_inset

labeled levels
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
genderf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
internal integer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
label
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

male
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

female
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Here we create a new factor variable 
\begin_inset Quotes eld
\end_inset

affect$genderf
\begin_inset Quotes erd
\end_inset

 by pulling in affect$gender telling it which levels we want, in what order.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat40>>=
\end_layout

\begin_layout Plain Layout

affect$genderf <- factor(affect$gender, levels = c("male", "female"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Key elements
\end_layout

\begin_deeper
\begin_layout Itemize
Creates a new column inside 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
affect
\end_layout

\end_inset

 (there are several other ways to do this)
\end_layout

\begin_layout Itemize
The function 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
factor()
\end_layout

\end_inset

 creates a factor
\end_layout

\end_deeper
\begin_layout Itemize
Check that 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
gender
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
genderf
\end_layout

\end_inset

 are different things, but represent same information
\end_layout

\begin_deeper
\begin_layout Standard
The table function can create a quick cross-tabulation:
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat60>>=
\end_layout

\begin_layout Plain Layout

table("genderf" = affect$genderf, "gender" = affect$gender)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Notice the table output is more sparse if we don't include names for the
 arguments:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat70>>=
\end_layout

\begin_layout Plain Layout

table(affect$genderf, affect$gender)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Can use jazzier names if you like
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat80>>=
\end_layout

\begin_layout Plain Layout

table("gender as factor" = affect$genderf, "Sex as an integer" = affect$Sex)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I'll also need an ethnicity factor variable in a later section:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat90>>=
\end_layout

\begin_layout Plain Layout

affect$ethnicityf <- factor(affect$ethnicity)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I allowed R to create the levels in alphabetical order, as we see here:
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<dat100>>=
\end_layout

\begin_layout Plain Layout

table("ethnicity factor" = affect$ethnicityf, "ethnicity" = affect$ethnicity)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Worth mentioning: R is case sensitive
\end_layout

\begin_deeper
\begin_layout Itemize
If I create variables, they always start with small letters
\end_layout

\begin_layout Itemize
This input data used capital and small letters, regrettably.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Packages
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{About packages}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R is a computational engine 
\end_layout

\begin_deeper
\begin_layout Itemize
to which packages are attached
\end_layout

\end_deeper
\begin_layout Itemize
The R distribution includes 
\end_layout

\begin_deeper
\begin_layout Itemize
15 base packages (incl.
 base, datasets, stats, stats4, graphics)
\end_layout

\begin_layout Itemize
15 recommended packages (incl.
 foreign, MASS, mgcv, nlme, survival)
\end_layout

\end_deeper
\begin_layout Itemize
The Comprehensive R Archive Network (CRAN) has 12K other 
\begin_inset Quotes eld
\end_inset

contributed
\begin_inset Quotes erd
\end_inset

 packages.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Please install a couple of packages}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<repos, eval=F>>=
\end_layout

\begin_layout Plain Layout

CRAN <- "http://rweb.crmda.ku.edu/cran"
\end_layout

\begin_layout Plain Layout

KRAN <- "http://rweb.crmda.ku.edu/kran"
\end_layout

\begin_layout Plain Layout

options(repos = c(KRAN, CRAN))
\end_layout

\begin_layout Plain Layout

install.packages(c("kutils", "rockchalk"), dep = c("Depends", "Imports",
 "LinkingTo"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This specifies CRMDA server KRAN first, so if we have updates they are found,
 but then it also looks on the more general CRAN network.
 
\end_layout

\begin_layout Itemize
When you run 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
install.packages()
\end_layout

\end_inset

, R may ask if you if it can create a personal package repository for you.
 Generally, the answer is 
\begin_inset Quotes eld
\end_inset

yes
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Itemize
About the packages
\end_layout

\begin_deeper
\begin_layout Itemize
kutils: data management functions created at CRMDA
\end_layout

\begin_layout Itemize
rockchalk: regression functions
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Package function example: Data Descriptions}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<excludemeopts10a, echo=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

options.width <- unlist(options("width"))
\end_layout

\begin_layout Plain Layout

options(width = 70)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<summary10>>=
\end_layout

\begin_layout Plain Layout

summary(affect)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<excludemeopts10b, echo=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

options(width = options.width)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Data Descriptions}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
tiny}
\end_layout

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

library(rockchalk)
\end_layout

\begin_layout Plain Layout

summarize(affect)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Data Analysis
\end_layout

\begin_layout Subsection
Regression model
\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The lm function}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Linear regression uses 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lm()
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<reg10>>=
\end_layout

\begin_layout Plain Layout

summary(lm(PosAFF1 ~ genderf, data = affect))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Did you see some output whir past you?
\end_layout

\begin_layout Itemize
Instead, we save the output into an object named 
\begin_inset Quotes eld
\end_inset

m1
\begin_inset Quotes erd
\end_inset

 (our choice)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<reg20>>=
\end_layout

\begin_layout Plain Layout

m1 <- lm(PosAFF1 ~ genderf, data = affect)
\end_layout

\begin_layout Plain Layout

summary(m1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
summary()
\end_layout

\end_inset

 is a generic function, there are different 
\begin_inset Quotes eld
\end_inset

implementations
\begin_inset Quotes erd
\end_inset

 customized to the different types of inputs
\end_layout

\begin_layout Itemize
What other follow-up functions might be used? 
\end_layout

\begin_deeper
\begin_layout Description
anova Stat tests to compare models (F, or 
\begin_inset Formula $\chi^{2}$
\end_inset

)
\end_layout

\begin_layout Description
predict obtain predicted values, either for observed cases or hypothetical
 inputs
\end_layout

\begin_layout Description
resid display residuals
\end_layout

\begin_layout Description
plot regression diagnostics
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Add more predictors}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<reg50>>=
\end_layout

\begin_layout Plain Layout

m2 <- lm(PosAFF1 ~ genderf + Agency1, data = affect)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Quotes eld
\end_inset

+
\begin_inset Quotes erd
\end_inset

 sign serves obvious role
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<reg51>>=
\end_layout

\begin_layout Plain Layout

summary(m2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Other follow ups you might try}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R uses function 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
anova()
\end_layout

\end_inset

 as a general purpose comparison tool.
 Confusing to people who expect it means ANOVA but it does not.
 
\end_layout

\begin_deeper
\begin_layout Itemize
anova behaves differently if we supply just one model
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<reg55a>>=
\end_layout

\begin_layout Plain Layout

anova(m2)
\end_layout

\begin_layout Plain Layout

anova(m1, m2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
or two models
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<reg55b>>=
\end_layout

\begin_layout Plain Layout

anova(m1, m2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Regression diagnostics using influence measures
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<reg60>>=
\end_layout

\begin_layout Plain Layout

m2.inf <- influence.measures(m2)
\end_layout

\begin_layout Plain Layout

summary(m2.inf)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Plots
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{High Level plot functions in R Base}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
functions provided with base R
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Standard
create a 
\begin_inset Quotes eld
\end_inset

device
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
plot
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hist
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
barplot
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
plot.default
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boxplot
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dotchart
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
matplot
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
coplot
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
Run 
\begin_inset Quotes eld
\end_inset

example(hist)
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

example(barplot)
\begin_inset Quotes erd
\end_inset

, and so forth
\end_layout

\begin_layout Itemize
Run 
\begin_inset Quotes eld
\end_inset

demo(graphics)
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Low Level plotting functions}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
High level functions create basic plot framework, coordinates
\end_layout

\begin_layout Itemize
Low Level functions: added accents or features
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
text
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
points
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lines
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
box
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
arrows
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
segments
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mtext
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
abline
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
axis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
legend
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
title
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
polygon
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rect
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Regression plot from the rockchalk package}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plot60, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

library(rockchalk)
\end_layout

\begin_layout Plain Layout

plotSlopes(m2, plotx = "Agency1", modx = "genderf", interval = "confidence")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-plot60.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-plot60}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Many plot-oriented packages}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In R's recommended set, the package 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lattice
\end_layout

\end_inset

 is intended to produce polished 
\begin_inset Quotes eld
\end_inset

trellis
\begin_inset Quotes erd
\end_inset

 plots
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plot100, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

library(lattice)
\end_layout

\begin_layout Plain Layout

histogram( ~ PosAFF1 | genderf, data = affect, xlab = "Positive Affect")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The separate sections are referred to as 
\begin_inset Quotes eld
\end_inset

panels
\begin_inset Quotes erd
\end_inset

, which allow intricate customizations
\end_layout

\begin_layout Itemize
The formula uses the pipe 
\begin_inset Quotes eld
\end_inset

|
\begin_inset Quotes erd
\end_inset

 to signify subgroups
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-plot100.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-plot100}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
A popular package 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ggplot2
\end_layout

\end_inset

 offers similar output under the guise of 
\begin_inset Quotes eld
\end_inset

facets
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Statistical Distributions
\end_layout

\begin_layout Subsection
Normal
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Normal jargon}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In SEM, you can't turn a page without somebody writing 
\begin_inset Quotes eld
\end_inset

assuming the data is multivariate normally distributed 
\begin_inset Formula $\ldots$
\end_inset


\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Formula $\vb X\sim MVN(\vb{\mu},\vb{\Sigma})$
\end_inset

.
 They also talk about Wishart distribution likelihood.
 A lot!
\end_layout

\begin_layout Itemize
That's mystifying to most social scientists
\end_layout

\begin_layout Itemize
R offers some ways to explore the gaps in our understanding.
\end_layout

\begin_layout Itemize
We start with 1 Normal variable, then look at multivariate Normal, then
 Wishart.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Pull one Normal sample}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<norm10,fig=T>>=
\end_layout

\begin_layout Plain Layout

set.seed(234234)
\end_layout

\begin_layout Plain Layout

N <- 1000
\end_layout

\begin_layout Plain Layout

mu <- 44
\end_layout

\begin_layout Plain Layout

sigma <- 10
\end_layout

\begin_layout Plain Layout

x <- rnorm(N, m = mu, s = sigma)
\end_layout

\begin_layout Plain Layout

hist(x, breaks = 30)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Normal probability model}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<norm20,fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

x <- seq(mu + -3.5 * sigma, mu + 3.5 * sigma, by = 0.01)
\end_layout

\begin_layout Plain Layout

xd <- dnorm(x, m = mu, s = sigma)
\end_layout

\begin_layout Plain Layout

plot(xd ~ x, type = "l", xlab = "x", ylab = "Probability Density of Normal")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-norm20}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Normal probability model}
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned

\end_layout

\begin_deeper
\begin_layout Column
7cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=7cm]{tmpout/t-norm20}
\end_layout

\end_inset


\end_layout

\begin_layout Column
5cm
\end_layout

\begin_layout Standard
That's the probability density, 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f(x)=\frac{1}{\sqrt{2\pi}\sigma}\,e^{-\frac{1}{2}\left(\frac{x-\mu}{\sigma}\right)^{2}}
\]

\end_inset


\end_layout

\begin_layout Standard
In my mind, it is written like this (anticipates multivariate Normal)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{1}{(2\pi)^{1/2}\sigma}\,e^{-\frac{1}{2}\left(x-\mu\right)\frac{1}{\sigma^{2}}\left(x-\mu\right)}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Multivariate Normal
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Draw an MVN sample}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
First, we need to create a mean vector 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
mu
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mvn10a>>=
\end_layout

\begin_layout Plain Layout

library(rockchalk)
\end_layout

\begin_layout Plain Layout

mu <- c(3, 1, 44, 19) # numbers from top of my head
\end_layout

\begin_layout Plain Layout

mu
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
and a covariance matrix 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sigma
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mvn10b>>=
\end_layout

\begin_layout Plain Layout

rho <- lazyCor(c(0.5, 0.6, 0.7, -0.1, 0.1, 0.2))
\end_layout

\begin_layout Plain Layout

sd <- c(1, 2, 7, 4) 
\end_layout

\begin_layout Plain Layout

Sigma <- lazyCov(rho, sd)
\end_layout

\begin_layout Plain Layout

Sigma
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Note I'm using 
\begin_inset Quotes eld
\end_inset

Sigma
\begin_inset Quotes erd
\end_inset

 here as name for covariance matrix, to signify it stands for 
\begin_inset Formula $\Sigma$
\end_inset

, not 
\begin_inset Quotes eld
\end_inset

sigma
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $\sigma$
\end_inset

.
\end_layout

\begin_layout Itemize
Ask for one random sample from that MVN generator
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mvn15>>=
\end_layout

\begin_layout Plain Layout

N <- 1
\end_layout

\begin_layout Plain Layout

mvrnorm(N, m = mu, S = Sigma)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
What did you get? Is that 
\begin_inset Quotes eld
\end_inset

4 people-worth
\begin_inset Quotes erd
\end_inset

 of data, or 
\begin_inset Quotes eld
\end_inset

1 person's data
\begin_inset Quotes erd
\end_inset

?
\end_layout

\begin_layout Itemize
Ask for 5 cases from that generator
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mvn20>>=
\end_layout

\begin_layout Plain Layout

N <- 5
\end_layout

\begin_layout Plain Layout

mvrnorm(N, m = mu, S = Sigma)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Dial up the sample size to 500.
 Call the result 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
X
\end_layout

\end_inset

, get a pair plot
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mvn50,fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

N <- 500
\end_layout

\begin_layout Plain Layout

X <- mvrnorm(N, m = mu, S = Sigma)
\end_layout

\begin_layout Plain Layout

pairs(X)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-mvn50.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=12cm]{tmpout/t-mvn50}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
framebreak
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
When I started getting curious about 
\begin_inset Quotes eld
\end_inset

what really is that distribution?
\begin_inset Quotes erd
\end_inset

, I required the students to help me create 
\begin_inset CommandInset href
LatexCommand href
name "little essays about them"
target "http://pj.freefaculty.org/guides/stat/Distributions/DistributionWriteups"
literal "false"

\end_inset

.
 
\end_layout

\begin_layout Itemize
We've got many, incluing Normal
\begin_inset CommandInset href
LatexCommand href
name "Normal"
target "http://pj.freefaculty.org/guides/stat/Distributions/DistributionWriteups/Normal/Normal-01.pdf"
literal "false"

\end_inset

, 
\begin_inset CommandInset href
LatexCommand href
name "Multivariate Normal"
target "http://pj.freefaculty.org/guides/stat/Distributions/DistributionWriteups/NormalMultivariate/NormalMultivariate.pdf"
literal "false"

\end_inset

, Poisson
\begin_inset CommandInset href
LatexCommand href
name "Poisson"
target "http://pj.freefaculty.org/guides/stat/Distributions/DistributionWriteups/Poisson/Poisson_v1-2.pdf"
literal "false"

\end_inset

, 
\begin_inset CommandInset href
LatexCommand href
name "Wishart"
target "http://pj.freefaculty.org/guides/stat/Distributions/DistributionWriteups/Wishart/Wishart.pdf"
literal "false"

\end_inset

, etc
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Sample versus Sigma}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The sample variance/covariance matrix
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

var(X)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
is not exactly the same as Sigma.
 
\end_layout

\begin_layout Itemize
But it hovers around Sigma, doesn't it? Check for yourself.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

X <- mvrnorm(N, m = mu, S = Sigma)
\end_layout

\begin_layout Plain Layout

var(X)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Pull another sample, calculate the variance matrix again
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<wish50b>>=
\end_layout

\begin_layout Plain Layout

X <- mvrnorm(N, m = mu, S = Sigma) 
\end_layout

\begin_layout Plain Layout

var(X)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Again (again, again, again)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<wish50c>>=
\end_layout

\begin_layout Plain Layout

X <- mvrnorm(N, m = mu, S = Sigma) 
\end_layout

\begin_layout Plain Layout

var(X)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Notice: The covariance matrix changes a little bit from one sample to another
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Digression: The MVN Density Formula}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
A vector of means 
\begin_inset Formula $\mu$
\end_inset

=
\begin_inset Quotes eld
\end_inset

mu
\begin_inset Quotes erd
\end_inset

 and a covariance matrix 
\begin_inset Formula $\Sigma$
\end_inset

=
\begin_inset Quotes erd
\end_inset

Sigma
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\vb x=\left[\begin{array}{c}
x_{1}\\
x_{2}\\
\vdots\\
x_{p}
\end{array}\right]\sim MVN(\vb{\mu},\vb{\Sigma})=MVN\left(\left[\begin{array}{c}
\mu_{1}\\
\mu_{2}\\
\vdots\\
\mu_{p}
\end{array}\right],\left[\begin{array}{cccc}
\sigma_{1}^{2} & \sigma_{12} &  & \sigma_{1p}\\
\sigma_{12} & \sigma_{2}^{2} &  & \sigma_{2p}\\
 &  & \ddots\\
\sigma_{1p} & \sigma_{2p} &  & \sigma_{p}^{2}
\end{array}\right]\right)
\]

\end_inset


\end_layout

\begin_layout Itemize
The multivariate PDF looks similar to the second way I wrote the Normal
 pdf for one variables
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
f(\vb x)=\frac{1}{(2\pi)^{p/2}|\vb{\Sigma}|^{1/2}}e^{\frac{-1}{2}(\vb x-\vb{\mu})^{T}\vb{\Sigma}^{-1}(\vb x-\vb{\mu})}
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $p$
\end_inset

 is the number of elements in 
\begin_inset Formula $\mu$
\end_inset

 and 
\begin_inset Formula $|\vb{\Sigma}|$
\end_inset

 is the determinant of 
\begin_inset Formula $\Sigma$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
If you need to create Sigma, it is easiest do do that by starting with standard
 deviations and a correlation matrix
\begin_inset Formula 
\[
SD\times Corr\times SD
\]

\end_inset


\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset Formula 
\begin{eqnarray}
Sigma & = & \left[\begin{array}{ccccc}
\sigma_{x1} & 0 & 0 & 0 & 0\\
0 & \sigma_{x2} & 0 & 0 & 0\\
0 & 0 & \sigma_{x3} & 0 & 0\\
0 & 0 & 0 & \sigma_{x4} & 0\\
0 & 0 & 0 & 0 & \sigma_{x5}
\end{array}\right]\times\left[\begin{array}{ccccc}
1 & \rho_{12} & \rho_{13} & \ldots & \rho_{1p}\\
\rho_{21} & 1 & \rho_{23} &  & \rho_{2p}\\
\rho_{31} & \ddots & 1 &  & \rho_{3p}\\
\vdots & _{11} & \rho_{11} & \ddots\\
\rho_{p1} & \rho_{11} & \rho_{11} &  & 1
\end{array}\right]\nonumber \\
 &  & \times\left[\begin{array}{ccccc}
\sigma_{x1} & 0 & 0 & 0 & 0\\
0 & \sigma_{x2} & 0 & 0 & 0\\
0 & 0 & \sigma_{x3} & 0 & 0\\
0 & 0 & 0 & \sigma_{x4} & 0\\
0 & 0 & 0 & 0 & \sigma_{x5}
\end{array}\right]\label{eq:Cov1}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset Note Note
status open

\begin_layout Subsection*
Surprise Digression: Cholesky
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Surprise: Cholesky decomposition}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Cholesky decomposition is a 
\begin_inset Quotes eld
\end_inset

square root
\begin_inset Quotes erd
\end_inset

 of a matrix.
\end_layout

\begin_layout Itemize
Observe
\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

Sigma.R <- chol(Sigma)
\end_layout

\begin_layout Plain Layout

Sigma.R
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Can reproduce Sigma:
\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

t(Sigma.R) %*% Sigma.R
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Why do we care about Cholesky decomposition?
\end_layout

\begin_deeper
\begin_layout Itemize
In Bayesian modeling and also in advanced SEM/mixed models, the Cholesky
 is used as the representation of Sigma.
\end_layout

\begin_layout Itemize
Faster to do calculations on the 
\begin_inset Quotes eld
\end_inset

square root
\begin_inset Quotes erd
\end_inset

 triangle
\end_layout

\begin_layout Itemize
Can easily reproduce Sigma if needed.
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{But Wait, there's more!}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
CRMDA Guide 42 
\begin_inset CommandInset href
LatexCommand href
name "Generating Multivariate Normal Samples"
target "https://crmda.ku.edu/guides-42-mvn"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
Simulators for MVN data can use the Cholesky
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

U <- rnorm(4)
\end_layout

\begin_layout Plain Layout

t(Sigma.R) %*% U
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
U is standard Normal(0,1)
\end_layout

\begin_layout Itemize
output from Sigma.R is 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Wishart
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Wishart}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The Wishart has special meaning for structural equation modelers.
 
\end_layout

\begin_layout Itemize
It is the distribution underlying the classic LISREL model and Maximum Likelihoo
d estimation of SEM.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Where do Wishart Draws Come From?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Draw 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
X
\end_layout

\end_inset

 from 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
mvrnorm
\end_layout

\end_inset

.
 Suppose it has 1000 rows and 4 variables.
 
\end_layout

\begin_layout Itemize
We need the expected values to be 0, so re-set 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
mu
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<wish10>>=
\end_layout

\begin_layout Plain Layout

mu <- c(0, 0, 0, 0)
\end_layout

\begin_layout Plain Layout

N <- 1000
\end_layout

\begin_layout Plain Layout

X <- mvrnorm(N, m = mu, S = Sigma) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Calculate the covariance matrix of 
\begin_inset Formula $\vb X$
\end_inset

.
 That is 4x4
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<wish50a>>=
\end_layout

\begin_layout Plain Layout

var(X)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Recall formula for covariance when 
\begin_inset Formula $\mu=(0,0,0,0)^{T}$
\end_inset

 is 
\begin_inset Formula 
\[
\frac{1}{N-1}\vb X^{T}\vb X
\]

\end_inset


\end_layout

\begin_layout Itemize
The variation of 
\begin_inset Formula $\vb X^{T}\vb X$
\end_inset

 from one-sample to another has a mathematical law, Wishart's distribution.
\end_layout

\begin_layout Itemize
Recall that our 
\begin_inset Formula $\vb{\Sigma}$
\end_inset

 is 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<wish100a>>=
\end_layout

\begin_layout Plain Layout

Sigma
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
For a given 
\begin_inset Formula $N$
\end_inset

, the Wishart value will be something hovering around
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<wish100b>>=
\end_layout

\begin_layout Plain Layout

(N-1) * Sigma
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Wishart}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R provides a simulator for the Wishart distribution, it requires the parameters
 for the degrees of freedom (N-1) and the covariance matrix.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<wish200a>>=
\end_layout

\begin_layout Plain Layout

rWishart(1, df = N - 1, Sigma = Sigma)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Draw another one
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<wish200b>>=
\end_layout

\begin_layout Plain Layout

rWishart(1, df = N - 1, Sigma = Sigma)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{A Sample of Covariance Matrices?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Draw 100 Wishart matrices
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<wish300a>>=
\end_layout

\begin_layout Plain Layout

lotsofwishes <- rWishart(100, df = N - 1, Sigma = Sigma)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
They are an R 
\begin_inset Quotes eld
\end_inset

array
\begin_inset Quotes erd
\end_inset

, can get first matrix like this
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<wish300b>>=
\end_layout

\begin_layout Plain Layout

lotsofwishes[  , , 1]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Or the 53rd like this:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<wish300c>>=
\end_layout

\begin_layout Plain Layout

lotsofwishes[  , , 53]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Here's where the structural equation modeling part comes back into play
\end_layout

\begin_layout Itemize
SEM compares a model/theoretical covariance with a sample covariance.
\end_layout

\begin_layout Itemize
The model/theoretical covariance, which is a matrix full of coefficients
 (loadings, etc) that represent our theoretical parameters.
\end_layout

\begin_layout Itemize
Estimator shifts the parameters to try to make the theoretical covariance
 similar to the observed covariance as possible.
\end_layout

\begin_layout Itemize
Even when we have 
\begin_inset Formula $N$
\end_inset

 observations in a data set, the SEM calculations are based on distilled
 information, the 
\begin_inset Formula $p\times p$
\end_inset

 covariance matrix.
 SEM is, in a sense, based on 1 data point, which is a matrix.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{4 Basic Goals Achieved}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Import data
\end_layout

\begin_layout Enumerate
Revise data
\end_layout

\begin_layout Enumerate
Do analysis (fit models)
\end_layout

\begin_layout Enumerate
Create plots
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{If you ever need help}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Ask in the r-help email list, or in 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://stackoverflow.com/questions/tagged/r
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Save some time: Ask your question with
\end_layout

\begin_deeper
\begin_layout Itemize
code you ran
\end_layout

\begin_layout Itemize
copy/pasted output & error messages
\end_layout

\begin_layout Itemize
Output from 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sessionInfo()
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{References}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "/home/pauljohn/GIT/CRMDA/workshops-lfs/topics/sem/sem"
options "apalike2"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Session}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sess10>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<opts20, include=F>>=
\end_layout

\begin_layout Plain Layout

## Don't delete this.
 It puts the interactive session options
\end_layout

\begin_layout Plain Layout

## back the way they were.
 If this is compiled within a session
\end_layout

\begin_layout Plain Layout

## it is vital to do this.
\end_layout

\begin_layout Plain Layout

options(opts.orig)
\end_layout

\begin_layout Plain Layout

options(par.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
