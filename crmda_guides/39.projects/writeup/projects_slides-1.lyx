#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usepackage{Sweavel}
\usepackage{dcolumn}
\usepackage{booktabs}

%\usepackage{Sweavel}


% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}

\usepackage{graphicx}
\usepackage{listings}
\lstset{tabsize=2, breaklines=true,style=Rstyle,breakatwhitespace=true}

%\setbeamercovered{transparent}
% or whatever (possibly just delete it)

% In document Latex options:

\fvset{listparameters={\setlength{\topsep}{0em}}}
\def\Sweavesize{\normalsize} 
\def\Rcolor{\color{black}} 
\def\Rbackground{\color[gray]{0.90}}


\definecolor{light-gray}{gray}{0.90}
\usepackage{realboxes}
\renewcommand{\code}[1]{
\Colorbox{light-gray}{#1}
}
\definecolor{darkblue}{HTML}{1e2277}
\hypersetup{colorlinks, linkcolor=, urlcolor=darkblue}


\mode<presentation>

\usetheme{Antibes}

% In document Latex options:

\expandafter\def\expandafter\insertshorttitle\expandafter{%
 \insertshorttitle\hfill\insertframenumber\,/\,\inserttotalframenumber}

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}
\end_preamble
\use_default_options false
\begin_modules
sweave
logicalmkup
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch effects
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\branch termplot
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Branch R
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=F>>=
\end_layout

\begin_layout Plain Layout

dir.create("plots", showWarnings=F)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=plots/p,split=T,ae=F,height=4,width=6}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, echo=F>>=
\end_layout

\begin_layout Plain Layout

if(!file.exists("../output")) dir.create("../output")
\end_layout

\begin_layout Plain Layout

options(device = pdf)
\end_layout

\begin_layout Plain Layout

options(width=160, prompt=" ", continue="  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE) 
\end_layout

\begin_layout Plain Layout

#set.seed(12345)
\end_layout

\begin_layout Plain Layout

op <- par() 
\end_layout

\begin_layout Plain Layout

pjmar <- c(5.1, 5.1, 1.5, 2.1) 
\end_layout

\begin_layout Plain Layout

#pjmar <- par("mar")
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Title
Keeping a Project Together 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
projects
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul E.
 Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Political Science
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Center for Research Methods and Data Analysis, University of Kansas
\begin_inset Argument 1
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Overview
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Frame
This presentation is part of a folder created for training purposes in CRMDA.
 The data and output files to which it refers are available in the zip package,
 
\begin_inset Quotes eld
\end_inset

projects.zip
\begin_inset Quotes erd
\end_inset

 that includes this presentation as well as the data and output folders.
 Its attached to the Event listing on 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://crmda.ku.edu/events
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Section
Workflow
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Understanding each other now and in the future}
\end_layout

\end_inset


\end_layout

\begin_layout ExampleBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Replication is the priority
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Replication across teammates (mutually understandable projects)
\end_layout

\begin_layout Itemize
Replication across time; can understand & repeat work in future
\end_layout

\begin_layout Itemize
Can repeat work from top to bottom 
\series bold
\emph on
EXACTLY
\end_layout

\end_deeper
\begin_layout AlertBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Clear directory and file names!
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Directories separate work into understandable pieces
\end_layout

\begin_layout Itemize
Even Apple now recommends against spaces and special characters in file
 names!
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "Cross-platform filename best practices and conventions"
target "https://support.apple.com/en-us/HT202808"

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Names are chosen by experience and testing
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Separate places for separate things
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Novices}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
A novice throws all files, for all of their projects, into 
\begin_inset Quotes eld
\end_inset

My Documents
\begin_inset Quotes erd
\end_inset

.
 (Or similar, such as 
\begin_inset Quotes eld
\end_inset

/users/your-name-here/Documents
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Itemize
Smarter novices will create subdirectories for courses
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Documents/hist101
\end_layout

\begin_layout Plain Layout

Documents/eng101
\end_layout

\end_inset


\end_layout

\begin_layout Standard
But everything for hist101 will fall into that one (possibly giant) folder.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Forward-Looking Novice}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Separate folders for separate projects (better!)
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Documents/hist101/exam_1
\end_layout

\begin_layout Plain Layout

Documents/hist101/exam_2
\end_layout

\begin_layout Plain Layout

Documents/hist101/termpaper_1
\end_layout

\begin_layout Plain Layout

Documents/hist101/final
\end_layout

\begin_layout Plain Layout

Documents/eng101/bookreport_1
\end_layout

\begin_layout Plain Layout

Documents/eng101/bookreport_2
\end_layout

\begin_layout Plain Layout

Documents/eng101/bookreport_3
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Not a Novice? Folders Within Projects}
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Standard
A project has subdirectories
\end_layout

\begin_layout Description
data: Data in 
\begin_inset Quotes eld
\end_inset

fresh
\begin_inset Quotes erd
\end_inset

 
\begin_inset Quotes eld
\end_inset

pristine
\begin_inset Quotes erd
\end_inset

 
\begin_inset Quotes eld
\end_inset

unaltered state
\begin_inset Quotes erd
\end_inset

.
 Never altered.
 Read Only
\end_layout

\begin_layout Description
workingdata: 
\begin_inset Quotes eld
\end_inset

Recoded
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Cleaned
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Subsetted
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Description
output: Graphs and tables
\end_layout

\begin_layout Description
lit: reading material
\end_layout

\begin_layout Description
writeup: things we write
\end_layout

\begin_layout Description
tmp: trash
\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Standard
The 
\begin_inset Quotes eld
\end_inset

working directory
\begin_inset Quotes erd
\end_inset

 is usually a software-specific folder, as in
\end_layout

\begin_layout Description
R: R code files, usually suffixed 
\begin_inset Quotes eld
\end_inset

*.R
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Description
Stata: Stata files, usually suffixed 
\begin_inset Quotes eld
\end_inset

*.do
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Description
SAS: usually suffixed 
\begin_inset Quotes eld
\end_inset

*.sas
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Description
Mplus: 
\begin_inset Quotes eld
\end_inset

*.inp
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Example with Dog Data
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Standard Project folder}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Here is the project directory
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=8cm]{importfigs/folder_nautilus.png}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I wrote a little program that creates a set of directories automatically.
 (The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
kutils
\end_layout

\end_inset

 package for R)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Copy in the Doggie Data File}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
We are provided with this original data file by the 
\begin_inset Quotes eld
\end_inset

client
\begin_inset Quotes erd
\end_inset

: 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
WorkingDogDataCleaned.xlsx
\end_layout

\end_deeper
\begin_layout Itemize
Probably created by MS Excel
\end_layout

\begin_layout Itemize
Copy that file into the directory named
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

project
\end_layout

\begin_layout Plain Layout

    data
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{I'm Luke Warm on Excel}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{importfigs/Should_You_Use_Excel_for_Statistics.png}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{I Like R because $
\backslash
ldots$}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R is free and open source (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

www.r-project.org
\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize
Worldwide community seems to thrive on idea that R is the 
\begin_inset Quotes eld
\end_inset

lingua franca of statistics
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
1000s of contributed addon packages, including 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rockchalk
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
kutils
\end_layout

\end_inset

 from KU!
\end_layout

\begin_layout Itemize
CRMDA offers Summer 
\begin_inset Quotes eld
\end_inset

Stats Camp
\begin_inset Quotes erd
\end_inset

 workshops on R, Stata, and other computer software (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://crmda.ku.edu/statscamp
\end_layout

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Use R code to Import the XLSX file}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
We have great luck lately with the R addon package named 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
openxlsx
\end_layout

\end_inset

 by Alexander Walker.
 
\end_layout

\begin_layout Itemize
The R commands to import
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<import10>>=
\end_layout

\begin_layout Plain Layout

library(openxlsx)
\end_layout

\begin_layout Plain Layout

fn <- "../data/WorkingDogDataCleaned.xlsx" ## The filename
\end_layout

\begin_layout Plain Layout

dogs <- read.xlsx(fn, sheet = 1)
\end_layout

\begin_layout Plain Layout

owners <- read.xlsx(fn, sheet = 2) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Whoa.
 What's that "../" thing?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
It is a Relative Path.
 It works on all operating systems.
 
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

data
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

R
\begin_inset Quotes erd
\end_inset

 folders are on same level, within the project
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

project
\end_layout

\begin_layout Plain Layout

    data
\end_layout

\begin_layout Plain Layout

    R
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Code inside the R folder wants files in the data folder, so it asks for
 
\begin_inset Quotes eld
\end_inset

../data/WorkingDogDataCleaned.xslx
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
Similar logic, can write output to 
\begin_inset Quotes eld
\end_inset

../output
\begin_inset Quotes erd
\end_inset

 folder.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What has to Happen}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Inspect each column
\end_layout

\begin_layout Itemize
Apply corrections
\end_layout

\begin_layout Itemize
save result into the 
\begin_inset Quotes eld
\end_inset

../workingdata
\begin_inset Quotes erd
\end_inset

 folder.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{When the Data is Open in the R session, we investigate}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Many R functions exist to 
\begin_inset Quotes eld
\end_inset

find out what we have
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Itemize
View(dogs) gives a spread-sheet style view
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=14cm]{importfigs/View_dogs.png}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I wrote a new one called 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
peek
\end_layout

\end_inset

 (in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
kutils
\end_layout

\end_inset

) that gives a quick look at all of the variables.
\end_layout

\begin_layout Itemize
Check the output folder that comes with this presentation!
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{I wrote a new function called "peek" in July, 2016}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<peek10>>=
\end_layout

\begin_layout Plain Layout

library(kutils)
\end_layout

\begin_layout Plain Layout

peek(dogs, file = "../output/peek_dog.pdf", freq = TRUE, sort = FALSE, height
 = 5, width = 8)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<peek20, include=F>>=
\end_layout

\begin_layout Plain Layout

peek(owners, file = "../output/peek_owners.pdf", freq = TRUE, sort = FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Puts output 
\begin_inset Quotes eld
\end_inset

over there
\begin_inset Quotes erd
\end_inset

 in 
\begin_inset Quotes eld
\end_inset

../output/peek_dog.pdf
\begin_inset Quotes erd
\end_inset

 file.
\end_layout

\begin_layout Itemize
Check in the output directory, look at peek_dog.pdf
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{peek output has one image per variable}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Numeric variables: peek shows 
\begin_inset Quotes eld
\end_inset

up and down
\begin_inset Quotes erd
\end_inset

 
\emph on
histogram
\end_layout

\begin_layout Itemize
Categorical (AKA 
\begin_inset Quotes eld
\end_inset

factor
\begin_inset Quotes erd
\end_inset

) variables: are sideways bar plots.
\end_layout

\begin_layout Description
Your
\begin_inset space ~
\end_inset

Mission: Cycle through the graphs to Spot your data recoding challenges
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{importfigs/peek_dogid.png}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{peek output has one image per variable}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{importfigs/peek_medical.png}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{peek output has one image per variable}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{importfigs/peek_sterilization.png}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Need to Systematically Check for}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Data entry errors
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Missing
\begin_inset Quotes erd
\end_inset

 value indicators that need to be turned into missing values
\end_layout

\begin_layout Itemize
The sterilization variable should be 
\begin_inset Quotes eld
\end_inset

No
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Yes
\begin_inset Quotes erd
\end_inset

 rather than a numeric 0, 1
\end_layout

\begin_layout Itemize
Example code in the R folder shows how I might have done some of that work.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{When Recoding Work is Done}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Save the output of the recoding program in the folder 
\begin_inset Quotes eld
\end_inset

../workingdata
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

saveRDS(dogs, file = "../workingdata/dogs.rds")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The analysis step begins with a new R program that begins, for example,
 with
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

dogdat <- readRDS("../workingdata/dogs.rds")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Do Same Cleanup with Owners}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=13cm]{importfigs/View_owners.png}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Ethnicity looks especially tricky in the owner data}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{rr}
\end_layout

\begin_layout Plain Layout

  
\backslash
hline
\end_layout

\begin_layout Plain Layout

 & OwnerRaceEthnicity 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

 & (count) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

  
\backslash
hline
\end_layout

\begin_layout Plain Layout

99 &   2 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

  Caucasian &   3 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

  Caucasian/Pacific Islander &   1 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

  Hispanic &   2 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

  Vietnamese &   1 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

  White &   2 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

  White Anglo &   2 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

  White/Caucasian &   1 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

   
\backslash
hline
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Ethnicity looks especially tricky in the owner data}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Appears we need to relabel 
\begin_inset Quotes eld
\end_inset

White/Caucasian
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

White Anglo
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

White
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Caucasian
\begin_inset Quotes erd
\end_inset

 as the same thing.
\end_layout

\begin_layout Itemize
Looks complicated? (I'd teach you up in the summer stats camp
\begin_inset Formula $\ldots$
\end_inset

).
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

## use `mapvalues` from the plyr package
\end_layout

\begin_layout Plain Layout

owners$OwnerRaceEthnicity <- plyr::mapvalues(owners$OwnerRaceEthnicity,
 from = c("White/Caucasian", "White Anglo", "White", "Caucasian"), to =
 "Caucasian") 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Find all rows from OwnerRaceEthnicity that match (%in%) the target values,
 and then reassign them (
\begin_inset Quotes eld
\end_inset

<-
\begin_inset Quotes erd
\end_inset

) as 
\begin_inset Quotes eld
\end_inset

Caucasian
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{After Re-grouping Categories}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{rr}
\end_layout

\begin_layout Plain Layout

  
\backslash
hline
\end_layout

\begin_layout Plain Layout

 & OwnerRaceEthnicity 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

  
\backslash
hline
\end_layout

\begin_layout Plain Layout

99 &   2 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

  Caucasian &   8 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

  Caucasian/Pacific Islander &   1 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

  Hispanic &   2 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

  Vietnamese &   1 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

   
\backslash
hline
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
Then we'd need to do more work
\end_layout

\begin_layout Enumerate
Convert the 99's to the 
\begin_inset Quotes eld
\end_inset

missing value
\begin_inset Quotes erd
\end_inset

 symbol NA
\end_layout

\begin_layout Enumerate
Wrestle with the question of how to deal with the other non-Caucasian categories
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Other Software, Same Story}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Many stats programs can import XLSX well enough.
\end_layout

\begin_layout Itemize
They don't have a super cool function like 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
peek
\end_layout

\end_inset

 to snoop through columns (but now that we've let the cat out of the bag,
 they probably will).
\end_layout

\begin_layout Itemize
If there is trouble with importing, use a spread sheet program to 
\begin_inset Quotes eld
\end_inset

save as
\begin_inset Quotes erd
\end_inset

 CSV (comma-separated-variable) file.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Take-Aways
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Follow the Cross-Platform name conventions}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Use directory and file names that don't have spaces or other 
\begin_inset Quotes eld
\end_inset

reserved symbols
\begin_inset Quotes erd
\end_inset

 like like 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
!
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
*
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
&
\end_layout

\end_inset

, or 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
@
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Names that have clear, intuitive, don't confuse many people.
\end_layout

\begin_layout Itemize
Don't be afraid to cultivate habits and consistency among your efforts.
 Don't think every project deserves a completely different directory and
 file naming system.
\end_layout

\begin_layout Itemize
Short lower case names make me happy ☺
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Use sub-folders for projects}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I strongly prefer to keep input, output in separate folders 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
data
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
workingdata
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
output
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lit
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
writeup
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
admin
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
R
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stata
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mplus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SAS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
I find it bizarre that some people don't want to separate data from code
 from output, but am resigned to fact that people are free to disagree (no
 matter how wrong they are).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Consider in the Future}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Develop good Backup Habits
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
keep copies on a server, not in a USB stick that you put through the laundry
\end_layout

\end_deeper
\begin_layout Itemize
Using a 
\begin_inset Quotes eld
\end_inset

Version Management
\begin_inset Quotes erd
\end_inset

 scheme
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
We use 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Git
\end_layout

\end_inset

, a combination of 
\begin_inset Quotes eld
\end_inset

snapshot backup
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

project management
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Guide for that at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://crmda.ku.edu/guides
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
In the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
kutils
\end_layout

\end_inset

 package, we have developed a simple notation system that will help to better-or
ganize the recoding process.
 This is called the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Variable Key
\end_layout

\end_inset

 framework and we have an essay about it distributed with the package.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
