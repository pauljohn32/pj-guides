#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble

\usepackage{dcolumn}
\usepackage{booktabs}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}


\usepackage{graphicx}
\usepackage{listings}

\mode<presentation>
{
  \usetheme{Antibes}
}

\usepackage{fancyvrb}
% In document Latex options:
\fvset{listparameters={\setlength{\topsep}{0em}}}
\def\Sweavesize{\normalsize} 
\def\Rcolor{\color{black}} 
\def\Rbackground{\color[gray]{0.95}}



\providecommand{\Rcolor}{\color[rgb]{0, 0.5, 0.5}}
\providecommand{\Routcolor}{\color[rgb]{0.461, 0.039, 0.102}}
\providecommand{\Rcommentcolor}{\color[rgb]{0.101, 0.043, 0.432}}

\providecommand{\Rbackground}{\color[gray]{0.91}}
\providecommand{\Routbackground}{\color[gray]{0.935}}
% Can specify \color[gray]{1} for white background or just \color{white}


\lstdefinestyle{Rstyle}{fancyvrb=false,escapechar=`,language=R,%
                        basicstyle={\Rcolor\Sweavesize},%
                        backgroundcolor=\Rbackground,%
                        showstringspaces=false,%
                        keywordstyle=\Rcolor,%
                        commentstyle={\Rcommentcolor\ttfamily\itshape},%
                        literate={~}{{$\sim$}}1{^}{{$^{\scriptstyle\wedge}$}}1,%
                        alsoother={$},%
                        alsoletter={.<-},%
                        otherkeywords={!,!=,~,$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},%
                        escapeinside={(*}{*)}}%
% Other options of interest:
% frame=single,framerule=0.1pt,framesep=1pt,rulecolor=\color{blue},
% numbers=left,numberstyle=\tiny,stepnumber=1,numbersep=7pt,
% keywordstyle={\bf\Rcolor}

\lstdefinestyle{Routstyle}{fancyvrb=false,literate={~}{{$\sim$}}1{R^2}{{$R^{2}$}}2{^}{{$^{\scriptstyle\wedge}$}}1{R-squared}{{$R^{2}$}}2,%
 frame=single,framerule=0.2pt,framesep=1pt,basicstyle=\Routcolor\Sweavesize,%
 backgroundcolor=\Routbackground}


\lstnewenvironment{Sinput}{\lstset{style=Rstyle}}{}
\lstnewenvironment{Scode}{\lstset{style=Rstyle}}{}
\lstnewenvironment{Soutput}{\lstset{style=Routstyle}}{}


\lstset{tabsize=2, breaklines=true,style=Rstyle}
%\usetheme{Warsaw}
% or ...

%\setbeamercovered{transparent}
% or whatever (possibly just delete it)

\usepackage{xcolor}
\definecolor{darkblue}{HTML}{1e2277}
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "HPC Overview"
\pdf_author "Paul Johnson"
\pdf_subject "HPC"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "urlcolor=darkblue, linkcolor=darkblue"
\papersize letterpaper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
HPC Overview
\begin_inset Argument 1
status open

\begin_layout Plain Layout
HPC
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul E.
 Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Political Science
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Center for Research Methods and Data Analysis, University of Kansas
\begin_inset Argument 1
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Date
2017
\begin_inset Argument 1
status open

\begin_layout Plain Layout
2017
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frametitle{Outline}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://pj.freefaculty.org/guides/Computing-HOWTO
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
This is an Overview
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Prepare you to work on the 
\begin_inset Quotes eld
\end_inset

compute cluster
\begin_inset Quotes erd
\end_inset

, the KU Community Cluster, a network of Linux computers (
\begin_inset Quotes eld
\end_inset

nodes
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Itemize
Linux will be unfamiliar to some new students, but it is vital to overcome
 fear/anxiety about the 
\begin_inset Quotes eld
\end_inset

command line
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What is the Purpose?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Launch 
\begin_inset Quotes eld
\end_inset

long running
\begin_inset Quotes erd
\end_inset

 programs
\end_layout

\begin_layout Itemize
Launch programs that divide their work among many separate computers
\end_layout

\begin_layout Itemize
Run simulations that might take months or years in your PC.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
How to Get Ready?
\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Get some Linux Practice
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Get some practice with Linux.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Become familiar with the command line
\end_layout

\begin_layout Itemize
If you have a Mac, you are already running a Unix system :).
 Utilities -> Terminal
\end_layout

\begin_layout Itemize
In Windows, install Git BASH or Ubuntu BASH Shell for windows
\end_layout

\begin_layout Itemize
Log in on somebody else's Linux system, which probably has a Graphical User
 Interface.
\end_layout

\end_deeper
\begin_layout Itemize
Try some of the simple commands.
 See the 
\begin_inset Quotes eld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "linux-help"
target "http://crmda.ku.edu/linux-help"

\end_inset


\begin_inset Quotes erd
\end_inset

 page on the CRMDA website.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Jump in with both feet
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Consider installing Linux on your system, or in an external disk drive
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
If you are indifferent between Linux distributions, choose Centos or Fedora
 Linux because they are most similar to the Cluster.
\end_layout

\begin_layout Itemize
Perhaps Ubuntu Linux is more 
\begin_inset Quotes eld
\end_inset

user friendly.
\begin_inset Quotes erd
\end_inset

 It is 
\emph on
certainly
\emph default
 easier to configure proprietary video drives in Ubuntu.
\end_layout

\end_deeper
\begin_layout Itemize
Or consider Virtual Machine.
 We have good experience with Oracle VirtualBox
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Section
We are Still Learning Too
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Cluster Transition
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
CRMDA had its own cluster, 60 compute nodes, 8 cores each
\end_layout

\begin_layout Itemize
In 2015, we transitioned into the Advanced Computing Facility cluster at
 KU
\end_layout

\begin_layout Itemize
In February, 2017, KU re-organized that into the Center for Research Computing
 cluster
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Instructions needed re-writing
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://crmda.ku.edu/computing
\end_layout

\end_inset

 under revision
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "CRMDA timeline blog"
target "https://crmda.dept.ku.edu/timeline"

\end_inset

 has updates that are not in the Web pages yet
\end_layout

\begin_layout Itemize
If our pages tell you to do something, and it does not work, there's a reasonabl
y good chance we are telling you the wrong thing☹
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame

\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Section
Go To The Cluster
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Cluster "login" node}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Secure Shell (SSH) is required.
\end_layout

\begin_layout Itemize
In Linux or Mac OSX open a terminal and run
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

ssh username@hpc.crc.ku.edu
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
On Windows, install an 
\begin_inset Quotes eld
\end_inset

ssh capable
\begin_inset Quotes erd
\end_inset

 terminal program, such as 
\begin_inset Quotes eld
\end_inset

Putty
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
These will put you into 
\begin_inset Quotes eld
\end_inset

the command line
\begin_inset Quotes erd
\end_inset

 on the 
\begin_inset Quotes eld
\end_inset

login node
\begin_inset Quotes erd
\end_inset

 (AKA 
\begin_inset Quotes eld
\end_inset

head node
\begin_inset Quotes erd
\end_inset

) of the cluster.
\end_layout

\begin_layout Itemize
Tip: 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
hpc.crc.ku.edu
\end_layout

\end_inset

 is a 
\begin_inset Quotes eld
\end_inset

load balancing
\begin_inset Quotes erd
\end_inset

 login that points your connection at either of 2 login nodes, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
submit1.hpc.crc.ku.edu
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
submit2.hpc.crc.ku.edu
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{I Logged In.
 See?}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize},breaklines=true,tabsize=2"
inline false
status open

\begin_layout Plain Layout

$ ssh hpc.crc.ku.edu
\end_layout

\begin_layout Plain Layout

Last login: Tue Aug 15 12:24:28 2017
\end_layout

\begin_layout Plain Layout

****************************************************
\end_layout

\begin_layout Plain Layout

                                NOTICE TO USERS
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Access to electronic resources at the University of 
\end_layout

\begin_layout Plain Layout

Kansas is restricted to employees, students, or 
\end_layout

\begin_layout Plain Layout

individuals authorized by the University or its
\end_layout

\begin_layout Plain Layout

affiliates.
 Use of this system is subject to all 
\end_layout

\begin_layout Plain Layout

policies and procedures set forth by the University 
\end_layout

\begin_layout Plain Layout

located at www.policy.ku.edu.
 Unauthorized use is
\end_layout

\begin_layout Plain Layout

prohibited and may result in administrative or 
\end_layout

\begin_layout Plain Layout

legal action.
 The University may monitor the use of 
\end_layout

\begin_layout Plain Layout

this system for purposes related to security management,
\end_layout

\begin_layout Plain Layout

system operations, and intellectual property compliance.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

******************************************************
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    Welcome to the University of Kansas Community Cluster
\end_layout

\begin_layout Plain Layout

      Send questions, problems, etc to crchelp@ku.edu
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   Check out the Center for Research Computing website for
\end_layout

\begin_layout Plain Layout

       more information on usage of the cluster
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

       https://crc.ku.edu
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

*****************************************************
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    Upcoming Maintenance (all time CDT):
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Start               End                 Reason       Affects
\end_layout

\begin_layout Plain Layout

--------------      --------------      --------     -------------
\end_layout

\begin_layout Plain Layout

08:00 September 19  08:00 September 20  maintenance  all nodes
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

*****************************************************
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Storage groups you have access to:
\end_layout

\begin_layout Plain Layout

------------------------------------
\end_layout

\begin_layout Plain Layout

crmda (Primary)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Queues you may submit to:
\end_layout

\begin_layout Plain Layout

---------------------------
\end_layout

\begin_layout Plain Layout

crmda (Default)
\end_layout

\begin_layout Plain Layout

sixhour
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Your Storage variables and Quotas:
\end_layout

\begin_layout Plain Layout

------------------------------------
\end_layout

\begin_layout Plain Layout

$HOME = /home/pauljohn
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   <GB> <soft> <hard> : <files> <soft> <hard> : <path to volume> <pan_identity(n
ame)>
\end_layout

\begin_layout Plain Layout

  33.46  85.00 100.00 :   98538  85000 100000 : /home/pauljohn uid:142424(pauljohn)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$WORK = /panfs/pfs.local/work/crmda/pauljohn
\end_layout

\begin_layout Plain Layout

Filesystem 
\end_layout

\begin_layout Plain Layout

Size Used Avail Use% Mounted on panfs://pfs.local/work
\end_layout

\begin_layout Plain Layout

14T  6.3T  7.4T  47% /panfs/pfs.local/work/crmda/pauljohn
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$SCRATCH = /panfs/pfs.local/scratch/crmda/pauljohn
\end_layout

\begin_layout Plain Layout

Filesystem
\end_layout

\begin_layout Plain Layout

Size  Used Avail Use% Mounted on panfs://pfs.local/scratch
\end_layout

\begin_layout Plain Layout

55T   35T   20T  65% /panfs/pfs.local/scratch/crmda/pauljohn
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$CRMDA = /panfs/pfs.local/work/crmda
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Memorize some things, Look up others.}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I have memorized these, further discussed in 
\begin_inset CommandInset href
LatexCommand href
name "Terminal-1"
target "http://pj.freefaculty.org/guides/Computing-HOWTO/IntroTerminal-1/terminal-1.pdf"

\end_inset

 lecture notes
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ pwd              # print working dir
\end_layout

\begin_layout Plain Layout

$ ls               # list files
\end_layout

\begin_layout Plain Layout

$ mkdir            # make a directory
\end_layout

\begin_layout Plain Layout

$ cd               # change directory
\end_layout

\begin_layout Plain Layout

$ rm fn            # erase fn
\end_layout

\begin_layout Plain Layout

$ mv fn somewhere  # move fn somewhere
\end_layout

\begin_layout Plain Layout

$ cat fn           # print out fn on screen
\end_layout

\begin_layout Plain Layout

$ nano fn          # use "nano" editor
\end_layout

\begin_layout Plain Layout

$ grep "poop" *    # find "poop" in *
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
The Module system
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Software is provided in modules: choose what you need.
\end_layout

\begin_deeper
\begin_layout Description
module
\begin_inset space ~
\end_inset

avail: modules you are allowed to load
\end_layout

\begin_layout Description
module
\begin_inset space ~
\end_inset

list: currently loaded modules
\end_layout

\begin_layout Description
module
\begin_inset space ~
\end_inset

spider: search for modules you want but are not (yet) allowed to load
\end_layout

\begin_layout Description
module
\begin_inset space ~
\end_inset

load: load a module
\end_layout

\end_deeper
\begin_layout Itemize
In my opinion, this should be easy for novices, we should apply a default
 set of modules.
 
\end_layout

\begin_layout Itemize
We are developing a system to make that work, but some user effort is required.
 See 
\begin_inset CommandInset href
LatexCommand href
name "my Timeline blog post"
target "http://www.crmda.dept.ku.edu/timeline/archives/184"

\end_inset

 
\begin_inset Quotes eld
\end_inset

R modules: Super Exciting New Updates
\begin_inset Quotes erd
\end_inset

 (July 24, 2017).
\end_layout

\begin_layout Itemize
This will eventually find its way into 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://crmda.ku.edu/acf-modules
\end_layout

\end_inset

, which needs updating
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
NFS: Networked File System
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Your $HOME folder is shared by all the compute nodes and the head node
\end_layout

\begin_layout Itemize
Other folders are shared as well, such as $WORK and $SCRATCH
\end_layout

\begin_layout Itemize
So the files you see on one 
\begin_inset Quotes eld
\end_inset

node
\begin_inset Quotes erd
\end_inset

 in the system are the same ones you see on any other system
\end_layout

\begin_layout Itemize
That's part of the magic of parallel programming–60 computers can read and
 write in the same area.
\end_layout

\begin_layout Itemize
That's also part of the danger: Different nodes writing on same file might
 cause failure
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{HOME, WORK, SCRATCH}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The new CRC cluster changed some policies about file storage
\end_layout

\begin_layout Itemize
User home folders are not backed up, it is not recommended to do important
 work there.
\end_layout

\begin_layout Itemize
Simulations and other 
\begin_inset Quotes eld
\end_inset

real work
\begin_inset Quotes erd
\end_inset

 should be done in the $WORK folder assigned for each user.
 
\end_layout

\begin_layout Itemize
Computations that generate a lot of temporary files can be run in the $SCRATCH
 folder.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{If you have X11$
\backslash
ldots$}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
X11 displays 
\begin_inset Quotes eld
\end_inset

windows
\begin_inset Quotes erd
\end_inset

 launched by remote system
\end_layout

\begin_deeper
\begin_layout Itemize
If your workstation has X11, the cluster can display windows 
\begin_inset Quotes eld
\end_inset

onto
\begin_inset Quotes erd
\end_inset

 your desktop
\end_layout

\end_deeper
\begin_layout Itemize
Easier on Linux and Macintosh (get Xquartz), tougher (but possible) in Windows
\end_layout

\begin_layout Itemize
If you have X11, then log in by telling your ssh program that you want to
 use X11 to 
\begin_inset Quotes eld
\end_inset

relay
\begin_inset Quotes erd
\end_inset

 GUI to your desktop:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ ssh -X username@hpc.crc.ku.edu
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Changing Remote Desktop Options}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
We enjoyed using NoMachine with the cluster, but the CRC elected to discontinue
 that service
\end_layout

\begin_layout Itemize
A new service, called Viewpoint, is a Web browser portal 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://crc.ku.edu/using-hpc
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Fear the Head Node
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
You log in to hpc.crc.ku.edu, but 
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
don't
\series default
 work there
\end_layout

\begin_layout Itemize

\series bold
do
\series default
 go a 
\begin_inset Quotes eld
\end_inset

compute node
\begin_inset Quotes erd
\end_inset

 for an 
\begin_inset Quotes eld
\end_inset

interactive session
\begin_inset Quotes erd
\end_inset

 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://crmda.ku.edu/interactive-session
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Interactive sessions can be requested in various ways, by typing out a long
 
\begin_inset Quotes eld
\end_inset

msub
\begin_inset Quotes erd
\end_inset

 command or by using the 
\end_layout

\begin_deeper
\begin_layout Itemize
SHORTCUT: 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
qxlogin
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

x
\begin_inset Quotes erd
\end_inset

 in there is for 
\begin_inset Quotes eld
\end_inset

X11 forwarding
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
There is a Graphical Interface for Linux
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
My Linux Laptop uses the XFCE graphical 
\begin_inset Quotes eld
\end_inset

desktop environment
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Itemize
Cluster nodes 
\end_layout

\begin_deeper
\begin_layout Itemize
don't have the whole desktop environment installed
\end_layout

\begin_layout Itemize
do have individual programs that can 
\begin_inset Quotes eld
\end_inset

make
\begin_inset Quotes erd
\end_inset

 windows
\end_layout

\end_deeper
\begin_layout Itemize
At the current time, the 2 alternatives for displaying those windows are
 
\end_layout

\begin_deeper
\begin_layout Itemize
X11 forwarding, and 
\end_layout

\begin_layout Itemize
RemoteViz in the View Web portal
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Section
Working Examples
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Don't Let an Important Program Be Your First Program}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Everybody makes mistakes.
 Nothing works the first time.
\end_layout

\begin_layout Itemize
Please practice with small programs
\end_layout

\begin_deeper
\begin_layout Itemize
Don't throw together a 1000 line sequence of commands and expect it to work.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Itemize
Keep separate pieces separate
\end_layout

\end_deeper
\begin_layout Itemize
Be clear in your purpose in every step
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Why Working Examples?
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
This is what I learned from programmers at Santa Fe Institute and Los Alamos
 Labs:
\end_layout

\begin_layout Itemize
A working program may knit together 5 or 10 separate pieces.
\end_layout

\begin_layout Itemize
Failures can occur in any of those separate pieces.
\end_layout

\begin_layout Itemize
A WorkingExample is focused effort to explore one piece or the connection
 between pieces.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://pj.freefaculty.org/R/WorkingExamples
\end_layout

\end_inset

 Self explanatory, single purpose R examples.
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
hpcexample
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
We are on a Leading Edge
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

High Performance Computing
\begin_inset Quotes erd
\end_inset

 is in rapid development
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

We
\begin_inset Quotes erd
\end_inset

 are all learning how to run programs in that environment.
\end_layout

\begin_layout Itemize
If things don't work, don't panic, we can often find solutions
\end_layout

\begin_layout Itemize
If things don't work, please read error messages and file good bug reports.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Working Examples For Batch Computing
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
We recently relocated our repository from an SVN server to GitLab, which
 offers a web view of the project: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://gitlab.crmda.ku.edu/crmda/hpcexample
\end_layout

\end_inset

 
\end_layout

\begin_layout Description
Don't
\begin_inset space ~
\end_inset

copy
\begin_inset space ~
\end_inset

individual
\begin_inset space ~
\end_inset

files in your browser.
 
\end_layout

\begin_layout Description
Use
\begin_inset space ~
\end_inset

a
\begin_inset space ~
\end_inset

Git
\begin_inset space ~
\end_inset

client to retrieve everything.
\end_layout

\begin_layout Description
More
\begin_inset space ~
\end_inset

about
\begin_inset space ~
\end_inset

Git 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://crmda.ku.edu/git-help
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Step 2: Get to a "compute node"}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
log in hpc.crc.ku.edu.
 
\end_layout

\begin_layout Enumerate
Run either 
\begin_inset Quotes eld
\end_inset

qlogin
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

qxlogin
\begin_inset Quotes erd
\end_inset

, depending if your workstation has X11.
\end_layout

\begin_layout Enumerate
qxlogin example
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ qxlogin
\end_layout

\begin_layout Plain Layout

qsub: waiting for job 41452764.sched to start 
\end_layout

\begin_layout Plain Layout

qsub: job 41452764.sched ready
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Step 3: Create a folder for a Working Copy ("Sandbox")}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
At the command prompt, make a practice directory
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ mkdir GIT
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Make sure that new directory got created
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ ls -la
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Change into that directory (so it becomes your 
\begin_inset Quotes eld
\end_inset

working directory
\begin_inset Quotes erd
\end_inset

)
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ cd GIT
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Make sure you really are there!
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ pwd
\end_layout

\begin_layout Plain Layout

$ ls -la
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Step 4: Get a "Sandbox" (Working Copy) of the hpcexample Repository}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Run this command to download a copy of the repository
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ git clone https://gitlab.crmda.ku.edu/crmda/hpcexample.git 
\end_layout

\begin_layout Plain Layout

Cloning into 'hpcexample'...
\end_layout

\begin_layout Plain Layout

remote: Counting objects: 1559, done.
\end_layout

\begin_layout Plain Layout

remote: Total 1559 (delta 0), reused 0 (delta 0)
\end_layout

\begin_layout Plain Layout

Receiving objects: 100% (1559/1559), 2.46 MiB, done.
\end_layout

\begin_layout Plain Layout

Resolving deltas: 100% (896/896), done.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Overcome your fears}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
change into the directory
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ cd hpcexample
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
List what you have: 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ ls
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I see this:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize}"
inline false
status open

\begin_layout Plain Layout

$  ls
\end_layout

\begin_layout Plain Layout

00-README-ROADMAP/           Ex56-MISimulation-ManySerial/
\end_layout

\begin_layout Plain Layout

Ex01-ShellScript/            Ex57-MISimulation-RMPI/
\end_layout

\begin_layout Plain Layout

Ex05-Mplus-1/                Ex60-HelloWorldSnow/
\end_layout

\begin_layout Plain Layout

Ex08-MplusRunall-1/          Ex61-HelloWorldSnowFT/
\end_layout

\begin_layout Plain Layout

Ex09-MplusRunall-2/          Ex65-R-parallel/
\end_layout

\begin_layout Plain Layout

Ex11-Mplus-ManyInpFiles/     Ex67-SOCK-Cluster/
\end_layout

\begin_layout Plain Layout

Ex20-SAS-1/                  Ex70-doMPI-sinc/
\end_layout

\begin_layout Plain Layout

Ex30-BashScriptinParallel/   Ex75-corrSim-doMpi/
\end_layout

\begin_layout Plain Layout

Ex41-HelloWorldinParallelC/  Ex76-corrSim-notParallel/
\end_layout

\begin_layout Plain Layout

Ex50-R-serial/               Ex80-PrevSci2007/
\end_layout

\begin_layout Plain Layout

Ex51-R-ManySerialJobs/       Ex81-ParallelSeedPrototype/
\end_layout

\begin_layout Plain Layout

Ex52-R-JobArray/             README.md
\end_layout

\begin_layout Plain Layout

Ex53-HelloWorldRmpi/
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Obliterate a directory.
 Pretend there is a user error.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ rm -rf Ex50-R-serial
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Make sure Ex50-R-serial is gone
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize}"
inline false
status open

\begin_layout Plain Layout

$ ls
\end_layout

\begin_layout Plain Layout

00-README-ROADMAP             Ex57-MISimulation-RMPI
\end_layout

\begin_layout Plain Layout

Ex01-ShellScript              Ex60-HelloWorldSnow
\end_layout

\begin_layout Plain Layout

Ex08-MplusRunall-1            Ex61-HelloWorldSnowFT
\end_layout

\begin_layout Plain Layout

Ex09-MplusRunall-2            Ex65-R-parallel
\end_layout

\begin_layout Plain Layout

Ex15-Mplus-ManyInpFiles       Ex66-ParallelSeedPrototype
\end_layout

\begin_layout Plain Layout

Ex30-BashScriptinParallel     Ex70-doMPI-sinc
\end_layout

\begin_layout Plain Layout

Ex41-HelloWorldinParallelC    Ex75-corrSim-doMpi
\end_layout

\begin_layout Plain Layout

Ex51-R-ManySerialJobs         Ex76-corrSim-notParallel
\end_layout

\begin_layout Plain Layout

Ex53-HelloWorldRmpi           Ex80-PrevSci2007
\end_layout

\begin_layout Plain Layout

Ex56-MISimulation-ManySerial
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
To recover that directory from Git, do this
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ git checkout -- Ex50-R-serial
\end_layout

\end_inset


\end_layout

\begin_layout Standard
After that, 
\begin_inset Quotes eld
\end_inset

voila
\begin_inset Quotes erd
\end_inset

, everything is back:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ ls Ex50-R-serial/
\end_layout

\begin_layout Plain Layout

README.md          Rsimple.o-example  sub-serial.sh
\end_layout

\begin_layout Plain Layout

Rsimple.e-example  r-serial.R         testGraph-example.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Git is a 
\begin_inset Quotes eld
\end_inset

distributed file system
\begin_inset Quotes erd
\end_inset

.
 There is a hidden directory, .git, in which all of the contents of the repositor
y, and its history, are kept:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ ls -la .git
\end_layout

\begin_layout Plain Layout

total 896
\end_layout

\begin_layout Plain Layout

drwxrwxr-x  8 pauljohn pauljohn_g  4096 Aug 21 17:57 ./
\end_layout

\begin_layout Plain Layout

drwxr-xr-x 27 pauljohn pauljohn_g  4096 Aug 21 17:57 ../
\end_layout

\begin_layout Plain Layout

-rw-rw-r--  1 pauljohn pauljohn_g   346 Aug 21 17:56 FETCH_HEAD
\end_layout

\begin_layout Plain Layout

-rw-rw-r--  1 pauljohn pauljohn_g    23 Aug 21 17:54 HEAD
\end_layout

\begin_layout Plain Layout

-rw-rw-r--  1 pauljohn pauljohn_g    41 Aug 21 17:56 ORIG_HEAD
\end_layout

\begin_layout Plain Layout

drwxrwxr-x  2 pauljohn pauljohn_g  4096 Aug 21 17:54 branches/
\end_layout

\begin_layout Plain Layout

-rw-rw-r--  1 pauljohn pauljohn_g   273 Aug 21 17:54 config
\end_layout

\begin_layout Plain Layout

-rw-rw-r--  1 pauljohn pauljohn_g    73 Aug 21 17:54 description
\end_layout

\begin_layout Plain Layout

drwxrwxr-x  2 pauljohn pauljohn_g  4096 Aug 21 17:54 hooks/
\end_layout

\begin_layout Plain Layout

-rw-rw-r--  1 pauljohn pauljohn_g 16928 Aug 21 17:57 index
\end_layout

\begin_layout Plain Layout

drwxrwxr-x  2 pauljohn pauljohn_g  4096 Aug 21 17:54 info/
\end_layout

\begin_layout Plain Layout

drwxrwxr-x  3 pauljohn pauljohn_g  4096 Aug 21 17:54 logs/
\end_layout

\begin_layout Plain Layout

drwxrwxr-x  4 pauljohn pauljohn_g  4096 Aug 21 17:54 objects/
\end_layout

\begin_layout Plain Layout

-rw-rw-r--  1 pauljohn pauljohn_g   232 Aug 21 17:54 packed-refs
\end_layout

\begin_layout Plain Layout

drwxrwxr-x  5 pauljohn pauljohn_g  4096 Aug 21 17:54 refs/
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What Are You Supposed To Find In There?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Each folder is a more-or-less self contained small example of something
\end_layout

\begin_layout Itemize
In each, there SHOULD be
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
README 
\end_layout

\begin_layout Standard
Example output
\end_layout

\end_deeper
\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

public facing
\begin_inset Quotes erd
\end_inset

 README.md document, which shows at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://gitlab.crmda.ku.edu/crmda/hpcexample
\end_layout

\end_inset

, is a replacement for 00-README-ROADMAP.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Take a quick look
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Consider Ex65-R-parallel}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize}"
inline false
status open

\begin_layout Plain Layout

$ ls -la
\end_layout

\begin_layout Plain Layout

total 464
\end_layout

\begin_layout Plain Layout

drwxrwxr-x  2 pauljohn pauljohn_g  4096 Aug 21 17:54 ./
\end_layout

\begin_layout Plain Layout

drwxr-xr-x 27 pauljohn pauljohn_g  4096 Aug 21 17:57 ../
\end_layout

\begin_layout Plain Layout

-rw-rw-r--  1 pauljohn pauljohn_g  1625 Aug 21 17:54 README.md
\end_layout

\begin_layout Plain Layout

-rw-rw-r--  1 pauljohn pauljohn_g    33 Aug 21 17:54 RParallelHelloWorld.e-exampl
e
\end_layout

\begin_layout Plain Layout

-rw-rw-r--  1 pauljohn pauljohn_g 40115 Aug 21 17:54 RParallelHelloWorld.o-exampl
e
\end_layout

\begin_layout Plain Layout

-rw-rw-r--  1 pauljohn pauljohn_g  5298 Aug 21 17:54 parallel-hello.R
\end_layout

\begin_layout Plain Layout

-rw-rw-r--  1 pauljohn pauljohn_g   850 Aug 21 17:54 sub-hello.sh
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Consider Ex65-R-parallel}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
To go into the cluster's Queue, a program needs 2 things.
 
\end_layout

\begin_layout Description
1 A submission script.
 My habit is to call those 
\begin_inset Quotes eld
\end_inset

sub-???.sh
\begin_inset Quotes erd
\end_inset

, here 
\begin_inset Quotes eld
\end_inset

sub-hello.sh
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Description
2 The program that the script refers to: 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
parallel-hello.R
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Submission Script}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize}"
inline false
status open

\begin_layout Plain Layout

#!/bin/sh
\end_layout

\begin_layout Plain Layout

#
\end_layout

\begin_layout Plain Layout

#
\end_layout

\begin_layout Plain Layout

#MSUB -M your-name_here@ku.edu
\end_layout

\begin_layout Plain Layout

#MSUB -N RParallelHelloWorld
\end_layout

\begin_layout Plain Layout

#MSUB -q sixhour
\end_layout

\begin_layout Plain Layout

#MSUB -l nodes=1:ppn=11:ib
\end_layout

\begin_layout Plain Layout

#MSUB -l walltime=00:05:00
\end_layout

\begin_layout Plain Layout

#MSUB -m bea
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

cd $PBS_O_WORKDIR
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

## Please check your ~/.bash_profile to make sure
\end_layout

\begin_layout Plain Layout

## the correct modules will be loaded with new shells.
\end_layout

\begin_layout Plain Layout

## See discussion:
\end_layout

\begin_layout Plain Layout

## http://www.crmda.dept.ku.edu/timeline/archives/184
\end_layout

\begin_layout Plain Layout

## In a terminal on a compute node, you can test this
\end_layout

\begin_layout Plain Layout

## by running
\end_layout

\begin_layout Plain Layout

## $ module list
\end_layout

\begin_layout Plain Layout

##
\end_layout

\begin_layout Plain Layout

## Currently Loaded Modules:
\end_layout

\begin_layout Plain Layout

##  1) legacy
\end_layout

\begin_layout Plain Layout

##  2) emacs/24.5
\end_layout

\begin_layout Plain Layout

##  3) compiler/gcc/6.3
\end_layout

\begin_layout Plain Layout

##  4) openmpi/1.6.5c
\end_layout

\begin_layout Plain Layout

##  5) java/1.8.0_131
\end_layout

\begin_layout Plain Layout

##  6) xz/5.2.3
\end_layout

\begin_layout Plain Layout

##  7) icu/59.1
\end_layout

\begin_layout Plain Layout

##  8) tcltk/8.6.6
\end_layout

\begin_layout Plain Layout

##  9) Rstats/3.3
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

## It is not helpful or necessary to insert module
\end_layout

\begin_layout Plain Layout

## commands in this script (contrary to previous advice).
\end_layout

\begin_layout Plain Layout

mpiexec -n 1 R --vanilla -f parallel-hello.R
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{How to Submit that job}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The cluster administrators prefer if we submit jobs while on the login node
\end_layout

\begin_layout Itemize
We requested a special exception so that we can put jobs into the 
\begin_inset Quotes eld
\end_inset

queue
\begin_inset Quotes erd
\end_inset

 while we are in the CRMDA computer nodes.
 
\end_layout

\begin_layout Itemize
The program that can put jobs into the queue is now called 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
msub
\end_layout

\end_inset

 (not 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
qsub
\end_layout

\end_inset

 anymore)
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ msub sub-hello.sh
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
After that, there are a number of ways to find out if the job is waiting,
 or running, or finished.
 The new program for that is
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ showq
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
However we notice that the older program, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
qstat
\end_layout

\end_inset

, also still exists (and sometimes reports in a slightly different way)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{When that's finished}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Output files created are created from every submission, one suffixed 
\begin_inset Quotes eld
\end_inset

e
\begin_inset Quotes erd
\end_inset

 and one 
\begin_inset Quotes eld
\end_inset

o
\begin_inset Quotes erd
\end_inset

.
 They will have names like RParallelHelloWorld.e234234 and RParallelHelloWorld.o23
4234.
\end_layout

\begin_layout Standard
Example copies of the files are saved with the directory, 
\begin_inset Quotes eld
\end_inset

RParallelHelloWorld.e-example
\begin_inset Quotes erd
\end_inset

 
\begin_inset Quotes eld
\end_inset

RParallelHelloWorld.o-example
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

e
\begin_inset Quotes erd
\end_inset

 file: standard error (stderr)
\end_layout

\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

o
\begin_inset Quotes erd
\end_inset

 file: standard output (stdout)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Before you launch these examples, please:}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Edit the submission script and change the email address to YOUR email:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

#MSUB -M your-name_here@ku.edu
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The default will send you an email when the job starts and ends.
\end_layout

\begin_layout Itemize
Maybe you don't want all of that email.
 It is OK to change this:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

#MSUB -m bea
\end_layout

\end_inset


\end_layout

\begin_layout Standard
to this:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

#MSUB -m ea
\end_layout

\end_inset


\end_layout

\begin_layout Standard
So that email is sent only when the job 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ends
\end_layout

\end_inset

 (
\begin_inset Quotes eld
\end_inset

e
\begin_inset Quotes erd
\end_inset

) or 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
aborts
\end_layout

\end_inset

 (
\begin_inset Quotes eld
\end_inset

a
\begin_inset Quotes erd
\end_inset

), but not when it begins (
\begin_inset Quotes eld
\end_inset

b
\begin_inset Quotes erd
\end_inset

)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Layers of Jargon}
\end_layout

\end_inset


\end_layout

\begin_layout Columns
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
Serial: Run One Self Contained Program at a Time
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Ex15-Mplus-ManyInpFiles
\end_layout

\begin_layout Itemize
Ex09-MplusRunall-2
\end_layout

\begin_layout Itemize
Ex50-R-serial
\end_layout

\begin_layout Itemize
Ex51-R-ManySerialJobs
\end_layout

\end_deeper
\begin_layout Itemize
Simpler, easier to write, don't involve parallel programming
\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
Parallel
\end_layout

\begin_deeper
\begin_layout Itemize
MPI: Message Passing Interface library.
 We use 
\begin_inset Quotes eld
\end_inset

OpenMPI
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
RMPI: R package accessing the MPI
\end_layout

\begin_layout Itemize
Snow: Simple Network of Workstations: A simplification 
\begin_inset Quotes eld
\end_inset

layer
\begin_inset Quotes erd
\end_inset

 that sits 
\begin_inset Quotes eld
\end_inset

on top
\begin_inset Quotes erd
\end_inset

 of RMPI.
\end_layout

\begin_layout Itemize
R parallel package: Introduced R-2.14.1.
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Developing your Code
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
How Do You Work On Your R Code?
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
You can edit code 
\begin_inset Quotes eld
\end_inset

on
\begin_inset Quotes erd
\end_inset

 hpc if you want to
\end_layout

\begin_layout Itemize
Especially if edits are simple (config files), this is workable.
\end_layout

\begin_layout Itemize
If an X11 server is available, I 
\emph on
do 
\emph default
use Emacs on compute nodes
\end_layout

\begin_layout Itemize
For bigger edits, I usually edit in my Workstation
\end_layout

\begin_deeper
\begin_layout Itemize
Use Git to track files and exchange between systems.
\end_layout

\begin_layout Itemize
Use rsync to transfer files between my system and the cluster
\end_layout

\end_deeper
\begin_layout Itemize
Sometimes I mount the server file share on my workstation.
 In my opinion, that's a nice way, but the system administrators do not
 look kindly upon it.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{We have a new suggestion for R parallel}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In hpcexample 
\begin_inset CommandInset href
LatexCommand href
name "Ex67-SOCK-Cluster"
target "https://gitlab.crmda.ku.edu/crmda/hpcexample/tree/master/Ex67-SOCK-Cluster"

\end_inset

, we have this suggestion:
\end_layout

\begin_layout Quote
Write code in your PC 
\begin_inset Quotes eld
\end_inset

as if
\begin_inset Quotes erd
\end_inset

 your PC has a small cluster inside it
\end_layout

\begin_layout Itemize
Transfer your R program to the cluster and make 
\begin_inset Quotes eld
\end_inset

just a few
\begin_inset Quotes erd
\end_inset

 minor changes so your program interacts with the real cluster.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Responsible Users
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Use resources carefully}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Before launching a large calculation that takes days on many compute nodes,
 carefully test smaller cases to make sure
\end_layout

\begin_deeper
\begin_layout Enumerate
the results will be useful
\end_layout

\begin_layout Enumerate
the code is efficient
\end_layout

\end_deeper
\begin_layout Itemize
Efficiency analysis involves 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

profiling
\begin_inset Quotes erd
\end_inset

 to find out where the program spends too much time, 
\end_layout

\begin_layout Itemize
conducting test runs and monitoring their resource use, especially memory
\end_layout

\end_deeper
\begin_layout Itemize
Be careful in your assumptions about the cluster.
 Some things are SLOW that you expect might be fast (writing lots of small
 files) and we can suggest ways to do this efficiently.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Learn to Report Bugs}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Nothing works right the first time, but before you report a bug, try to
 make sure you are not making an obvious mistake.
\end_layout

\begin_deeper
\begin_layout Itemize
Log out, relax.
 Perhaps logging in, and re-setting your user environment, will fix it.
\end_layout

\end_deeper
\begin_layout Itemize
When you can't figure this out, please make good bug reports.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
What are you trying to do?
\end_layout

\begin_layout Itemize
What commands were run to cause the error?
\end_layout

\begin_deeper
\begin_layout Itemize
not 
\begin_inset Quotes eld
\end_inset

something like
\begin_inset Quotes erd
\end_inset

 what you did.
 Exactly what you did.
\end_layout

\begin_layout Itemize
a transcript of the full session often helps!
\end_layout

\end_deeper
\begin_layout Itemize
What exactly were the errors? (not 
\begin_inset Quotes eld
\end_inset

something like
\begin_inset Quotes erd
\end_inset

 ...)
\end_layout

\begin_layout Itemize
Send text, not screenshots, if possible.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
