#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass beamer
\begin_preamble

\usepackage{dcolumn}
\usepackage{booktabs}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}


\usepackage{graphicx}
\usepackage{listings}

\mode<presentation>
{
  \usetheme{KU}
  \usecolortheme{dolphin} %dark blues
}

\usepackage{fancyvrb}
% In document Latex options:
\fvset{listparameters={\setlength{\topsep}{0em}}}
\def\Sweavesize{\normalsize} 
\def\Rcolor{\color{black}} 
\def\Rbackground{\color[gray]{0.95}}



\providecommand{\Rcolor}{\color[rgb]{0, 0.5, 0.5}}
\providecommand{\Routcolor}{\color[rgb]{0.461, 0.039, 0.102}}
\providecommand{\Rcommentcolor}{\color[rgb]{0.101, 0.043, 0.432}}

\providecommand{\Rbackground}{\color[gray]{0.95}}
\providecommand{\Routbackground}{\color[gray]{0.80}}
% Can specify \color[gray]{1} for white background or just \color{white}


\lstdefinestyle{Rstyle}{fancyvrb=false,escapechar=`,language=R,%
                        basicstyle={\Rcolor\Sweavesize},%
                        backgroundcolor=\Rbackground,%
                        showstringspaces=false,%
                        keywordstyle=\Rcolor,%
                        commentstyle={\Rcommentcolor\ttfamily\itshape},%
                        literate={<-}{{$\leftarrow$}}2{<<-}{{$\twoheadleftarrow$}}2{~}{{$\sim$}}1{<=}{{$\leq$}}2{>=}{{$\geq$}}2{^}{{$^{\scriptstyle\wedge}$}}1,%
                        alsoother={$},%
                        alsoletter={.<-},%
                        otherkeywords={!,!=,~,$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},%
                        escapeinside={(*}{*)}}%
% Other options of interest:
% frame=single,framerule=0.1pt,framesep=1pt,rulecolor=\color{blue},
% numbers=left,numberstyle=\tiny,stepnumber=1,numbersep=7pt,
% keywordstyle={\bf\Rcolor}

\lstdefinestyle{Routstyle}{fancyvrb=false,literate={~}{{$\sim$}}1{R^2}{{$R^{2}$}}2{^}{{$^{\scriptstyle\wedge}$}}1{R-squared}{{$R^{2}$}}2,%
 frame=single,framerule=0.2pt,framesep=1pt,basicstyle=\Routcolor\Sweavesize,%
 backgroundcolor=\Routbackground}


\lstnewenvironment{Sinput}{\lstset{style=Rstyle}}{}
\lstnewenvironment{Scode}{\lstset{style=Rstyle}}{}
\lstnewenvironment{Soutput}{\lstset{style=Routstyle}}{}


\lstset{tabsize=2, breaklines=true,style=Rstyle}
%\usetheme{Warsaw}
% or ...

%\setbeamercovered{transparent}
% or whatever (possibly just delete it)
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Editing Files on Remote File Systems
\end_layout

\begin_layout Subtitle
Terminal Intro (Vol 2)
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Terminal 2
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul E.
 Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Political Science
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Center for Research Methods and Data Analysis, University of Kansas
\begin_inset Argument 1
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Date
2016
\begin_inset Argument 1
status open

\begin_layout Plain Layout
2016
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Outline
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\end_deeper
\begin_layout Section
Editing Without a Mouse!
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Working in a Straight-Jacket
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Some systems allow no Graphical User Interface (GUI).
\end_layout

\begin_layout Itemize
3 common editing alternatives
\end_layout

\begin_deeper
\begin_layout Itemize
Emacs: most difficult, most powerful
\end_layout

\begin_layout Itemize
vi: somewhat difficult, less powerful
\end_layout

\begin_layout Itemize
nano: an old email editor.
 easy, but almost unpowerful
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
Emacs
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Run 
\begin_inset Quotes eld
\end_inset

emacs
\begin_inset Quotes erd
\end_inset

 in a text only terminal
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Graphics
	filename importfigs/Emacs-NoX11.png
	width 8cm

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Emacs No X? Challenging!
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Emacs was originally designed for this environment
\end_layout

\begin_deeper
\begin_layout Itemize
Interact with the minibuffer in the very bottom of the terminal display
\end_layout

\end_deeper
\begin_layout Itemize
Keystroke combinations to memorize
\end_layout

\begin_deeper
\begin_layout Itemize
C: Control Key
\end_layout

\begin_layout Itemize
M: Meta Key, usually Alt on modern systems
\end_layout

\end_deeper
\begin_layout Itemize
When they say 
\begin_inset Quotes eld
\end_inset

Emacs has a steep learning curve
\begin_inset Quotes erd
\end_inset

, this is what they are talking about.
 Life without a mouse or pull down menus.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
To Exit from Emacs (if accidentally stuck in there)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
If you are in a terminal, and can't figure how to get out
\end_layout

\begin_layout Itemize
To Exit: 
\end_layout

\begin_deeper
\begin_layout Itemize
Type: C-x C-c
\end_layout

\end_deeper
\begin_layout Itemize
If you goof that up and you feel stuck, Hit C-g
\end_layout

\begin_layout Itemize
C-g is 
\begin_inset Quotes eld
\end_inset

get out of trouble
\begin_inset Quotes erd
\end_inset

 in Emacs.
\end_layout

\begin_layout Itemize
Try C-x C-c again
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
nano
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Terminal: Login, use 
\begin_inset Quotes eld
\end_inset

nano
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
nano is an adaptation of 
\begin_inset Quotes eld
\end_inset

pico
\begin_inset Quotes erd
\end_inset

, the editor for 
\begin_inset Quotes eld
\end_inset

pine
\begin_inset Quotes erd
\end_inset

 email (1990s).
\end_layout

\begin_layout Itemize
Arrow keys move cursor
\end_layout

\begin_layout Itemize
Control key reminders at bottom
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/nano-1.png
	width 10cm

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
X11 Mouse Secret and Nano
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Usual 
\begin_inset Quotes eld
\end_inset

Cut
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Paste
\begin_inset Quotes erd
\end_inset

 (C-x, C-v) don't work , usually
\end_layout

\begin_layout Itemize
Some systems allow an old-fashioned X11 style cut and paste.
\end_layout

\begin_deeper
\begin_layout Itemize
Hi-light with left mouse button
\end_layout

\begin_layout Itemize
Do not touch any keys, or mouse buttons
\end_layout

\begin_layout Itemize
Move mouse pointer to target position, and hit 
\end_layout

\begin_deeper
\begin_layout Itemize
the middle mouse button, or
\end_layout

\begin_layout Itemize
both buttons at once if you don't have a middle button, or
\end_layout

\begin_layout Itemize
click the 
\begin_inset Quotes eld
\end_inset

roller
\begin_inset Quotes erd
\end_inset

 on a mouse
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
Vi
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Vi: Editor of Unix Gods who Don't Prefer Emacs
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
All Unix/Linux systems I have ever seen have 
\begin_inset Quotes eld
\end_inset

vi
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
This requires some practice, but I prefer it for editing config files because
\end_layout

\begin_deeper
\begin_layout Itemize
Fast with big text files.
 
\end_layout

\begin_layout Itemize
vi never damages text (doesn't 
\begin_inset Quotes eld
\end_inset

word wrap
\begin_inset Quotes erd
\end_inset

, etc).
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Start vi, see what happens}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
How to run the editor.
 You choose either
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ vi somefile.txt
\end_layout

\end_inset


\end_layout

\begin_layout Standard
or
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ vim somefile.txt
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

vim
\begin_inset Quotes erd
\end_inset

 is 
\begin_inset Quotes eld
\end_inset

VI improved, a newer variant
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
On many modern systems, vi and vim will launch same editor
\end_layout

\end_deeper
\begin_layout Itemize
Ignore your mouse.
 Navigate with 
\begin_inset Quotes eld
\end_inset

up arrow
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

down arrow
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Vi: Splash Screen at Startup
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Graphics
	filename importfigs/vi-1.png
	width 10cm

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
vi: Practice
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
vi always begins in 
\begin_inset Quotes eld
\end_inset

VIEW
\begin_inset Quotes erd
\end_inset

 mode.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Can move cursor
\end_layout

\begin_layout Itemize
Can delete text (Try 
\begin_inset Quotes eld
\end_inset

x
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

dd)
\end_layout

\end_deeper
\begin_layout Itemize
Touch letter 
\begin_inset Quotes eld
\end_inset

i
\begin_inset Quotes erd
\end_inset

 to go into 
\begin_inset Quotes eld
\end_inset

INSERT
\begin_inset Quotes erd
\end_inset

 mode.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Look at bottom left of terminal.
\end_layout

\end_deeper
\begin_layout Itemize
Type! You are 
\begin_inset Quotes eld
\end_inset

stuck
\begin_inset Quotes erd
\end_inset

 in the 
\begin_inset Quotes eld
\end_inset

INSERT
\begin_inset Quotes erd
\end_inset

 mode.
\end_layout

\begin_layout Itemize
To stop typing, hit 
\begin_inset Quotes eld
\end_inset

Escape
\begin_inset Quotes erd
\end_inset

 (Esc) key.
 You are back in the 
\begin_inset Quotes eld
\end_inset

VIEW
\begin_inset Quotes erd
\end_inset

 mode.
 No more inserts until you hit the letter 
\begin_inset Quotes eld
\end_inset

i
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
vi: Save and Close
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
To save: 
\end_layout

\begin_deeper
\begin_layout Itemize
Reminder: Exit INSERT if necessary (Hit the Escape (Esc) key)
\end_layout

\end_deeper
\begin_layout Description
: The Colon key puts 
\begin_inset Quotes eld
\end_inset

focus
\begin_inset Quotes erd
\end_inset

 at bottom of terminal, you should see a prompt when you do that
\end_layout

\begin_layout Itemize
To quit, type:
\end_layout

\begin_deeper
\begin_layout Description
wq to save and quit
\end_layout

\begin_layout Description
q! quit without saving
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\backslash
frametitle{vi: Just a few other things}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Did you goof up? There is UNDO
\end_layout

\begin_deeper
\begin_layout Itemize
If in INSERT mode, hit Esc
\end_layout

\end_deeper
\begin_layout Description
u is for 
\begin_inset Quotes eld
\end_inset

undo
\begin_inset Quotes erd
\end_inset

.
 It should reverse your actions one at a time.
\end_layout

\begin_layout Itemize
If you accidentally get into 
\begin_inset Quotes eld
\end_inset

recording
\begin_inset Quotes erd
\end_inset

 mode (happens to me all the time), bail out with 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Esc :q
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]{vi: Keystrokes to remember}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=bash"
inline false
status open

\begin_layout Plain Layout

x ## deletes the character at the cursor
\end_layout

\begin_layout Plain Layout

i ## begins INSERT mode at the cursor
\end_layout

\begin_layout Plain Layout

dd ## d twice deletes the current line
\end_layout

\begin_layout Plain Layout

Esc 33 dd ## deletes 33 lines (Esc nn is repeat following)
\end_layout

\begin_layout Plain Layout

/whatever ## search for whatever
\end_layout

\begin_layout Plain Layout

:n ## goes to line n in file.
 Example :55  line 55
\end_layout

\begin_layout Plain Layout

G ## goes to bottom of file
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Cut-and-paste might work: Try highlight with left mouse drag, and paste
 with middle-click mouse (only if vi is in 
\begin_inset Quotes eld
\end_inset

insert mode
\begin_inset Quotes erd
\end_inset

).
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Orientation
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{I Bring These Things Up Because}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The fastest way to interact with a file on a remote server is
\end_layout

\begin_deeper
\begin_layout Enumerate
Open a terminal
\end_layout

\begin_layout Enumerate
run 
\begin_inset Quotes eld
\end_inset

ssh server.address.com
\begin_inset Quotes erd
\end_inset

 and log in
\end_layout

\begin_layout Enumerate
Use command line 
\begin_inset Quotes eld
\end_inset

cd
\begin_inset Quotes erd
\end_inset

 to navigate to the right directory
\end_layout

\begin_layout Enumerate
Edit the file, probably in Vi.
\end_layout

\end_deeper
\begin_layout Itemize
For large, complicated edits, many of us 
\begin_inset Quotes eld
\end_inset

non-computer programmers
\begin_inset Quotes erd
\end_inset

 will say
\end_layout

\begin_deeper
\begin_layout Enumerate
Gee, that sounds 
\strikeout on
great
\strikeout default
 really tedious.
\end_layout

\begin_layout Enumerate
Can't you find some way to edit where we can use a mouse and some more comfortab
le tools?
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The alternatives}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Edit files 
\begin_inset Quotes eld
\end_inset

on your PC
\begin_inset Quotes erd
\end_inset

 and copy them over there.
\end_layout

\begin_deeper
\begin_layout Itemize
Benefits: familiar
\end_layout

\begin_layout Itemize
Disadvantages
\end_layout

\begin_deeper
\begin_layout Enumerate
Slow
\end_layout

\begin_layout Enumerate
Difficult record keeping
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Use an editor 
\begin_inset Quotes eld
\end_inset

on
\begin_inset Quotes erd
\end_inset

 your computer that can reach 
\begin_inset Quotes eld
\end_inset

out and up
\begin_inset Quotes erd
\end_inset

 to grab files on remote and edit them.
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

BBedit
\begin_inset Quotes erd
\end_inset

 for Mac was a pioneer in this
\end_layout

\begin_layout Itemize
Emacs now had Tramp mode for this purpose
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

Mount
\begin_inset Quotes erd
\end_inset

 the remote storage and make it appear 
\begin_inset Quotes eld
\end_inset

as if
\begin_inset Quotes erd
\end_inset

 it is a disk in your computer.
 May be difficult to set up
\end_layout

\begin_deeper
\begin_layout Itemize
Benefits: familiar editing
\end_layout

\begin_layout Itemize
Disadvantages
\end_layout

\begin_deeper
\begin_layout Itemize
Possible character encoding and file permission conflicts between your computer
 and 
\begin_inset Quotes eld
\end_inset

their
\begin_inset Quotes erd
\end_inset

 file system.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Get a GUI display from the remote server.
 Relay a desktop to your PC.
\end_layout

\begin_deeper
\begin_layout Itemize
Remote Desktop servers, such as VNC, NoMachine can 
\begin_inset Quotes eld
\end_inset

relay
\begin_inset Quotes erd
\end_inset

 a picture of the remote desktop's workstation.
\end_layout

\end_deeper
\begin_layout Enumerate
Edit files in a Git repository, keep clones on your PC and on the remote
 system.
 Use Git concepts to synchronize the files.
 Edit here.
 Sync there.
 Run there.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Edit Here, Transfer There
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
File Transfer Programs
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Most Unix/Linux remote systems will allow a 
\begin_inset Quotes eld
\end_inset

secure shell
\begin_inset Quotes erd
\end_inset

 based file transfer
\end_layout

\begin_layout Itemize
The common 
\begin_inset Quotes eld
\end_inset

two pane
\begin_inset Quotes erd
\end_inset

 file transfer programs like WinSCP or Filezilla will work.
\end_layout

\begin_layout Itemize
Windows
\end_layout

\begin_deeper
\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

portable
\begin_inset Quotes erd
\end_inset

 version of WinSCP works fine: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://winscp.net/eng/docs/guide_install
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
WinSCP is my favorite because, in SCP mode, it can alter file permissions
 on the remote system.
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{A snapshot of Filezilla}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/filezilla-1.png
	width 8cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks, containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Command line file transfer programs}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
To synchronize directories, I use the rsync program
\end_layout

\begin_layout Itemize
efficient because it can check if files are updated from here to there and
 only copies changed parts
\end_layout

\begin_deeper
\begin_layout Itemize
Read 
\begin_inset Quotes eld
\end_inset

man rsync
\begin_inset Quotes erd
\end_inset

: best manual page ever
\end_layout

\end_deeper
\begin_layout Itemize
Example usage
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ rsync -e ssh -rav mydir login2.acf.ku.edu:tmp/myproject
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Recursively copies, preserving all attributes, 
\begin_inset Quotes eld
\end_inset

mydir
\begin_inset Quotes erd
\end_inset

 folder to server.
\end_layout

\begin_layout Standard
Directory name on remote is relative to my home directory, so this means
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
/home/pauljohn/tmp/myproject
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
The program 
\begin_inset Quotes eld
\end_inset

scp
\begin_inset Quotes erd
\end_inset

 is also convenient, less powerful.
\end_layout

\begin_layout Itemize
Example usage
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ scp -r mydir login2.acf.ku.edu:tmp/myproject
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Mount remote file systems
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Mount remote file system as if it were a local hard drive}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Server must enable this feature
\end_layout

\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

CIFS
\begin_inset Quotes erd
\end_inset

 protocol (older name 
\begin_inset Quotes eld
\end_inset

SMB
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

Samba
\begin_inset Quotes erd
\end_inset

) is a Unix service that mimics a Windows file server.
 
\end_layout

\begin_layout Itemize
Your PC may have, or can get, 
\begin_inset Quotes eld
\end_inset

client programs
\begin_inset Quotes erd
\end_inset

 that can attach the CIFS share.
\end_layout

\begin_layout Itemize
Problem: You need to know the names of the shares offered on the target
 system
\end_layout

\begin_deeper
\begin_layout Itemize
The Linux HOME directory on ACF is not currently mountable by CIFS.
\end_layout

\begin_layout Itemize
The folder 
\begin_inset Quotes eld
\end_inset

/crmda
\begin_inset Quotes erd
\end_inset

 is a share, however
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Try a CIFS mounted share}
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned

\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Standard
Windows Explorer, try this:
\end_layout

\begin_layout Enumerate
Find 
\begin_inset Quotes eld
\end_inset

Computer
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

My Computer
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Enumerate
Choose 
\begin_inset Quotes eld
\end_inset

Map Network Drive
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
Name your 
\begin_inset Quotes eld
\end_inset

share
\begin_inset Quotes erd
\end_inset

 on the host.
 On ACF at KU, try
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout


\backslash

\backslash
transfer.acf.ku.edu
\backslash
crmda
\end_layout

\end_inset


\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
Linux or Macintosh file managers allow similar
\end_layout

\begin_layout Itemize
Try 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

smb://transfer.acf.ku.edu/crmda
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\backslash
frametitle{In Linux, I use "sshfs"}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ mkdir mount.crmda
\end_layout

\begin_layout Plain Layout

$ sshfs transfer.acf.ku.edu:/crmda mount.crmda
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Also works in Nautilus file manager at URL 
\begin_inset Quotes eld
\end_inset

ssh://transfer.acf.ku.edu/crmda
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Additional freedom to mount my HOME directory
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ mkdir mount.home
\end_layout

\begin_layout Plain Layout

$ sshfs transfer.acf.ku.edu: mount.home
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\backslash
frametitle{The Desktop might have this built in}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
File Manager may handle this as well: the URL 
\begin_inset Quotes eld
\end_inset

ssh://transfer.acf.ku.edu/crmda
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Disconnect
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ fusermount -u mount.home
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Danger in "Mounted" file systems}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The PC might 
\begin_inset Quotes eld
\end_inset

freeze
\begin_inset Quotes erd
\end_inset

 if the network fails: the OS does not respond gracefully when a mounted
 device disappears.
\end_layout

\begin_layout Itemize
IMPORTANT: disconnect before 
\begin_inset Quotes eld
\end_inset

suspending
\begin_inset Quotes erd
\end_inset

 a laptop
\end_layout

\begin_deeper
\begin_layout Itemize
Computer will go into a panic when it wakes up and can't find drives that
 were mounted
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Edit Here, Save There via the editor
\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
containsverbatim
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Emacs 
\begin_inset Quotes eld
\end_inset

tramp
\begin_inset Quotes erd
\end_inset

 mode
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Launch Emacs with a remote file name
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize}"
inline false
status open

\begin_layout Plain Layout

$ emacs /user@server.address:path-to-filename
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Examples we could run from command line on my system:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize}"
inline false
status open

\begin_layout Plain Layout

$ emacs /pauljohn@login2.acf.ku.edu:file.txt
\end_layout

\begin_layout Plain Layout

$ emacs /pauljohn@login2.acf.ku.edu:/crmda/users/pauljohn/file.txt
\end_layout

\begin_layout Plain Layout

$ emacs /pauljohn@login2.acf.ku.edu:/crmda/workgroups/WinStatUpdates/file.txt
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
containsverbatim
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Emacs 
\begin_inset Quotes eld
\end_inset

tramp
\begin_inset Quotes erd
\end_inset

 mode (cont.)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The tricky part is figuring where to type the address if Emacs is already
 running, since the pull-down file menu does not understand remote system.
\end_layout

\begin_layout Itemize
If Emacs is already running, do 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

C-x C-f
\end_layout

\end_inset


\end_layout

\begin_layout Standard
the minibuffer should prompt you with 
\begin_inset Quotes eld
\end_inset

Find file: ~/
\begin_inset Quotes erd
\end_inset

.
 Replace 
\begin_inset Quotes eld
\end_inset

~/
\begin_inset Quotes erd
\end_inset

 with
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

/your-name-here@server.address:file-name-here
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Once connected, Emacs Directory mode also works.
 Try File -> Directory to see files on remote.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Use File Transfer Program's Edit emulator
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
WinSCP or Filezilla (or similar) have 
\begin_inset Quotes eld
\end_inset

edit
\begin_inset Quotes erd
\end_inset

 right click options.
 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

transparently
\begin_inset Quotes erd
\end_inset

 downloads file
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

edits
\begin_inset Quotes erd
\end_inset

 in your system
\end_layout

\begin_layout Itemize
Save 
\begin_inset Quotes eld
\end_inset

transparently
\begin_inset Quotes erd
\end_inset

 transfers file back to remote system.
\end_layout

\end_deeper
\begin_layout Itemize
Configuration may take some effort, since the file transfer program has
 to be informed of what editor in 
\begin_inset Quotes eld
\end_inset

your PC
\begin_inset Quotes erd
\end_inset

 is supposed to open the file that comes from (and goes back) 
\begin_inset Quotes eld
\end_inset

over there
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Section
Remote Desktop or Remote Applications
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{X11 can display individual programs}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This requires an X11 
\begin_inset Quotes eld
\end_inset

server
\begin_inset Quotes erd
\end_inset

 on your PC
\end_layout

\begin_layout Itemize
In a Macintosh system, 
\end_layout

\begin_deeper
\begin_layout Itemize
install the Xcode package, 
\end_layout

\begin_layout Itemize
open a terminal
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ ssh -X login2.acf.ku.edu
\end_layout

\begin_layout Plain Layout

$ qxlogin
\end_layout

\begin_layout Plain Layout

$ emacs &
\end_layout

\begin_layout Plain Layout

$ gedit &
\end_layout

\begin_layout Plain Layout

$ nautilus --no-desktop &
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
That should project that application onto your desktop.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{"Whole Workscreen" Remote access}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
There are competing protocols to relay the desktop
\end_layout

\begin_layout Itemize
One protocol, 
\begin_inset Quotes eld
\end_inset

NoMachine
\begin_inset Quotes erd
\end_inset

 was a 
\begin_inset Quotes eld
\end_inset

free project
\begin_inset Quotes erd
\end_inset

, but now it is a commercial product.
 The older versions are available and the KU ACF uses one of them.
\end_layout

\begin_deeper
\begin_layout Itemize
Documentation is ample in 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://crmda.ku.edu/computing
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
A host of competing frameworks exist, such as VNC or Vine.
 All of these require both a server that offers a remote desktop by that
 protocol and a client for it.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
