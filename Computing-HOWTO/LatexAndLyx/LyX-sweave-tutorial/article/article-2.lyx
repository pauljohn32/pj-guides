#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrartcl
\begin_preamble

\renewenvironment{figure}[1][]{%
 \ifthenelse{\equal{#1}{}}{%
   \@float{figure}
 }{%
   \@float{figure}[#1]%
 }%
 \centering
}{%
 \end@float
}
\renewenvironment{table}[1][]{%
 \ifthenelse{\equal{#1}{}}{%
   \@float{table}
 }{%
   \@float{table}[#1]%
 }%

 \centering
%  \setlength{\@tempdima}{\abovecaptionskip}%
%  \setlength{\abovecaptionskip}{\belowcaptionskip}%
% \setlength{\belowcaptionskip}{\@tempdima}%
}{%
 \end@float
}

\usepackage{graphicx}
\usepackage{Sweavel}

\fvset{listparameters={\setlength{\topsep}{0em}}}
\def\Sweavesize{\normalsize} 
\def\Rcolor{\color{black}} 
\def\Rbackground{\color[gray]{0.95}}


\usepackage{listings}
\lstset{tabsize=2, breaklines=true,style=Rstyle}

\usepackage{dcolumn}
\usepackage{booktabs}
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
enumitem
sweave
\end_modules
\maintain_unincluded_children false
\begin_local_layout
Format 7
InsetLayout CharStyle:Rinput
  LyxType               charstyle
  LabelString           Rinput
  LatexType             command
  LatexName             Rinput
  Font
      Family             Typewriter
  EndFont
  Preamble
      \newcommand*{\Rinput}[1]{{\ttfamily #1}}
  EndPreamble
End

InsetLayout CharStyle:Rfunction
  LyxType               charstyle
  LabelString           Rfunction
  LatexType             command
  LatexName             Rfunction
  Font
      Family             Typewriter
  EndFont
  Preamble
      \newcommand*{\Rfunction}[1]{{\ttfamily #1}}
  EndPreamble
End

InsetLayout CharStyle:Routput
  LyxType               charstyle
  LabelString           Routput
  LatexType             command
  LatexName             Routput
  Font
      Family             Typewriter
  EndFont
  Preamble
      \newcommand*{\Routput}[1]{{\ttfamily #1}}
  EndPreamble
End
\end_local_layout
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex8
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\vb}[1]{\bm{\mathrm{#1}}}
\end_inset


\end_layout

\begin_layout Title
Enhanced Article Template Supporting Sweave
\end_layout

\begin_layout Author
Paul E.
 Johnson
\end_layout

\begin_layout Date
Oct 31, 2014
\end_layout

\begin_layout Standard
I started with the template I made 2014-02-21.
 
\end_layout

\begin_layout Section
Changes
\end_layout

\begin_layout Enumerate
Document -> Modules Sweave Add.
\end_layout

\begin_layout Enumerate
Document -> Settings -> LaTeX Preamble
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout


\backslash
usepackage{graphicx} 
\end_layout

\begin_layout Plain Layout


\backslash
usepackage{Sweavel}
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
normalsize}  
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Rcolor{
\backslash
color{black}}  
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Rbackground{
\backslash
color[gray]{0.95}}
\end_layout

\begin_layout Plain Layout


\backslash
usepackage{listings} 
\end_layout

\begin_layout Plain Layout


\backslash
lstset{tabsize=2, breaklines=true,style=Rstyle}
\end_layout

\begin_layout Plain Layout


\backslash
usepackage{dcolumn} 
\end_layout

\begin_layout Plain Layout


\backslash
usepackage{booktabs} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Your system needs Frank Harrell's Sweavel.sty in order for this to work.
 Or use the slightly modified Sweavel.sty I use (in same directory as this
 document).
 Dr Harrell's
\end_layout

\end_deeper
\begin_layout Enumerate
Insert some boilerplate at the top of the file.
 I usually put this where the text of the document would start.
\end_layout

\begin_deeper
\begin_layout Enumerate
An R code chunk.
 Create a directory 
\begin_inset Quotes eld
\end_inset

plots
\begin_inset Quotes erd
\end_inset

 where the individual chunk outputs will be saved
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

$<<$echo=F$>>=$
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

dir.create("plots", showWarnings=F)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$@$
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
LaTeX macro that R reads and knows to save the elements in 
\begin_inset Quotes eld
\end_inset

plots
\begin_inset Quotes erd
\end_inset

 with the prefix 
\begin_inset Quotes eld
\end_inset

t
\begin_inset Quotes erd
\end_inset

.
 Sets height and width default for figures, turns off the old fashioned
 
\begin_inset Quotes eld
\end_inset

ae
\begin_inset Quotes erd
\end_inset

 correction.
 
\end_layout

\begin_layout Standard

\backslash
SweaveOpts{prefix.string=plots/t,split=T,ae=F,height=4,width=6}
\end_layout

\begin_layout Enumerate
Another R code chunk with options that help with presentation.
 I don't want to see the R prompt 
\begin_inset Quotes eld
\end_inset

>
\begin_inset Quotes erd
\end_inset

, so that's replaced with a blank space, and I don't want to see the R continuat
ion 
\begin_inset Quotes eld
\end_inset

+
\begin_inset Quotes erd
\end_inset

, now that becomes 3 spaces.
 In order for the the listings environment to break long lines, we need
 to tell R to write long lines.
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

$<<$Roptions, echo=F$>>=$
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

options(width=100, prompt=" ", continue="  ")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE) 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
#
\backslash
# Just for safe keeping, copy the par
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

op <- par() 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(ps=12)))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$@$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It is not truly necessary to say useFancyQuotes=FALSE, but it is expedient.
 Instead, we could leave the fancy quotes on and then we'd have to make
 sure the document understands UTF-8 encoding.
 (Exercise for reader.
 Delete the useFancyQuotes thing from the R chunk, and then in Google for
 a while to figure out what you are supposed to do to make the document
 compile.
 I've found the answer.
 Can you? Hint: answer will involve encoding.
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=F>>=
\end_layout

\begin_layout Plain Layout

dir.create("plots", showWarnings=F)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=plots/t,split=T,ae=F,height=3,width=5}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, echo=F>>=
\end_layout

\begin_layout Plain Layout

options(width=100, prompt=" ", continue="  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE) 
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

## Just for safe keeping, copy the par
\end_layout

\begin_layout Plain Layout

op <- par() 
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(ps=12)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Now Try the Sweave Code from article-1
\end_layout

\begin_layout Standard
Come back to the document, hit Control-l, put in the code chunks.
 I think this is the most pleasant way, but some people think it is nicer
 to use the LyX code chunk environment
\end_layout

\begin_layout Subsubsection*
One
\end_layout

\begin_layout Standard
\align left
\begin_inset ERT
status open

\begin_layout Plain Layout

$<<$ one $>>=$
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

set.seed(234234)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

x <- rnorm(1000)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

mean(x)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

sd(x)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$@$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<one>>=
\end_layout

\begin_layout Plain Layout

set.seed(234234)
\end_layout

\begin_layout Plain Layout

x <- rnorm(1000)
\end_layout

\begin_layout Plain Layout

mean(x)
\end_layout

\begin_layout Plain Layout

sd(x)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Two
\end_layout

\begin_layout Standard
I've added more arguments in the hist function so you can see how well listings
 handles the long line.
 Its awesome!
\end_layout

\begin_layout Standard
\align left
\begin_inset ERT
status open

\begin_layout Plain Layout

$<<$ two, fig=T $>>=$
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

hist(x, xlab = "A very well constructed variable", prob = TRUE, ylab = "These
 are proportions, not densities", breaks = 25)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$@$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<two, fig=T>>=
\end_layout

\begin_layout Plain Layout

hist(x, xlab = "A very well constructed variable", prob = TRUE, ylab = "These
 are proportions, not densities", breaks = 25)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Three
\end_layout

\begin_layout Standard
I split chunk three into 2 pieces here, one to show the way ordinary R output
 is handled and one to demonstrate the LaTeX table.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

$<<$ three1 $>>=$
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

dat <- data.frame(x1 = rnorm(1000), x2 = rnorm(1000))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

b0 <- 0.5; b1 <- 0.7; b2 <- 0.15; se <- 10
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

dat
\backslash
$y <- b0 + b1*dat
\backslash
$x1 + b2*dat
\backslash
$x2 + se*rnorm(1000)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

m0 <- lm(y ~ x1, data = dat)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

m1 <- lm(y ~ x1 + x2, data = dat)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

summary(m1)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$@$
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$<<$ three2, results=tex $>>=$
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

require(rockchalk)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

outreg(list("Model of Student Behavior" = m0, "A More Elaborate Model" =
 m1), varLabels = c("x1" = "Studying", "x2" = "Math Lessons"))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$@$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<three1>>=
\end_layout

\begin_layout Plain Layout

dat <- data.frame(x1 = rnorm(1000), x2 = rnorm(1000))
\end_layout

\begin_layout Plain Layout

b0 <- 0.5; b1 <- 0.7; b2 <- 0.15; se <- 10
\end_layout

\begin_layout Plain Layout

dat$y <- b0 + b1*dat$x1 + b2*dat$x2 + se*rnorm(1000)
\end_layout

\begin_layout Plain Layout

m0 <- lm(y ~ x1, data = dat)
\end_layout

\begin_layout Plain Layout

m1 <- lm(y ~ x1 + x2, data = dat)
\end_layout

\begin_layout Plain Layout

summary(m1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<three2, results=tex>>=
\end_layout

\begin_layout Plain Layout

require(rockchalk)
\end_layout

\begin_layout Plain Layout

outreg(list("Model of Student Behavior" = m0, "A More Elaborate Model" =
 m1), varLabels = c("x1" = "Studying", "x2" = "Math Lessons"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Work is Done
\end_layout

\begin_layout Standard
This document reflects a lot of trial and error and a lot of changes in
 style.
 
\end_layout

\begin_layout Standard
For a long time, I followed a series of notes created by Ross Ihaka, 
\begin_inset Quotes eld
\end_inset

Customizing Sweave to Produce Better Looking LaTeX Output
\begin_inset Quotes erd
\end_inset

 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.stat.auckland.ac.nz/~stat782/downloads/Sweave-customisation.pdf
\end_layout

\end_inset

.
 In 2011, I found out about Sweavel, a LaTeX style file replacement that
 makes nicer output.
 One can find more details here: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://biostat.mc.vanderbilt.edu/wiki/Main/SweaveTemplate
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Sweavel style uses the LaTeX listings package to get nicer looking,
 more customizable input and output markup.
 I think it is worth the effort.
 We get shading, customizable symbols, and line breaking.
 Ordinary latex with Verbatim will write off the edge of the right side
 of the page.
 But listings does not.
 
\end_layout

\begin_layout Standard
Sweavel also comes with some settings that Professor Harrell discovered
 that can make symbols look nicer.
 One of the customizations he uses, which I have erased, can make the 
\begin_inset Quotes eld
\end_inset

<-
\begin_inset Quotes erd
\end_inset

 symbol in R markup look smoother, like 
\begin_inset Formula $\leftarrow$
\end_inset

 .
 I think that's beautiful, but students were upset that they could not type
\begin_inset Formula $\leftarrow$
\end_inset

 in their R programs and they were disconcerted when I said, 
\begin_inset Quotes eld
\end_inset

type <-
\begin_inset Quotes erd
\end_inset

 for that.
 It also addresses the problem that some symbols, like, 
\begin_inset Formula $\sim$
\end_inset

, are sometimes invisible.
 That is an error that is very difficult for a proof-reader to catch.
\end_layout

\end_body
\end_document
