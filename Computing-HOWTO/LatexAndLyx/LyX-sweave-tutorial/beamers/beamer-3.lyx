#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
%\newcommand{\vn}[1]{\mbox{{\it #1}}}
%\newcommand{\vb}{\vspace{\baselineskip}}
%\newcommand{\vh}{\vspace{.5\baselineskip}}
%\newcommand{\vf}{\vspace{\fill}}
%\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}

\usepackage{Sweavel}


%\setbeamercovered{transparent}
% or whatever (possibly just delete it)

% In document Latex options:
\fvset{listparameters={\setlength{\topsep}{0em}}}
\def\Sweavesize{\normalsize} 
\def\Rcolor{\color{black}} 
\def\Rbackground{\color[gray]{0.95}}

\usepackage{graphicx}
\usepackage{listings}
\lstset{tabsize=2, breaklines=true,style=Rstyle}





%% Changes to alter Beamer's behavior
\usetheme{Antibes}

%\setbeamercovered{transparent}
% or whatever (possibly just delete it)


%%not for article, but for presentation
\mode<presentation>
%%\newcommand\makebeamertitle{\frame{\maketitle}}


%%only for presentation
\mode<presentation>
\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}


\expandafter\def\expandafter\insertshorttitle\expandafter{%
 \insertshorttitle\hfill\insertframenumber\,/\,\inserttotalframenumber}




\usepackage{dcolumn}
\usepackage{booktabs}
\end_preamble
\use_default_options false
\begin_modules
sweave
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "times" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
This file is a solution template for:
\end_layout

\begin_layout Itemize
Talk at a conference/colloquium.
 
\end_layout

\begin_layout Itemize
Talk length is about 20min.
 
\end_layout

\begin_layout Itemize
Style is ornate.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Copyright 2004 by Till Tantau <tantau@users.sourceforge.net>.
 
\end_layout

\begin_layout Plain Layout
In principle, this file can be redistributed and/or modified under the terms
 of the GNU Public License, version 2.
 However, this file is supposed to be a template to be modified for your
 own needs.
 For this reason, if you use this file as a template and not specifically
 distribute it as part of a another package/program, the author grants the
 extra permission to freely copy and modify this file as you see fit and
 even to delete this copyright notice.
 
\end_layout

\end_inset


\end_layout

\begin_layout Title
Refine the Beamer Template
\end_layout

\begin_layout Subtitle
Sweavel and Beamer Customizations
\end_layout

\begin_layout Author
Paul Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Political Science
\begin_inset Newline newline
\end_inset

University of Kansas
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Center for Research Methods and Data Analysis
\begin_inset Newline newline
\end_inset

University of Kansas
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Use the 
\begin_inset Quotes eld
\end_inset

Institute mark
\begin_inset Quotes erd
\end_inset

 inset (
\family sans
Insert\SpecialChar menuseparator
Custom Insets\SpecialChar menuseparator
InstituteMark
\family default
) only if there are several affiliations.
\end_layout

\begin_layout Itemize
Keep it simple, no one is interested in your street address.
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Universities of Somewhere and Elsewhere
\begin_inset Note Note
status open

\begin_layout Plain Layout
optional, but mostly needed
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Date
Conference on \SpecialChar LyX
 Presentations, 2017
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Either use conference name or its abbreviation.
 
\end_layout

\begin_layout Itemize
Not really informative to the audience, more for people (including yourself)
 who are reading the slides online
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
2017
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
optional, should be abbreviation of conference name
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you have a file called "institution-logo-filename.xxx", where xxx is a
 graphic format that can be processed by latex or pdflatex, resp., then you
 can add a logo by uncommenting the following:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
pgfdeclareimage[height=0.5cm]{institution-logo}{institution-logo-filename}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%
\backslash
logo{
\backslash
pgfuseimage{institution-logo}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSubsection[]{
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang canadian
\begin_inset Note Note
status open

\begin_layout Plain Layout

\lang canadian
Following is the macro for bold math.
 In math mode, creates a new macros 
\backslash
vb for upright bold in math mode
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\vb}[1]{\bm{\mathrm{#1}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Outline
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=plots/t,split=T,ae=F,height=4,width=6}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Document Preamble Changes
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
A Boilerplate for the preamble.
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Instead of using the R-provided Sweave.sty file to structure the output,
 we use Frank Harrell's Sweavel.sty (after a few changes to suit my taste).
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Based on the \SpecialChar LaTeX
 Listings package.
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://biostat.mc.vanderbilt.edu/wiki/Main/SweaveTemplate
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
shaded backgrounds
\end_layout

\begin_layout Itemize
line-breaking for long lines
\end_layout

\begin_layout Itemize
more beautiful symbols (with customization)
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Several Beamer customizations to make the output more pleasant (in my eye).
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
theme changes
\end_layout

\begin_layout Itemize
alter the continuation
\end_layout

\begin_layout Itemize
insert slide numbers
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Preamble Changes to work with Sweavel.sty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize},breaklines=true"
inline false
status open

\begin_layout Plain Layout


\backslash
usepackage{Sweavel}
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}} 
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
normalsize}  
\end_layout

\begin_layout Plain Layout

%% or
\end_layout

\begin_layout Plain Layout

%% 
\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}  
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Rcolor{
\backslash
color{black}}  
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Rbackground{
\backslash
color[gray]{0.95}}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
usepackage{graphicx} 
\end_layout

\begin_layout Plain Layout


\backslash
usepackage{listings} 
\end_layout

\begin_layout Plain Layout


\backslash
lstset{tabsize=2, breaklines=true, style=Rstyle} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Preamble Changes to improve Beamer}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize},breaklines=true"
inline false
status open

\begin_layout Plain Layout


\backslash
usetheme{Antibes} %% Value judgement
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%% allowframebreaks beautification:
\end_layout

\begin_layout Plain Layout

%% Change Roman I II III to dot-dot-dot
\end_layout

\begin_layout Plain Layout


\backslash
mode<presentation>
\end_layout

\begin_layout Plain Layout


\backslash
setbeamertemplate{frametitle continuation}[from second]
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand
\backslash
insertcontinuationtext{...}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%% I want slide numbers displayed
\end_layout

\begin_layout Plain Layout


\backslash
expandafter
\backslash
def
\backslash
expandafter
\backslash
insertshorttitle
\backslash
expandafter{%
\end_layout

\begin_layout Plain Layout

 
\backslash
insertshorttitle
\backslash
hfill
\backslash
insertframenumber
\backslash
,/
\backslash
,
\backslash
inserttotalframenumber}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{You need the complete LaTeX Setup, of course}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If you don't have the listings package for \SpecialChar LaTeX
, this will be an epic fail
\end_layout

\begin_layout Itemize
You need the Sweavel.sty file.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
in your current working directory for short-term use
\end_layout

\begin_layout Itemize
copy it into your \SpecialChar LaTeX
 setup (generally under 
\begin_inset Quotes eld
\end_inset

tex/latex
\begin_inset Quotes erd
\end_inset

 will suffice) and run reconfigure (texhash).
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Top of Document Boilerplate
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Changes for the beginning of the document}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Make sure an output directory exists from R's current working directory.
 Tell R to not use 
\begin_inset Quotes eld
\end_inset

line breaks
\begin_inset Quotes erd
\end_inset

, we will let Sweavel handel it.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Rfirst,echo=T>>=
\end_layout

\begin_layout Plain Layout

dir.create("plots", showWarnings=F)
\end_layout

\begin_layout Plain Layout

options(width=160, prompt=" ", continue="  ")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
This is a \SpecialChar LaTeX
 statement, which R and the Sweaving process will take into account.
 I have this at the front of the document
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=plots/t,split=T,ae=F,height=4,width=6}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Itemize
Why that's important:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
all R elements are written to a string prefixed 
\begin_inset Quotes eld
\end_inset

plots/t
\begin_inset Quotes erd
\end_inset

, folder=
\begin_inset Quotes erd
\end_inset

plots
\begin_inset Quotes erd
\end_inset

, common prefix letter 
\begin_inset Quotes eld
\end_inset

t
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
ae=F prevents R and Sweave from putting in a bunch of workarounds into the
 \SpecialChar LaTeX
 code.
\end_layout

\begin_layout Enumerate
default height and width of figures can be adjusted for each particular
 figure.
\end_layout

\end_deeper
\begin_layout Itemize
The first R code chunk sets the defaults that cooperate with Sweavel and
 Listings
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, echo=T>>=
\end_layout

\begin_layout Plain Layout

## Other settings I like
\end_layout

\begin_layout Plain Layout

options(device = pdf)
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE) 
\end_layout

\begin_layout Plain Layout

op <- par() 
\end_layout

\begin_layout Plain Layout

pjmar <- c(5.1, 5.1, 1.5, 2.1) 
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Run a block of R code again}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Results are interspersed with input.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
smaller}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

set.seed(234234)
\end_layout

\begin_layout Plain Layout

x1 <- rnorm(1000)
\end_layout

\begin_layout Plain Layout

mean(x1)
\end_layout

\begin_layout Plain Layout

sd(x1)
\end_layout

\begin_layout Plain Layout

se <- 1.5
\end_layout

\begin_layout Plain Layout

b0 <- 0.7
\end_layout

\begin_layout Plain Layout

b1 <- 0.04
\end_layout

\begin_layout Plain Layout

y <- b0 + b1 * x1 + se * rnorm(1000)
\end_layout

\begin_layout Plain Layout

dat <- data.frame(x1, y)
\end_layout

\begin_layout Plain Layout

m1 <- lm(y ~ x1, data = dat)
\end_layout

\begin_layout Plain Layout

summary(m1)
\end_layout

\begin_layout Plain Layout

dat$x2 <- rpois(1000, lambda = 2)
\end_layout

\begin_layout Plain Layout

m2 <- lm(y ~ x1 + x2, data = dat)
\end_layout

\begin_layout Plain Layout

summary(m2)
\end_layout

\begin_layout Plain Layout

anova(m2, m1, test = "F")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{I want a figure now}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The figure comes out much too huge.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<fig=T>>=
\end_layout

\begin_layout Plain Layout

library(rockchalk)
\end_layout

\begin_layout Plain Layout

plotSlopes(m2, plotx = x1, modx = x2, interval = "confidence")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Final Idioms
\end_layout

\begin_layout Subsection
Figure Customization
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Working with Figures}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I want figures saved separately, and I'll insert them however I like.
 
\end_layout

\begin_layout Itemize
Change the chunk invocation, insert 
\begin_inset Quotes eld
\end_inset

include=F
\begin_inset Quotes erd
\end_inset

.
 The figure is created, but not displayed here
\end_layout

\begin_layout Standard
\begin_inset Formula $<<$
\end_inset

ps50, fig=T, include=F
\begin_inset Formula $>>=$
\end_inset


\end_layout

\begin_layout Standard
The image will be named 
\begin_inset Quotes eld
\end_inset

plots/t-ps50.pdf
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize
We include the figure-generator code thus:
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $<<$
\end_inset

ps50,fig=T,include=F
\begin_inset Formula $>>=$
\end_inset


\end_layout

\begin_layout LyX-Code
plotSlopes(m2, plotx = x1, modx = x2, predVals="std.dev.", interval = "confidence"
)
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $@$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ps50,fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

plotSlopes(m2, plotx = x1, modx = x2, predVals="std.dev.", interval = "confidence"
)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
And then the standard methods of inserting the figure into the document
 are used
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-ps50}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Don't add the suffix on graphics file names.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-ps50}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
But if I was feeling spunky, I could put 2 pictures on one slide as well.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ps60,fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

plotSlopes(m2, plotx = x2, modx = x1, predVals="std.dev.", interval = "confidence"
)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=6cm]{plots/t-ps50}
\end_layout

\begin_layout Plain Layout


\backslash
includegraphics[width=6cm]{plots/t-ps60}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Same trick works with text from code chunks too}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout


\backslash
input{plots/t-ps60.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
* Do insert suffix with 
\backslash
input
\end_layout

\begin_layout Standard
Here's a replay of chunk ps60
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-ps60.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Caching Results and Calculations
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Long R Jobs = Unhappy Sweaving}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If your R code takes more than a minute or two, then working with Sweaved
 calculations can be very frustrating.
 
\end_layout

\begin_layout Itemize
There are 3 ideas I've tried.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Some R packages exist which are supposed to make Sweave smarter so that
 it does not re-calculate all results.
 They cache calculations from unaltered code chunks.
 I like the idea, but have not had great experience with it.
 The knitr package tries to do that as well.
\end_layout

\begin_layout Enumerate
In the \SpecialChar LyX
 document, use the Document Branches feature to separate long-running
 code chunks.
 When they run, write the results into the 
\begin_inset Quotes eld
\end_inset

plots
\begin_inset Quotes erd
\end_inset

 folder, and then Disable the branch until you need to run it again.
 I think this is the easiest way to manage this without straining yourself.
\end_layout

\begin_layout Enumerate
Write two documents, one \SpecialChar LaTeX
 document with the R code and the Sweaving commands.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Be sure to label all of the code chunks, so they are written into 
\begin_inset Quotes eld
\end_inset

plots
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
Then in the presentation document, simply use the results from 
\begin_inset Quotes eld
\end_inset

plots
\begin_inset Quotes erd
\end_inset

 as you want to include them in the document.
 
\end_layout

\begin_layout Enumerate
This is the best of both worlds.
 The R run is completely replicable.
 And the \SpecialChar LaTeX
 document does not need to wait for R to run.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Changes for You
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Changes that You Should Try}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Change your Beamer theme.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
I changed from the 
\begin_inset Quotes eld
\end_inset

Warsaw
\begin_inset Quotes erd
\end_inset

 theme that the \SpecialChar LyX
 team preferred to the 
\begin_inset Quotes eld
\end_inset

Antibes
\begin_inset Quotes erd
\end_inset

 theme, which is a bit less intrusive (IMHO)
\end_layout

\begin_layout Enumerate
In the R Summer Program, Pascal Deboeck and I have used a theme we adapted
 (which he obtained from his advisor at ND).
\end_layout

\begin_layout Enumerate
Why don't you try that one out.
 I've left a copy of the beamerthemeku.sty file in this directory, so all
 you should need to do is to change your preamble to read
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\backslash
usetheme{KU}
\end_layout

\begin_layout Standard

\backslash
usecolortheme{dolphin}
\end_layout

\begin_layout Standard
This will only work if your system has the beamerthemeku.sty file, but there's
 a copy in the directory where you find this presentation.
\end_layout

\end_deeper
\begin_layout Enumerate
That theme has top and bottom banners.
 I recall we hacked it to make the top banner show the sections, but I grew
 bored with the crowding it would cause.
\end_layout

\end_deeper
\begin_layout Enumerate
Fiddle with colors and sizes for R listings.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
I buried the color settings in the Preamble.
 At some times, I've had them in the top part of the document itself.
 
\end_layout

\begin_layout Enumerate
In the preamble find this piece
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Rcolor{
\backslash
color{black}} 
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Rbackground{
\backslash
color[gray]{0.95}} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
You can change the word black to 
\begin_inset Quotes eld
\end_inset

purple
\begin_inset Quotes erd
\end_inset

 and the number 0.95 to 0.70, for example.
\end_layout

\begin_layout Enumerate
Fiddle with the text size in the R chunk displays.
\end_layout

\begin_layout Enumerate
In the Preamble, find this:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
normalsize} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
And change to this
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
At some times, I have done that same thing INSIDE documents for particular
 pieces of output, but maybe you want to change the whole document.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{If you are Going to Fiddle with a Document}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Put the document in a version management system like GIT or SVN, so you
 can go back in history to trace your changes
\end_layout

\begin_layout Itemize
This will happen.
 You have a deadline.
 An emergency, and 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
a big important document won't compile, and 
\end_layout

\begin_layout Itemize
the error messages are completely not understandable to you
\end_layout

\end_deeper
\begin_layout Itemize
Here is what I do: 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Catch your breath.
 Save the document.
 Relax, leave your computer for a few minutes on meditate about the changes
 you made in the time since the document did compile and when it did not.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Then go back to the document, delete or comment out (or mark as Lyx-Notes)
 the suspicious bits and try to compile.
\end_layout

\begin_layout Itemize
If the document is in Version Control, you can step back in history, see
 what you did.
\end_layout

\end_deeper
\begin_layout Enumerate
If that does not work, Bisect the document.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Remember the error messages don't tell you where your mistake IS, they tell
 you when the \SpecialChar LaTeX
 system finally notices them.
 
\end_layout

\begin_layout Itemize
Highlight the last 95%, delete it, and see if the document compiles.
\end_layout

\begin_layout Itemize
That narrows it down a bit.
\end_layout

\begin_layout Itemize
Paste the deleted part back, and then delete the last 75%, try to compile.
 Repeat until victory obtains.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{There Exist Helpful Customizations}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
You know everything I know, now
\end_layout

\begin_layout Itemize
And you can know everything I used to know too:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
If you find one of my presentations under 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://pj.freefaculty.org/guides
\end_layout

\end_inset

 and the PDF looks different, I left the source code there so you can find
 out what I was doing differently way back when.
\end_layout

\end_deeper
\begin_layout Itemize
To become truly proficient at this, all you need is the firm belief that
 you can eventually make it work.
 And to sustain that belief, all you need is an example that compiles.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{There Exist Helpful Customizations}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I am between 2 extremes.
\end_layout

\begin_layout Itemize
Some people understand \SpecialChar LaTeX
 markup and like looking at it.
 They feel comfortable with that.
\end_layout

\begin_layout Itemize
Some people can't comprehend it at all and they use MS Word (fingerpainters)
\end_layout

\begin_layout Itemize
I can understand enough \SpecialChar LaTeX
 to make a few customizations in these documents,
 but I have not studied hard enough to do a heck of a lot.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Document Liferaft}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If you are closer to the 2'nd type of person, as most are, then here is
 the right path to follow.
 
\end_layout

\begin_layout Itemize
Find people who make documents you admire.
 Get their source code.
 Cling to the working example like a liferaft.
\end_layout

\begin_layout Itemize
Then make a small changes, one by one, to make sure it still compiles.
 
\end_layout

\begin_layout Itemize
DO NOT surf the Internet and find 
\begin_inset Quotes eld
\end_inset

code snippits
\begin_inset Quotes erd
\end_inset

 from other people that work for them, and paste them into your document,
 unless you are ready to work hard to make them work for you.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
References
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "beamer"
options "apalike"

\end_inset


\end_layout

\end_deeper
\end_body
\end_document
