#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass sweavel-beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}


\usepackage{graphicx}
\usepackage{listings}
\lstset{tabsize=2, breaklines=true,style=Rstyle}
\usetheme{Antibes}
% or ...

%\setbeamercovered{transparent}
% or whatever (possibly just delete it)


% In document Latex options:
\fvset{listparameters={\setlength{\topsep}{0em}}}
\def\Sweavesize{\normalsize} 
\def\Rcolor{\color{black}} 
\def\Rbackground{\color[gray]{0.95}}

\mode<presentation>

\newcommand\makebeamertitle{\frame{\maketitle}}%

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}

\expandafter\def\expandafter\insertshorttitle\expandafter{%
 \insertshorttitle\hfill\insertframenumber\,/\,\inserttotalframenumber}
\end_preamble
\use_default_options false
\begin_modules
sweave
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch effects
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch termplot
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Branch R
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=F>>=
\end_layout

\begin_layout Plain Layout

##unlink("plots", recursive=T)
\end_layout

\begin_layout Plain Layout

dir.create("plots", showWarnings=F)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=plots/t,split=T,ae=F,height=4,width=6}
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize} 
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Rcolor{
\backslash
color{black}} 
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Rbackground{
\backslash
color[gray]{0.97}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, echo=F>>=
\end_layout

\begin_layout Plain Layout

options(width=160, prompt=" ", continue="  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE) 
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

op <- par() 
\end_layout

\begin_layout Plain Layout

pjmar <- c(5.1, 5.1, 1.5, 2.1) 
\end_layout

\begin_layout Plain Layout

#pjmar <- par("mar")
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=FALSE,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
Regression Presentations: Plots 
\begin_inset Argument
status collapsed

\begin_layout Plain Layout
Descriptive
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul E.
 Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Political Science
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Center for Research Methods and Data Analysis, University of Kansas
\begin_inset Argument
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Date
2013
\begin_inset Argument
status open

\begin_layout Plain Layout
2013
\end_layout

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSubsection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frametitle{Presenting Regressions}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We Need
\end_layout

\begin_layout Itemize
Nice Looking Regression Tables (that's a separate set of notes.
 Look for regression-tables-1)
\end_layout

\begin_layout Itemize
Calculate & plot predicted values and confidence intervals
\end_layout

\begin_layout Itemize
This lecture is about 2-d plots
\end_layout

\begin_layout Itemize
For 3-d plots, look for plots-3d
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Orientation 
\backslash
#1}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
One of the primary points of emphasis in the S & R languages is the development
 of a consistent framework for the estimation and probing of regression
 models.
\end_layout

\begin_layout Itemize
We fit a model, then 
\begin_inset Quotes eld
\end_inset

interrogate
\begin_inset Quotes erd
\end_inset

 it.
\end_layout

\begin_layout Itemize
A predict method should be supplied with 
\emph on
any 
\emph default
regression model.
 
\end_layout

\begin_deeper
\begin_layout Itemize
provides predicted values (and, hopefully, confidence intervals) for user-specif
ied input values.
 
\end_layout

\begin_layout Itemize
If there is no predict method, then we are in the stone age.
 We have to manually extract the slope coefficients (
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
texttt{coef(m1)}
\end_layout

\end_inset

), create a matrix of interesting predictor values (
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
texttt{X}
\end_layout

\end_inset

), and calculate 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
texttt{X 
\backslash
%*
\backslash
% coef(m1)}
\end_layout

\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{predict method: key arguments}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
predict() is a generic function, each regression model is responsible to
 implement predict.
\begin_inset Quotes erd
\end_inset

model
\begin_inset Quotes erd
\end_inset

()
\end_layout

\begin_layout Description
object: a fitted regression model
\end_layout

\begin_layout Description
newdata: values of predictors for which predictions are sought
\end_layout

\begin_layout Description
interval: possibly a confidence or prediction interval (may not be available,
 depending on model type)
\end_layout

\begin_layout Description
type: Predictions may be supplied on various scales.
 In GLM, for example 
\begin_inset Quotes eld
\end_inset

response
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

link
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The creation of a "newdata" object is a struggle}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
texttt{X 
\backslash
%*
\backslash
% coef(m1)}
\end_layout

\end_inset

 is the stone age, then predict with newdata is the golden age of Rock and
 Roll.
 
\end_layout

\begin_layout Itemize
Various suggestions have been offered to streamline the creation of newdata
 objects and calculate predictions.
 These things put us in the Space Age.
\end_layout

\begin_deeper
\begin_layout Description
Space
\begin_inset space ~
\end_inset

Age: technological things work well, except when they don't, and we all
 feel helpless when that happens.
\end_layout

\end_deeper
\begin_layout Itemize
Because the Space Age tools sometimes fail, we still teach the 
\begin_inset Quotes eld
\end_inset

older ways
\begin_inset Quotes erd
\end_inset

 of predict and newdata.
 But we wish we didn't have to because it makes the students cry.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Glimpse the Space Age}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Let's stop right here to get an orientation.
 Lets all run this:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F, include=T>>=
\end_layout

\begin_layout Plain Layout

library(rockchalk)
\end_layout

\begin_layout Plain Layout

example(predictOMatic)
\end_layout

\begin_layout Plain Layout

## Or create a fresh example for yourself with:
\end_layout

\begin_layout Plain Layout

dat <- genCorrelatedData2(1000, 
\end_layout

\begin_layout Plain Layout

    means = c(100,200,100, 40), 
\end_layout

\begin_layout Plain Layout

    sds = c(10, 20, 20, 5), 
\end_layout

\begin_layout Plain Layout

    rho = 0.2, 
\end_layout

\begin_layout Plain Layout

    beta = c(0.1, 0.3, 0.3, 0.1, -0.14, 0, 0.025), 
\end_layout

\begin_layout Plain Layout

    stde = 140)
\end_layout

\begin_layout Plain Layout

dat$xcat1 <- factor(sample(c("No","Yes","Yes"), 1000, replace = TRUE))
\end_layout

\begin_layout Plain Layout

m1 <- lm(y ~ x1 + x2 + x3 + x4 + xcat1, data = dat)
\end_layout

\begin_layout Plain Layout

summary(m1)
\end_layout

\begin_layout Plain Layout

predictOMatic(m1)
\end_layout

\begin_layout Plain Layout

predictOMatic(m1, divider = "std.dev.")
\end_layout

\begin_layout Plain Layout

predictOMatic(m1, divider = "seq", n = 7)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
In the following, I want to help you understand what's going on in there
 and why it is useful.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Data
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frametitle{Example Data Used in these Notes}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
American National Election Study (2004), recoding details follow.
\end_layout

\begin_layout Itemize
Chile dataset in car package
\end_layout

\begin_layout Itemize
Simulated data (rockchalk package genCorrelatedData)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Re-use the Coding for the American National Election Study 2004}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=T, include=F>>=
\end_layout

\begin_layout Plain Layout

library(rockchalk)
\end_layout

\begin_layout Plain Layout

library(foreign)
\end_layout

\begin_layout Plain Layout

library(car)
\end_layout

\begin_layout Plain Layout

filename <- "/home/pauljohn/SVN/SVN-guides/Rcourse/04245-0001-Data.dta"
\end_layout

\begin_layout Plain Layout

#if(!file.exists("../04245-0001-Data.dta"))
\end_layout

\begin_layout Plain Layout

if(!file.exists(filename)){
\end_layout

\begin_layout Plain Layout

  download.file(url="http://pj.freefaculty.org/guides/Rcourse/04245-0001-Data.dta",
 dest = "../04245-0001-Data.dta")
\end_layout

\begin_layout Plain Layout

mydta1 <- read.dta("../04245-0001-Data.dta")
\end_layout

\begin_layout Plain Layout

} else {
\end_layout

\begin_layout Plain Layout

mydta1 <- read.dta(filename)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

## V043038     B1a.
 Feeling Thermometer: GW Bush
\end_layout

\begin_layout Plain Layout

## V043039     B1b.
 Feeling Thermometer: John Kerry
\end_layout

\begin_layout Plain Layout

## V043210     R1.
 R position on gay marriage
\end_layout

\begin_layout Plain Layout

## V043213     S3.
 National economy better/worse since GW Bush took ofc
\end_layout

\begin_layout Plain Layout

## V045117     G4a.
 Liberal/conservative 7-point scale: self-placement
\end_layout

\begin_layout Plain Layout

## V045145X    H5x.
 Summary: Pre-Post US flag makes R feel
\end_layout

\begin_layout Plain Layout

## V041109A    HHListing.9a.
 Respondent gender
\end_layout

\begin_layout Plain Layout

## V043116     J1x.
 Summary: R party ID
\end_layout

\begin_layout Plain Layout

## V043250     Y1x.
 Summary: Respondent age
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Thermometer Scores for Bush and Kerry}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<anes10,fig=T,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

plot(V043038 ~ V043039, data = mydta1, xlab = "V043039: Kerry Thermo", ylab
 = "V043039: Bush Thermo")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-anes10}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Create a New Dependent Variable}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<anes20,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

mydta1$th.bush.kerry <- mydta1$V043038 - mydta1$V043039
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The difference in thermometer scores:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-anes20.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<anes30,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

##Party
\end_layout

\begin_layout Plain Layout

mydta1$V043116 <- mydta1$V043116[,drop = TRUE]
\end_layout

\begin_layout Plain Layout

levels(mydta1$V043116) <- c("SD","WD","ID","I","IR","WR","SR","O")
\end_layout

\begin_layout Plain Layout

mydta1$V043116[ mydta1$V043116 %in% levels(mydta1$V043116)[8] ] <- NA
\end_layout

\begin_layout Plain Layout

mydta1$V043116 <- mydta1$V043116[, drop=TRUE]
\end_layout

\begin_layout Plain Layout

table(mydta1$V043116)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

##IDEO
\end_layout

\begin_layout Plain Layout

mydta1$V045117 <- mydta1$V045117[ ,drop = TRUE]
\end_layout

\begin_layout Plain Layout

levels(mydta1$V045117) <- c("EL","L","SL","M","SC","C","EC")
\end_layout

\begin_layout Plain Layout

table(mydta1$V045117)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

##Gender
\end_layout

\begin_layout Plain Layout

levels(mydta1$V041109A) <- c("M","F")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

## Gay Marriage
\end_layout

\begin_layout Plain Layout

levels(mydta1$V043210) 
\end_layout

\begin_layout Plain Layout

mydta1$V043210[ mydta1$V043210 %in% levels(mydta1$V043210)[4:10] ] <-NA
  
\end_layout

\begin_layout Plain Layout

mydta1$V043210 <- mydta1$V043210[, drop = TRUE]
\end_layout

\begin_layout Plain Layout

levels(mydta1$V043210) <- c("Allow","No","Med") 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

## Economy
\end_layout

\begin_layout Plain Layout

mydta1$V043213 <- mydta1$V043213[ ,drop = TRUE]
\end_layout

\begin_layout Plain Layout

l <- levels(mydta1$V043213)
\end_layout

\begin_layout Plain Layout

econnew <- factor(mydta1$V043213, levels=c(l[2],l[3],l[1]), labels=c("Worse","Sa
me","Better"))
\end_layout

\begin_layout Plain Layout

table(mydta1$V043213, econnew)
\end_layout

\begin_layout Plain Layout

mydta1$V043213 <- econnew
\end_layout

\begin_layout Plain Layout

rm(econnew)
\end_layout

\begin_layout Plain Layout

##Flag
\end_layout

\begin_layout Plain Layout

mydta1$V045145X <- mydta1$V045145X[,drop = TRUE] 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Clean up a bunch of variables & value labels
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-anes30.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Plotting Regressions (2d)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Plotting Regressions: Here is the General Plan}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plot10,include=F,fig=T,echo=T>>=
\end_layout

\begin_layout Plain Layout

## Step 1
\end_layout

\begin_layout Plain Layout

mod1age <- lm(th.bush.kerry ~ V043250, data = mydta1)
\end_layout

\begin_layout Plain Layout

## Step 2
\end_layout

\begin_layout Plain Layout

plot(th.bush.kerry ~ V043250, type = "p", xlab = "V403250: Age", ylab = "Bush-Kerr
y thermometers", data = mydta1, col = gray(.7))
\end_layout

\begin_layout Plain Layout

## Step 3
\end_layout

\begin_layout Plain Layout

abline(mod1age, lwd = 1.5)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned

\end_layout

\begin_deeper
\begin_layout Column
5cm
\end_layout

\begin_layout Itemize
Put a continuous predictor on the horizontal axis (
\begin_inset Formula $x1_{i}$
\end_inset

)
\end_layout

\begin_layout Itemize
Put the dependent variable on the vertical axis (
\begin_inset Formula $y_{i}$
\end_inset

)
\end_layout

\begin_layout Itemize
Calculate 
\begin_inset Formula $\hat{y}_{i}=\hat{b}_{0}+\hat{b}_{1}x1_{i}$
\end_inset

 and plot that 
\begin_inset Quotes eld
\end_inset

predicted line
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Column
7cm
\end_layout

\end_deeper
\begin_layout ColumnsTopAligned
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=7cm]{plots/t-plot10}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
abline
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Previous plot requires 3 Easy Steps (That 
\backslash
emph{Almost Every} R user has taken)}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
1) lm 2) plot 3) abline.
\end_layout

\begin_layout Standard
Example:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-plot10.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{abline: behind the scenes.}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
abline() is a general purpose 
\begin_inset Quotes eld
\end_inset

straight line drawing tool
\begin_inset Quotes erd
\end_inset

.
 It can receive input in the form of coefficients, or, if you provide it
 with a regression object, it will notice and try to get the coefficients
 from the regression object.
\end_layout

\begin_layout Itemize
At the command line, run abline, you'll see it.
 Look for 
\begin_inset Quotes eld
\end_inset

if (is.object(a) || is.list(a)) {
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ablinecode, include=T>>=
\end_layout

\begin_layout Plain Layout

abline
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Getting away from abline()}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This lecture, it turns out, is mostly about getting away from the limitations
 of abline()!
\end_layout

\begin_layout Itemize
limitations of abline()
\end_layout

\begin_deeper
\begin_layout Enumerate
Doesn't work when there are more predictors.
\end_layout

\begin_layout Enumerate
Doesn't work with nonlinear models or glm or ....
\end_layout

\end_deeper
\begin_layout Itemize
The R paradigm suggests instead a 3 step sequence.
\end_layout

\begin_deeper
\begin_layout Enumerate
newdata: create an exemplar data set of interesting values for which we
 might want predictions
\end_layout

\begin_layout Enumerate
predict w/newdata: calculate predictions
\end_layout

\begin_layout Enumerate
plot!
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{We want to produce a plot like this}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=F>>=
\end_layout

\begin_layout Plain Layout

library(rockchalk)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<rcps10, fig=T, include=F, width=8, height=5>>=
\end_layout

\begin_layout Plain Layout

plotSlopes(mod1age, plotx = "V043250", lwd = 0.3)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-rcps10.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=11cm]{plots/t-rcps10}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Request the 95
\backslash
% Confidence Interval}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<rcps20, include=F, fig=T, width=8, height=5>>=
\end_layout

\begin_layout Plain Layout

plotSlopes(mod1age, plotx = "V043250", interval = "confidence", lwd = 0.3)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-rcps20.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=11cm]{plots/t-rcps20}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The newdata -> predict -> plot }
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I made that with rockchalk::plotSlopes().
 In a model with only 1 predictor, it is pretty easy to make a plot like
 that.
\end_layout

\begin_layout Enumerate
Create a set of 
\begin_inset Quotes eld
\end_inset

focal values
\begin_inset Quotes erd
\end_inset

: possible values of 
\begin_inset Quotes eld
\end_inset

x
\begin_inset Quotes erd
\end_inset

 for which we need predictions.
 
\end_layout

\begin_deeper
\begin_layout Itemize
In a one-predictor linear model, 
\begin_inset Quotes eld
\end_inset

two points define a straight line
\begin_inset Quotes erd
\end_inset

.
 We might as well take the target values at the edges of the data: 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

V03250r <- range(mydta1$V03250, na.rm = TRUE)
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
However, if we want confidence intervals, we'll need an evenly spaced sequence
 of points, something like
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

V03250r <- rockchalk::plotSeq(mydta1$V03250, length.out = 40)	
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Create a new data frame using the new sequence as the independent variable
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

ndf <- data.frame(V03250 = V03250r)
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Use predict to get predictions, one for each row in the new data frame.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

predict(m0, newdata = ndf)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
or possibly
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

predict(m0, newdata = ndf, interval = "confidence")
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{This Code Would Work}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plot12,include=F,fig=T,echo=T>>=
\end_layout

\begin_layout Plain Layout

ndf <- data.frame(V043250 = range(mydta1$V043250))
\end_layout

\begin_layout Plain Layout

ndf$fit <- predict(mod1age, newdata = ndf )
\end_layout

\begin_layout Plain Layout

head(ndf)
\end_layout

\begin_layout Plain Layout

plot(th.bush.kerry ~ V043250, data = mydta1, xlab = "V403250: Age", ylab =
 "th.bush.kerry = Bush-Kerry thermometers",  col = gray(.7)) ## Scatterplot
\end_layout

\begin_layout Plain Layout

lines(fit ~ V043250, data = ndf, lwd = 1.5)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-plot12.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Confidence Intervals from predict
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Confidence Intervals}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
predict methods for some regression models can calculate 95% intervals of
 various type.
\end_layout

\begin_layout Itemize
lm: 
\end_layout

\begin_deeper
\begin_layout Itemize
interval=
\begin_inset Quotes erd
\end_inset

confidence
\begin_inset Quotes erd
\end_inset

 to obtain the 95% confidence intervals for the estimate of the expected
 value of 
\begin_inset Formula $y$
\end_inset

 given the predictors
\end_layout

\begin_layout Itemize
interval=
\begin_inset Quotes erd
\end_inset

predict
\begin_inset Quotes erd
\end_inset

 to obtain the 95% confidence intervals for the outcome 
\begin_inset Formula $y_{i}$
\end_inset

 given the predictors.
\end_layout

\end_deeper
\begin_layout Itemize
When intervals are requested, predict returns a matrix with columns called
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

fit lwr upr
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Predicted (
\begin_inset Quotes eld
\end_inset

fitted
\begin_inset Quotes erd
\end_inset

) values, and the lower and upper limits of the intervals.
\end_layout

\end_deeper
\begin_layout Itemize
R's predict.glm does not supply intervals (complicated statistical controversy
 behind that), but they will provide standard errors of fitted values, from
 which we can create our own confidence intervals
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Simple example to plot Confidence and Prediction Intervals}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plint10, include=F, fig=T, width=8, height=5.5>>=
\end_layout

\begin_layout Plain Layout

x <- rnorm(100, m = 50, s = 20)
\end_layout

\begin_layout Plain Layout

y <- 3 + 0.2 * x + 15 * rnorm(100)
\end_layout

\begin_layout Plain Layout

mp1 <- lm(y ~ x)
\end_layout

\begin_layout Plain Layout

ndf <- data.frame(x = plotSeq(x,40))
\end_layout

\begin_layout Plain Layout

p1 <- as.data.frame(predict(mp1, interval="conf", newdata = ndf))
\end_layout

\begin_layout Plain Layout

p2 <- as.data.frame(predict(mp1, interval="pred", newdata = ndf))
\end_layout

\begin_layout Plain Layout

plot(x, y, ylim = magRange(y, 1.3))
\end_layout

\begin_layout Plain Layout

lines(ndf$x, p1$fit, col = "black", lwd=3)
\end_layout

\begin_layout Plain Layout

lines(ndf$x, p1$lwr, col = "red", lwd = 3, lty = 4)
\end_layout

\begin_layout Plain Layout

lines(ndf$x, p1$upr, col = "red", lwd = 4, lty = 4)
\end_layout

\begin_layout Plain Layout

lines(ndf$x, p2$lwr, col = "purple", lwd = 4, lty = 3)
\end_layout

\begin_layout Plain Layout

lines(ndf$x, p2$upr, col = "purple", lwd = 4, lty = 3)
\end_layout

\begin_layout Plain Layout

legend("topleft", legend = c("predicted","Conf.
 Interval", "Pred.
 Interval"), col = c("black", "red", "purple"), lty = c(1, 4,3), cex = 0.8,
 lwd = 3)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout


\backslash
input{plots/t-plint10}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Difference b/t Conf and Pred Intervals}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=11cm]{plots/t-plint10}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Confidence Intervals for the Bush-Kerry Regression}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plot15,include=F,fig=F,echo=F>>=
\end_layout

\begin_layout Plain Layout

plot(th.bush.kerry ~ V043250, type="n",xlab="V403250: Age", ylab="th.bush.kerry=
 Bush-Kerry thermometers", data=mydta1, ylim=c(-100,120))
\end_layout

\begin_layout Plain Layout

points(th.bush.kerry ~ V043250, data=mydta1, col=gray(.7), lwd=0.5, cex=0.7)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plot16,include=F,fig=T,eval=F, echo=T>>=
\end_layout

\begin_layout Plain Layout

ndf1 <- data.frame(V043250 = range(mydta1$V043250))
\end_layout

\begin_layout Plain Layout

mod1pred <- predict(mod1age, newdata = ndf1, interval="confidence")
\end_layout

\begin_layout Plain Layout

ndf1 <- cbind(ndf1, mod1pred)
\end_layout

\begin_layout Plain Layout

lines(fit ~ V043250, data = ndf1, lwd = 3, lty = 1)
\end_layout

\begin_layout Plain Layout

lines(lwr ~ V043250, data = ndf1, lwd = 2, lty = 2)
\end_layout

\begin_layout Plain Layout

lines(upr ~ V043250, data = ndf1, lwd = 2, lty = 2)
\end_layout

\begin_layout Plain Layout

legend("topleft", legend = c("predicted","95% CI"), lty = c(1,2), lwd =
 c(3,2), bg = "white")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plot17,include=F,fig=T,echo=F>>=
\end_layout

\begin_layout Plain Layout

<<plot15>>
\end_layout

\begin_layout Plain Layout

<<plot16>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-plot16.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Fitted (Predicted) Value and 95
\backslash
% Confidence Interval}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=11cm]{plots/t-plot17}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Multiple Predictors
\end_layout

\begin_layout Subsection
newdata
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What's that "newdata" argument in predict?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Run predict without 'newdata', what do you get?
\end_layout

\begin_deeper
\begin_layout Itemize
one prediction for each row in the data, same as output from fitted()
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plot11,include=T,echo=T>>=
\end_layout

\begin_layout Plain Layout

fit <- predict(mod1age)
\end_layout

\begin_layout Plain Layout

head(fit)
\end_layout

\begin_layout Plain Layout

head(fitted(mod1age))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
That does not simplify anything.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Transition to Multiple Regression}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
We want a prediction for a particular combination of predictors, to answer
 
\begin_inset Quotes eld
\end_inset

what would happen if?
\begin_inset Quotes erd
\end_inset

 questions.
\end_layout

\begin_deeper
\begin_layout Itemize
e.g., I need to know what young left-handed women feel about something
\end_layout

\end_deeper
\begin_layout Itemize
How to choose particular values of predictors? 
\end_layout

\begin_deeper
\begin_layout Itemize
quantiles?
\end_layout

\begin_layout Itemize
mean +/- standard deviation?
\end_layout

\end_deeper
\begin_layout Itemize
Making a newdata objects that work requires some discipline because values
 must be included for all variables.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Building a newdata object}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Step 1.
 For each variable in the model, create a collection of one or more example
 values for which predictions are to be calculated (can use quantiles, means,
 medians, or anything else).
\end_layout

\begin_layout Itemize
Step 2.
 R's expand.grid() will create a 
\begin_inset Quotes eld
\end_inset

mix and match
\begin_inset Quotes erd
\end_inset

 data frame.
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

focalValues <- data.frame(x1 = c(1, 2, 3, 4), x2 = c(100,200))
\end_layout

\begin_layout Plain Layout

mAndM <- expand.grid(focalValues)
\end_layout

\begin_layout Plain Layout

mAndM[1:8, ]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Tricky Thing about newdata argument}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
predict(m1, newdata = mAndM) will fail if
\end_layout

\begin_layout Itemize
newdata does not include one named column for each variable included in
 the model (here, m1)
\end_layout

\begin_layout Itemize
any values for factor variables included in mAndM are not valid labels.
 
\end_layout

\begin_layout Itemize
The model was specified in an unexpected way.
\end_layout

\begin_deeper
\begin_layout Description
BAD:
 
\lang english

\begin_inset listings
inline true
status open

\begin_layout Plain Layout

m1 <- lm(dat$y ~ dat$x1 + dat$x2)
\end_layout

\end_inset


\end_layout

\begin_layout Description
GOOD: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

m1 <- lm(y ~ x1 + x2, data = dat)
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The model includes transformations like 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
texttt{as.numeric(x)}
\end_layout

\end_inset

 or 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
texttt{as.factor(x)}
\end_layout

\end_inset

.
 These complicate the creation of newdata quite a bit.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Here's an example that works with the Chile data}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Using the Chile data from the car package, with 2 numeric (income, age)
 and 1 factor (sex).
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<chile05,echo=T,include=T>>=
\end_layout

\begin_layout Plain Layout

require(car)
\end_layout

\begin_layout Plain Layout

data(Chile)
\end_layout

\begin_layout Plain Layout

Chile$income <- Chile$income/1000
\end_layout

\begin_layout Plain Layout

m2 <- lm(statusquo ~ income + age + sex, data=Chile)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
statusquo : scale score of support for the status quo
\end_layout

\begin_layout Itemize
sex: M or F
\end_layout

\begin_layout Itemize
income (pesos, rescaled to 1000s of pesos)
\end_layout

\begin_layout Itemize
region (5 regions of Chile)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<chile15,echo=F, include=F,results=tex>>=
\end_layout

\begin_layout Plain Layout

outreg(m2, tight=FALSE, title = "Chile Voter Survey (1972)", modelLabels=c("Stat
us Quo Support"), varLabels=list(income = "Income (10000s pesos)", sexM
 = "Male"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Could use means, medians, or whatever else strikes our fancy.
 This creates just one example row
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T>>=
\end_layout

\begin_layout Plain Layout

newdf <- data.frame(income = mean(Chile$income, na.rm=TRUE), age=median(Chile$age,
 na.rm = TRUE), sex = "M")
\end_layout

\begin_layout Plain Layout

newdf$fit <- predict(m2, newdata = newdf)
\end_layout

\begin_layout Plain Layout

newdf
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Incidentally, Concerning Factors in newdata}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If we spell the factor levels incorrectly, this won't run.
\end_layout

\begin_layout Itemize
Thus there is an argument in favor of not spelling them, but rather asking
 for the valid levels and then using them in the newdata 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plot14E, eval=F>>=
\end_layout

\begin_layout Plain Layout

sexlev <- levels(Chile$sex)
\end_layout

\begin_layout Plain Layout

newdf <- data.frame(income=c(mean(Chile$income, na.rm = T)),  age = c(55),
 sex = sexlev[1])
\end_layout

\begin_layout Plain Layout

newdf$fit <- predict(m1, newdata = newdf)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The valid levels are held in sexlev, and sexlev[1] is the first valid level.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Getting good results with newdata will require practice}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Be patient, it can be made to work.
\end_layout

\begin_layout Itemize
Lets pause for some practice.
 There are several WorkingExamples that have newdata elements.
 I suggest that everybody should step through number 1, then pick randomly
 between 2-4.
\end_layout

\begin_deeper
\begin_layout Enumerate
regression-plot-factor-01.R
\end_layout

\begin_layout Enumerate
regression-predictedPlots-01.R
\end_layout

\begin_layout Enumerate
regression-predictedPlots-02.R
\end_layout

\begin_layout Enumerate
regression-quadratic-1.R
\end_layout

\end_deeper
\begin_layout Itemize
Please open one and 
\begin_inset Quotes eld
\end_inset

step through
\begin_inset Quotes erd
\end_inset

 to see what happens
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
termplot
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{termplot is provided with R}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Because termplot is provided with R, it is my favorite tool for a 
\begin_inset Quotes eld
\end_inset

first quick look
\begin_inset Quotes erd
\end_inset

 at the regression model.
\end_layout

\begin_layout Itemize
It
\end_layout

\begin_deeper
\begin_layout Itemize
has proper displays for both numeric and factor predictors
\end_layout

\begin_layout Itemize
has many arguments for customization of plots
\end_layout

\begin_layout Itemize
Automatically graphs each predictor, one after the other
\end_layout

\end_deeper
\begin_layout Itemize
Disadvantages
\end_layout

\begin_deeper
\begin_layout Itemize
does not handle models with interaction effects
\end_layout

\begin_layout Itemize
does not respond correctly to some complicated model formulae
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Look at a small model on the Chile data}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=T, eval=F>>=
\end_layout

\begin_layout Plain Layout

termplot(m2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Will prepare a simple line plot for each variable, I'll show you 
\begin_inset Quotes eld
\end_inset

income
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<tpchile05, eval=T, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

termplot(m2, terms = "income")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-tpchile05}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{I almost always add se and partial.resid arguments}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Richer display results
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=T, eval=F>>=
\end_layout

\begin_layout Plain Layout

termplot(m2, se = TRUE, partial.resid = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<tpchile10, eval=T, fig=T, include = F>>=
\end_layout

\begin_layout Plain Layout

termplot(m2, se = TRUE, partial.resid = TRUE, terms = "income")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-tpchile10}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Look at a small model on the Chile data}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<tpchile20, eval=T, fig=T, include = F>>=
\end_layout

\begin_layout Plain Layout

termplot(m2, se = TRUE, partial.resid = TRUE, terms = "age")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-tpchile20}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Look at a small model on the Chile data}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<tpchile30, eval=T, fig=T, include = F>>=
\end_layout

\begin_layout Plain Layout

termplot(m2, se = TRUE, partial.resid = TRUE, terms = "sex")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-tpchile30}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Run a big model}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<termplot09,include=FALSE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

m3 <- lm (th.bush.kerry ~ V045117 + V043116 + V043210 + V043213 + V045145X
 + V041109A, data = mydta1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

<<termplot10,include=FALSE,echo=FALSE,results=tex>>=
\end_layout

\begin_layout Plain Layout

outreg(m3, tight = FALSE, modelLabels = c("Bush-Kerry Thermometer Differential")
, varLabels=list(V045117L = "Liberal", V045117SL = "Slight Lib.", V045117M
 = "Moderate", V045117SC = "Slight Con.", V045117C = "Conservative", V045117EC
 = "Ext.
 Cons.", V043116WD = "Weak Dem.", V043116WD = "Weak Dem.", V043116ID = "Indep.
 Lean Dem.", V043116I = "Independent", V043116IR = "Indep.
 Lean Rep.", V043116WR = "Weak Rep.", V043116R = "Republican", V043116SR =
 "Str.
 Repub.", V043210No = "No Gay Marr", V043210med = "Civ Union", V043213Same
 = "Econ.
 Same", V043213Better = "Econ.
 Better", V041109AF = "Female"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-termplot09.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The interesting thing about this is that the model generates a huge set
 of coefficients, but
\end_layout

\begin_layout Itemize
termplot notices which variable corresponds to each set and makes a graceful
 plot
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Fitted Regression Model}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
scriptsize{
\end_layout

\begin_layout Plain Layout


\backslash
input{plots/t-termplot10.tex}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{termplot will try to show these to you, one at a time}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
You run 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

termplot(m3, se = TRUE, partial.resid = TRUE)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
to see all of them.
 
\end_layout

\begin_layout Standard
I have to ask 
\begin_inset Quotes eld
\end_inset

by name
\begin_inset Quotes erd
\end_inset

 in order to put this presentation together
\end_layout

\end_deeper
\begin_layout Itemize
se=T prints the 95% 
\begin_inset Quotes eld
\end_inset

confidence intervals
\begin_inset Quotes erd
\end_inset

 for the predicted values
\end_layout

\begin_layout Itemize
partial.resid=T plots the 
\begin_inset Quotes eld
\end_inset

partial residuals
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{termplot: Ideology}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch termplot
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<termplot40,fig=T,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

termplot(m3, se = TRUE, partial.resid=TRUE, terms="V045117",xlab="V045117:
 Ideology")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-termplot40}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{termplot: Party ID}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch termplot
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<termplot41,fig=T,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

termplot(m3, se=TRUE, partial.resid=TRUE, terms="V043116",xlab="V043116:
 Party ID")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-termplot41}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{termplot: Gay Marriage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch termplot
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<termplot42,fig=T,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

termplot(m3, se=TRUE, partial.resid=T, terms="V043210",xlab="V043210: Gay
 Marriage")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-termplot42}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{termplot: National Economy}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch termplot
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<termplot43,fig=T,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

termplot(m3, se=TRUE, partial.resid=TRUE, terms="V043213",xlab="V043213:
 Economy")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-termplot43}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{termplot: The Flag}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch termplot
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<termplot44,fig=T,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

termplot(m3, se=TRUE, partial.resid=TRUE, terms="V045145X",xlab="V045145X:
 The Flag Makes Me Feel")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-termplot44}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{termplot: Gender}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch termplot
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<termplot45,fig=T,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

termplot(m3, se=TRUE, partial.resid=T, terms="V041109A",xlab="V041109a: Gender")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-termplot45}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{termplot: Gender w/o partial residuals}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch termplot
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<termplot46,fig=T,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

termplot(m3, se=TRUE, terms="V041109A",xlab="V041109A: Gender")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-termplot46}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Frustrating Detour: Why is the Vertical Axis called "partial"?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The ?termplot manual is difficult to understand, the meaning of a 
\begin_inset Quotes eld
\end_inset

term predictions
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

partial residual
\begin_inset Quotes erd
\end_inset

 is not stated.
 
\end_layout

\begin_layout Itemize
So I went and read the code.
 (Then we are more sympathetic to the manual writer, because this is a complicat
ed idea.)
\end_layout

\begin_layout Itemize
Summary of the idea: Aim is to plot 
\begin_inset Formula $y_{i}$
\end_inset

 on 
\begin_inset Formula $X1_{i}$
\end_inset

, after 
\begin_inset Quotes eld
\end_inset

subtracting out
\begin_inset Quotes erd
\end_inset

 effects of 
\begin_inset Formula $X2_{i}$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
, 
\begin_inset Formula $X3{}_{i}$
\end_inset


\end_layout

\begin_layout Itemize
A 
\begin_inset Quotes eld
\end_inset

Partial Residual
\begin_inset Quotes erd
\end_inset

 is what is left unaccounted for by one variable when the predictive effects
 of all of the other input variables have been taken into account.
 
\end_layout

\begin_layout Itemize
If you are satisfied with that 
\begin_inset Quotes eld
\end_inset

story
\begin_inset Quotes erd
\end_inset

, skip the next few slides.
 Otherwise, be brave and keep trying.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Huh? What is the Partial Predicted Value?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Consider model 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none

\begin_inset listings
inline false
status open

\begin_layout Plain Layout

mod <- lm(y ~ X1 + X2 + X3, data = dat)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The ordinary 
\begin_inset Quotes eld
\end_inset

predicted value
\begin_inset Quotes erd
\end_inset

 is 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\hat{y_{i}}=\hat{b}_{0}+\hat{b}_{1}X1_{i}+\hat{b}_{2}X2_{i}+\hat{b}_{3}X3_{i}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

mean prediction
\begin_inset Quotes erd
\end_inset

 is: 
\begin_inset Formula 
\[
\hat{b}_{0}+\hat{b}_{1}\overline{X1}+\hat{b}_{2}\overline{X2}+\hat{b}_{3}\overline{X3}
\]

\end_inset


\end_layout

\begin_layout Itemize
One old math professor trick is to add and subtract the same thing from
 one side of an equation and then rearrange so that some new insight flows
 out.
 Here, I will add and subtract the mean prediction from the predicted value.
\end_layout

\begin_layout Itemize
After re-grouping, we see the 
\begin_inset Quotes eld
\end_inset

full model
\begin_inset Quotes erd
\end_inset

 is the sum of the 
\begin_inset Quotes eld
\end_inset

mean prediction
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

term
\begin_inset Quotes erd
\end_inset

 predictions
\begin_inset Formula 
\begin{eqnarray}
\hat{y}_{i}= & \{\hat{b}_{0}+\hat{b}_{1}\overline{X1}+\hat{b}_{2}\overline{X2}+\hat{b}_{3}\overline{X3}\}\nonumber \\
 & +\{\hat{b}_{1}(X1_{i}-\overline{X1})+\hat{b}_{1}(X2_{i}-\overline{X2})+\hat{b}_{3}(X3_{i}-\overline{X3})\}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Itemize
In R, predict(mod, type=
\begin_inset Quotes erd
\end_inset

terms
\begin_inset Quotes erd
\end_inset

) returns the last 
\begin_inset Quotes eld
\end_inset

term predictions
\begin_inset Quotes erd
\end_inset

 as separate columns:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{array}{cccccc}
 & X1 &  & X2 &  & X3\\
 & \overbrace{\hat{b}_{1}(X1_{i}-\overline{X1})} & , & \overbrace{\hat{b}_{2}(X2_{i}-\overline{X2})} & , & \overbrace{\hat{b}_{3}(X3_{i}-\overline{X3})}
\end{array}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
These are the predicted values used by termplot in its internal calculations
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{And a partial residual is...}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
begin with the 
\begin_inset Quotes eld
\end_inset

full model residual
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
y_{i}-\hat{y}_{i}=y_{i}-\{\hat{b}_{0}+\hat{b}_{1}X1_{i}+\hat{b}_{2}X2_{i}+\hat{b}_{3}X3_{i}\}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
Get the 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $partial\, residual_{i}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 by replacing 
\begin_inset Formula $X1_{i}$
\end_inset

 with 
\begin_inset Formula $\overline{X1}$
\end_inset

: 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula 
\begin{equation}
y-\{\hat{b}_{0}+\hat{b}_{1}\overline{X1}+\hat{b}_{2}X2_{i}+\hat{b}_{3}X3_{i}\}
\end{equation}

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
If we 
\begin_inset Quotes eld
\end_inset

do not allow variations in 
\begin_inset Formula $X1$
\end_inset

 to play a predictive role, what remains unexplained?
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Another interpretation (See the source code in 
\begin_inset Quotes eld
\end_inset

residuals.lm
\begin_inset Quotes erd
\end_inset

):
\end_layout

\begin_deeper
\begin_layout Itemize
the partial residual = 
\begin_inset Quotes eld
\end_inset

full residual
\begin_inset Quotes erd
\end_inset

 + 
\begin_inset Quotes eld
\end_inset

term prediction
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula 
\begin{eqnarray*}
partial\, residual(X1_{i}) & =y_{i} & -\{\hat{b}_{0}+\hat{b}_{1}X1_{i}+\hat{b}_{2}X2_{i}+\hat{b}_{3}X3_{i}\}\\
 &  & +\{\hat{b}_{1}(X1_{i}-\overline{X1})\}\\
 & =y_{i}-\{ & \hat{b}_{0}+\hat{b}_{1}\overline{X1}+\hat{b}_{2}X2_{i}+\hat{b}_{3}X3_{i}\}
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Reminder}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
termplot is a wonderful tool, but it suffers from one crippling flaw: it
 does handle interaction terms.
\end_layout

\begin_layout Itemize
That lead to
\end_layout

\begin_deeper
\begin_layout Itemize
many hours of teaching about predict and newdata in our intro regression
 class
\end_layout

\begin_layout Itemize
the creation of the rockchalk package to automate the management of some
 common cases.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
rockchalk
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{rockchalk functions}
\end_layout

\end_inset


\end_layout

\begin_layout Description
plotSlopes was the first effort there, and later it became apparent that
 a general approach to automatically create newdata objects would be a tremendou
s help (and allows predictOMatic to 
\begin_inset Quotes eld
\end_inset

just work
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Description
newdata: scan regression model and construct 
\begin_inset Quotes eld
\end_inset

newdata
\begin_inset Quotes erd
\end_inset

 objects that can be used by predict methods
\end_layout

\begin_deeper
\begin_layout Standard
This is user friendly, flexible.
 The focal values of several predictors can be selected (by quantile, by
 standard deviations, a sequence that walks across the observed values).
\end_layout

\end_deeper
\begin_layout Description
predictOMatic: Calculates predicted values for various predictor values
\end_layout

\begin_layout Description
plotCurves: handles nonlinear formulae and interactions among nonlinear
 terms.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{newdata()}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
newdata() tries to do the right thing, allowing easy customization.
\end_layout

\begin_layout Itemize
Consider the Chile data, with statusquo ~ income + age + sex
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

newdata(m2, predVals = c("income"))
\end_layout

\begin_layout Plain Layout

newdata(m2, predVals = c("income"), n = 5)
\end_layout

\begin_layout Plain Layout

## income data not continuous, barely numeric
\end_layout

\begin_layout Plain Layout

sort(unique(Chile$income))
\end_layout

\begin_layout Plain Layout

newdata(m2, predVals = list(income = "table", "sex" = c("M","F")), n = 5)
\end_layout

\begin_layout Plain Layout

newdata(m2, predVals = list(income = "quantile", age = "std.dev."), n = 3)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{predictOMatic shows marginal effects}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
If no particulars are requested, predictOMatic shows the marginal effects
 of each separate predictor, keeping the other values at their means (numeric
 variables) or modes (factor variables).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

predictOMatic(m2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

predictOMatic(m3)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{plotSlopes uses that framework}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
We want to estimate an interactive model, by changing this:
\end_layout

\begin_deeper
\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

th.bush.kerry ~ V043250 + V041109A
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $V041109A$
\end_inset

 is respondent gender, coded 
\begin_inset Quotes eld
\end_inset

M
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

F
\begin_inset Quotes erd
\end_inset

.
 
\begin_inset Formula $V043250$
\end_inset

 is age.
\end_layout

\end_deeper
\begin_layout Itemize
To this:
\end_layout

\begin_deeper
\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

th.bush.kerry ~ V043250 * V041109A
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
We can plot an age, thermometer line for each 
\begin_inset Quotes eld
\end_inset

value
\begin_inset Quotes erd
\end_inset

 of gender
\end_layout

\begin_deeper
\begin_layout Itemize
one line for 
\begin_inset Quotes eld
\end_inset

M
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
one line for 
\begin_inset Quotes eld
\end_inset

F
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{plotSlopes uses that information}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plotslopes10, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

m6 <- lm(th.bush.kerry ~ V043250 * V041109A, data=mydta1)
\end_layout

\begin_layout Plain Layout

plotSlopes(m6, plotx = "V043250", modx = "V041109A", plotPoints = FALSE,
 plotLegend = FALSE,  xlab = "Age", ylab = "Bush-Kerry Thermometer", ylim
 = c(-100,150), col = c("black","gray60"), llwd=c(2,3))
\end_layout

\begin_layout Plain Layout

legend("topleft", legend = levels(mydta1$V041109A), col=c("black","gray60"),
 lty=c(1,2), lwd=c(2,3))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-plotslopes10}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{How Did I Make That Plot?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Students thought it was very tedious to calculate predictions for various
 moderators
\end_layout

\begin_layout Itemize
TaDa! plotSlopes rockchalk simplifies this work.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

plotSlopes(m2, plotx = "numericPredictor", modx = "aModeratorVariable")
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
It figures out which values of aModeratorVariable should be considered,
 calculates predicted values for subgroups and draws them.
\end_layout

\begin_layout Itemize
It returns an object that includes the newdata object.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-plotslopes10.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Sometimes We Want To See The Points}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plotslopes20, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

plotSlopes(m6, plotx = "V043250", modx = "V041109A", xlab = "Age", ylab
 = "Bush-Kerry Thermometer", ylim = c(-100, 150), col = c("black","gray60"),
 llwd = c(2,3))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=8cm]{plots/t-plotslopes20}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Notice the non-beautified 
\begin_inset Quotes eld
\end_inset

automatic
\begin_inset Quotes erd
\end_inset

 legend
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Write that out completely, without plotSlopes}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plot22B, include=F, fig=T, echo=T>>=
\end_layout

\begin_layout Plain Layout

m6 <- lm(th.bush.kerry~V043250 + V041109A, data=mydta1)
\end_layout

\begin_layout Plain Layout

mycols <- c(gray(.7), rgb(0.7, 0.1, 0.1), "black", "red") 
\end_layout

\begin_layout Plain Layout

V043250r <- range(mydta1$V043250)
\end_layout

\begin_layout Plain Layout

newdf1 <- expand.grid(V043250 = V043250r,  V041109A = levels(mydta1$V041109A))
\end_layout

\begin_layout Plain Layout

newdf1$fit <- predict(m6, newdata = newdf1)
\end_layout

\begin_layout Plain Layout

plot(th.bush.kerry ~ V043250, type = "n", data = mydta1, xlab = "V043250:
 Age (years)", ylab = "Bush-Kerry Thermometer Differential")
\end_layout

\begin_layout Plain Layout

points(th.bush.kerry ~ V043250, data = mydta1,  lwd = 0.6, col = ifelse(V041109A
 %in% c("M"), mycols[1], mycols[2]))
\end_layout

\begin_layout Plain Layout

by(newdf1, newdf1$V041109A, function(x) lines(fit~V043250, data = x, col
 = mycols[2+as.numeric(x$V041109A)], lty = as.numeric(x$V041109A), lwd = 3
 ))
\end_layout

\begin_layout Plain Layout

legend("topleft", legend = c("Male", "Female"), col = mycols[3:4], lty =
 c(1,2), bg = "white", lwd = 3)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-plot22B.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Plot Predicted values by Gender}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-plot22B}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Chile data: statusquo $
\backslash
sim$ income * region + sex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<chile40,echo=T, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

m6 <- lm(statusquo ~ income * region + sex, data = Chile)
\end_layout

\begin_layout Plain Layout

plotSlopes(m6, plotx = "income", modx = "sex", plotLegend = FALSE, ylim
 = magRange(Chile$statusquo, c(1,1.3)), llwd = c(2,2), cex = 1.0, lwd = 0.5)
\end_layout

\begin_layout Plain Layout

legend("topleft", c("Female", "Male"), col = c(1, 2), lty = 1:2, bg = "white")
 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout


\backslash
input{plots/t-chile40.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Gender, Income, and Chilean Voter Attitudes}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-chile40}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<chile70,echo=T, include=F, fig=T, height=5, width=8>>=
\end_layout

\begin_layout Plain Layout

m6ps <- plotSlopes(m6, plotx = "income", modx = "region", ylim = magRange(Chile$
statusquo, c(1, 1.3)), llwd = c(2, 2), cex = 1.0)
\end_layout

\begin_layout Plain Layout

m6ps$newdata
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-chile70}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-chile70}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
effects
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{effects Package}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
There are several other R packages that help us to explore predicted values.
\end_layout

\begin_layout Itemize
One of the first packages for this purpose was effects, by John Fox, Sanford
 Weisberg, and others.
\end_layout

\begin_layout Itemize
rockchalk is doing same/similar set of calculations, but user interface
 of rockchalk is (perhaps, just IMHO) more flexible & pleasant.
\end_layout

\begin_layout Itemize
plots from effects are not so nice as plots from termplot.
\end_layout

\begin_layout Itemize
Other packages that have a similar orientation are rms and Zelig
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{effects Package}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch effects
status collapsed

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<effects10,fig=T,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

library(effects)
\end_layout

\begin_layout Plain Layout

m3.ae <- allEffects(m3)
\end_layout

\begin_layout Plain Layout

plot(m3.ae, "V041109A")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

<<effects11,fig=TRUE, include=FALSE, echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

plot(trellis.last.object())
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-effects10.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Effects Plot: Gender}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-effects11}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{effects Package}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch effects
status collapsed

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<effects20,fig=F,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

plot(m3.ae, "V043116", xlab="V043116: Party Identification")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

<<effects21,fig=TRUE, include=FALSE, echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

plot(trellis.last.object())
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-effects20.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Effects Plot: Party Identification}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-effects21}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Effects Plot: Ideology}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch effects
status collapsed

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<effects24,fig=F,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

plot(m3.ae, "V045117", xlab="V045117: Ideology")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

<<effects25,fig=TRUE, include=FALSE, echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

plot(trellis.last.object())
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-effects25}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Effects Plot: Gay Marriage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch effects
status collapsed

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<effects29,fig=F,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

plot(m3.ae, "V043210", xlab="V043210: Gay Marriage")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

<<effects30,fig=TRUE, include=FALSE, echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

plot(trellis.last.object())
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-effects30}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Ordinal versus Numeric
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{R Emphasizes Factors}
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{itemize}
\end_layout

\begin_layout Plain Layout

    
\backslash
item Importing Data: Any non-numeric score -> "factor" treatment
\end_layout

\begin_layout Plain Layout

    
\backslash
item Age-old question: Is a 7 point scale numeric or merely ordinal?
\end_layout

\begin_layout Plain Layout

    
\backslash
item Plots 
\backslash
& regressions seem tidier if we use numeric scorings
\end_layout

\begin_layout Plain Layout

    
\backslash
item Possible to formally test the numeric versus the factor scorings
\end_layout

\begin_layout Plain Layout

  
\backslash
end{itemize}
\end_layout

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Create Numeric Predictors}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<numer05,echo=T,include=F>>=
\end_layout

\begin_layout Plain Layout

mydta1$V045117n <- as.numeric(mydta1$V045117)
\end_layout

\begin_layout Plain Layout

mydta1$V043116n <- as.numeric(mydta1$V043116)
\end_layout

\begin_layout Plain Layout

mydta1$V043210n <- as.numeric(mydta1$V043210)
\end_layout

\begin_layout Plain Layout

mydta1$V043213n <- as.numeric(mydta1$V043213)
\end_layout

\begin_layout Plain Layout

mydta1$V045145Xn <- as.numeric(mydta1$V045145X)
\end_layout

\begin_layout Plain Layout

m3n <- lm (th.bush.kerry ~ V045117n + V043116n + V043210n + V043213n + V045145Xn
 + V041109A, data=mydta1) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<numer09, echo=T, include=F, eval=F>>=
\end_layout

\begin_layout Plain Layout

outreg(m3n, tight=FALSE, modelLabels=c("Numeric Predictors"), varLabels=list(V04
5117n="Ideology", V043116n="Party ID", V043210n="AntiGay", V043213n="Economy",
 V045145Xn="Flag Love", V041109AF="Female"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<numer10, echo=F, include=F, results=tex>>=
\end_layout

\begin_layout Plain Layout

<<numer09>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-numer05}
\end_layout

\begin_layout Plain Layout


\backslash
input{plots/t-numer09}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Beautiful Outreg Output}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
scriptsize{
\end_layout

\begin_layout Plain Layout


\backslash
input{plots/t-numer10.tex}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{termplot: Ideology}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch termplot
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<numer20,fig=T,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

termplot(m3n, se=TRUE, partial.resid=T, terms="V045117n",xlab="V045117n:
 Ideology")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-numer20}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Compare to ordinary R plot(bush-kerry,ideology)}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<numer21,fig=T,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

plot(th.bush.kerry~V045117, data=mydta1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-numer21}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{termplot: Party ID}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch termplot
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<numer30,fig=T,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

termplot(m3n, se=TRUE, partial.resid=TRUE, terms="V043116n",xlab="V043116n:
 Party ID")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-numer30}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Compare to ordinary R plot(bush-kerry, party))}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<numer40,fig=T,include=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

plot(th.bush.kerry~V043116, data=mydta1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-numer40}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Should you use the Numeric Model?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
My humble opinion: not without checking first
\end_layout

\begin_layout Itemize
Look at 
\begin_inset Quotes eld
\end_inset

termplot
\begin_inset Quotes erd
\end_inset

 output to see if the relationship really is linear
\end_layout

\begin_layout Itemize
Conduct hypothesis tests
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{An F test will work (these are nested models)}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<numer50,echo=T, include=F>>=
\end_layout

\begin_layout Plain Layout

anova(m3,m3n, test="F")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-numer50}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What does that Significance Test Mean?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Something's wrong, at last one variable should not be treaded as a linear
 effect.
\end_layout

\begin_layout Itemize
Difficult to say with confidence what to do next.
 
\end_layout

\begin_layout Itemize
I would look at individual variables.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Party, for example}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<numer65,echo=T,include=F>>=
\end_layout

\begin_layout Plain Layout

mod2 <- lm (th.bush.kerry ~ V045117n + V043116 + V043210n + V043213n + V045145Xn
 + V041109A, data=mydta1) 
\end_layout

\begin_layout Plain Layout

mod2n <- lm (th.bush.kerry ~ V045117n + V043116n + V043210n + V043213n + V045145Xn
 + V041109A, data=mydta1) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<numer69, echo=T, include=F, eval=F>>=
\end_layout

\begin_layout Plain Layout

outreg(list(mod2, mod2n), tight=FALSE, modelLabels=c("Party Factor","Numeric
 Predictors"), varLabels=list(V045117n="Ideology", V043116="Party ID", V043210n=
"AntiGay", V043213n="Economy", V045145Xn="Flag Love", V041109AF="Female"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<numer70, echo=F, include=F, results=tex>>=
\end_layout

\begin_layout Plain Layout

<<numer69>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-numer65}
\end_layout

\begin_layout Plain Layout


\backslash
input{plots/t-numer69}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Beautiful Outreg Output}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
scriptsize{
\end_layout

\begin_layout Plain Layout


\backslash
input{plots/t-numer70.tex}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{An F test will work}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<numer75,echo=T, include=F>>=
\end_layout

\begin_layout Plain Layout

anova(mod2, mod2n, test="F")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-numer75}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
3d Plots
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Kinds of 3d Plot}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Please see the separate lecture notes on plotting in 3 dimensions.
 After inserting that material into this file, it simply became too unwieldy
 for editing.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
