#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass sweavel-beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}

%\usepackage{Sweavel}


% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}


%\setbeamercovered{transparent}
% or whatever (possibly just delete it)

% In document Latex options:
\fvset{listparameters={\setlength{\topsep}{0em}}}
\def\Sweavesize{\normalsize} 
\def\Rcolor{\color{black}} 
\def\Rbackground{\color[gray]{0.95}}

\usepackage{graphicx}
\usepackage{listings}
\lstset{tabsize=2, breaklines=true,style=Rstyle}
\usetheme{Antibes}
% or ...

%\setbeamercovered{transparent}
% or whatever (possibly just delete it)

%\mode<presentation>
%{
 % \usetheme{KU}
 % \usecolortheme{dolphin} %dark blues
%}


%%not for article, but for presentation
\mode<presentation>
\newcommand\makebeamertitle{\frame{\maketitle}}


%%only for presentation
\mode<presentation>
\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}


\expandafter\def\expandafter\insertshorttitle\expandafter{%
 \insertshorttitle\hfill\insertframenumber\,/\,\inserttotalframenumber}
\end_preamble
\use_default_options false
\begin_modules
sweave
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch effects
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\branch termplot
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Branch R
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=F>>=
\end_layout

\begin_layout Plain Layout

dir.create("plots", showWarnings=F)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=plots/p,split=T,ae=F,height=4,width=6}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, echo=F>>=
\end_layout

\begin_layout Plain Layout

options(device = pdf)
\end_layout

\begin_layout Plain Layout

options(width=160, prompt="> ", continue="  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE) 
\end_layout

\begin_layout Plain Layout

#set.seed(12345)
\end_layout

\begin_layout Plain Layout

op <- par() 
\end_layout

\begin_layout Plain Layout

pjmar <- c(5.1, 5.1, 1.5, 2.1) 
\end_layout

\begin_layout Plain Layout

#pjmar <- par("mar")
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Title
First R-03 
\begin_inset Argument
status collapsed

\begin_layout Plain Layout
Descriptive
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul E.
 Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Political Science
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Center for Research Methods and Data Analysis, University of Kansas
\begin_inset Argument
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Date
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\begin_inset Argument
status collapsed

\begin_layout Plain Layout
2011
\end_layout

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Introduction}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
These notes are about the 
\begin_inset Quotes eld
\end_inset

path
\begin_inset Quotes erd
\end_inset

 and the 
\begin_inset Quotes eld
\end_inset

current working directory
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Key concepts
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

current working directory
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Relative and absolute file paths
\end_layout

\end_deeper
\begin_layout Itemize
Key R functions that are emphasized
\end_layout

\begin_deeper
\begin_layout Itemize
getwd()
\end_layout

\begin_layout Itemize
setwd()
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{When R starts, Where are you?}
\end_layout

\end_inset


\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
4cm
\end_layout

\begin_layout Itemize
When you start R, 
\begin_inset Quotes eld
\end_inset

where are you
\begin_inset Quotes erd
\end_inset

?
\end_layout

\begin_layout Itemize
This example: I started R in my Linux home directory, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

/home/pauljohn
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
getwd() 
\begin_inset Formula $\Longleftrightarrow$
\end_inset

 get Working Directory (WD)!
\end_layout

\begin_layout Column
8cm
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/terminal-01.png
	width 8cm

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{When R starts, Where are you?}
\end_layout

\end_inset


\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
4cm
\end_layout

\begin_layout Itemize
Suppose instead I create a directory 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

/home/pauljohn/tmp/funnyDirname
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I change into that directory, and start R
\end_layout

\begin_layout Column
8cm
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/terminal-02.png
	width 8cm

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
R notices the difference, so the current WD becomes R's WD
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Working Directory Means...
\end_layout

\begin_layout Itemize
Everything R reads (and writes) has to be (or go) 
\begin_inset Quotes eld
\end_inset

somewhere
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
When you read or write a file WITHOUT SPECIFYING A FULL PATH, R looks in
 the current working directory.
\end_layout

\begin_layout Itemize
The FULL PATH would be (long, boring, typo-prone) like
\end_layout

\begin_deeper
\begin_layout Standard
Mac: 
\begin_inset Quotes eld
\end_inset

/user/your-name/Documents/psych790/exercise-1/mydata.dat
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Windows: 
\begin_inset Quotes eld
\end_inset

C:/users/your-name-here/Documents/psych790/exercise-1/mydata.dat
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Less error prone to keep data and output in current working directory, or
 in a directory that is 
\begin_inset Quotes eld
\end_inset

relative
\begin_inset Quotes erd
\end_inset

 to it (explanation below).
 
\end_layout

\begin_layout BeginFrame
Path
\end_layout

\begin_layout Itemize
Graphical Computer Interfaces are making it tougher to know 
\begin_inset Quotes eld
\end_inset

where am I?
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Itemize
Windows launcher icons have a 
\begin_inset Quotes eld
\end_inset

Start In
\begin_inset Quotes erd
\end_inset

 argument...
\end_layout

\begin_layout Itemize
If you launch R from a menu or icon, where does it 
\begin_inset Quotes eld
\end_inset

put you?
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
The getwd() command displays the current working directory
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F, echo=T>>=
\end_layout

\begin_layout Plain Layout

getwd()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Windows Slashes
\end_layout

\begin_layout Itemize
Misty Water Colored Memories of MS Windows
\end_layout

\begin_deeper
\begin_layout Itemize
Olden days: R would think your working directory was 
\begin_inset Quotes eld
\end_inset

C:
\backslash
Program Files
\backslash
R
\begin_inset Quotes erd
\end_inset

 or something silly like that.
\end_layout

\begin_layout Itemize
Now, perhaps it guesses 
\begin_inset Quotes eld
\end_inset

C:
\backslash
user
\backslash
your-name-here
\backslash
Documents
\begin_inset Quotes erd
\end_inset

 or such.
\end_layout

\end_deeper
\begin_layout Itemize
ALTHOUGH Windows uses the backslash for a separator, inside R we DO NOT
 use the backslash, even on Windows.
 Instead, that path would be typed in as 
\begin_inset Quotes eld
\end_inset

C:/usr/your-name-here/Documents
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout BeginFrame
Please Be organized
\end_layout

\begin_layout Itemize
Be like me.
 Make a directory structure
\end_layout

\begin_deeper
\begin_layout Itemize
Macintosh: /user/your-name-here/documents/ps706/First-R-03
\end_layout

\begin_layout Itemize
Windows: C:
\backslash
users
\backslash
your-name-here
\backslash
Documents
\backslash
ps706
\backslash
First-R-03
\end_layout

\begin_layout Itemize
Linux/Unix: /home/your-name/documents/ps706/First-R-03
\end_layout

\end_deeper
\begin_layout Itemize
Each separate project is in a separate folder.
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Relative file paths}
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsCenterAligned

\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Standard
Suppose your directories are like so
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

school
\end_layout

\begin_layout Plain Layout

	pols706
\end_layout

\begin_layout Plain Layout

		homework
\end_layout

\begin_layout Plain Layout

			ex-1
\end_layout

\begin_layout Plain Layout

			ex-2
\end_layout

\begin_layout Plain Layout

		test
\end_layout

\begin_layout Plain Layout

			test-1
\end_layout

\begin_layout Plain Layout

			test-2
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Set working directory: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

"school/.../test/test-2"
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Ask for 
\begin_inset Quotes eld
\end_inset

mydata.dat
\begin_inset Quotes erd
\end_inset

, R looks in CWD 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

"./test-2"
\end_layout

\end_inset


\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
Want mydata.dat stored in 
\begin_inset Quotes eld
\end_inset

test
\begin_inset Quotes erd
\end_inset

? Use file name 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

"../mydata.dat"
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout AlertBlock
\begin_inset ERT
status open

\begin_layout Plain Layout

{Notice the 2 dots}
\end_layout

\end_inset


\begin_inset Quotes eld
\end_inset

../
\begin_inset Quotes erd
\end_inset

 means 
\begin_inset Quotes eld
\end_inset

go up one level
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Want myditty.dat in 
\begin_inset Quotes eld
\end_inset

test/test-1
\begin_inset Quotes erd
\end_inset

? Use file name 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

"../test-1/myditty.dat"
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Want myex1.dat from ex-1? Ask for 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

"../../homework/ex-1/myex1.dat"
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout ColumnsCenterAligned

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Be the Boss of R!}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
It is OK to ask R where it is working.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

> getwd()
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Better than asking, is Telling R where to work.
 Be assertive!
\end_layout

\begin_layout Itemize
I manage that by starting R from a terminal (or actually, an editor in that
 directory), and R notices where I was when I started.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Set the Working Directory
\end_layout

\begin_layout Itemize
Perhaps you don't start R from a terminal, as I do.
 You can still tell R where it is supposed to work.
 
\end_layout

\begin_layout Itemize
For that, you need to develop a little 
\begin_inset Quotes eld
\end_inset

routine
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
But it's a GOOD routine, generally valuable in all kinds of research computing.
 
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Option 1: setwd("some-full-path-name")}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This is the difficult way.
 The first line in any R program is setwd().
 Almost all R novices think is the most obvious way.
\end_layout

\begin_layout Itemize
Start R, let it open up anywhere it wants, and
\end_layout

\begin_deeper
\begin_layout Itemize
Use setwd() to make R change its working directory 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

> setwd("some-directory-name-here")
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Use 
\begin_inset Quotes eld
\end_inset

setwd()
\begin_inset Quotes erd
\end_inset

, with a full directory name IN QUOTES.
\end_layout

\begin_deeper
\begin_layout Itemize
Windows:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=T, eval=F, echo=T>>=
\end_layout

\begin_layout Plain Layout

setwd("c:/users/your-name-here/Documents/ps706/First-R-03")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
YES, I mean forward slashes, even in Windows.
\end_layout

\end_deeper
\begin_layout Itemize
FYI: For other Windows tips, please see the FAQ for Windows that is distributed
 with R documentation.
 (don't forget 
\begin_inset Quotes eld
\end_inset

help.start()
\begin_inset Quotes erd
\end_inset

).
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Method 
\backslash
#2 (Smarter way)}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Make a directory
\end_layout

\begin_layout Itemize
Put an R file in that directory.
 
\end_layout

\begin_layout Itemize
Open that file in an editor (even the R editor window will do, if your OS
 has one)
\end_layout

\begin_layout Itemize
R will figure out where the file was and assume that is the working directory.
\end_layout

\begin_layout Itemize
Works with Emacs (and ESS), Notepad++ (with NPPTOR), or RStudio.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Relative File Locations are OK}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Suppose your default working directory is 
\begin_inset Quotes eld
\end_inset

/home/your-name/
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
You could keep a data file 
\begin_inset Quotes eld
\end_inset

mydata.dat
\begin_inset Quotes erd
\end_inset

 in the directory 
\begin_inset Quotes eld
\end_inset

/home/your-name/ps706
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Start R, Use the setwd() command on that relative path:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

> setwd("ps706")
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
If all your input is in 
\begin_inset Quotes eld
\end_inset

/home/your-name/ps706
\begin_inset Quotes erd
\end_inset

, then it will all be available.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Another idea: relative directories above and below}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Another idea: set the working directory 
\begin_inset Quotes eld
\end_inset

/home/your-name/ps706/exercise_1
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Gives access to all files in that directory
\end_layout

\end_deeper
\begin_layout Itemize
Can still refer to the data file in 
\begin_inset Quotes eld
\end_inset

one directory above
\begin_inset Quotes erd
\end_inset

 as
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

"../mydata.dat"
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
If you moved the data into 
\begin_inset Quotes eld
\end_inset

/home/your-name/ps706/exercise_1/data
\begin_inset Quotes erd
\end_inset

, you could
\end_layout

\begin_deeper
\begin_layout Itemize
start R and set the working directory 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

"/home/your-name/ps706/exercise_1"
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
then load a data file with a relative name 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

"../data/mydata.dat"
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Create a Subdirectory for your plots}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In R you can also create subfolders and then write output in them.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

myPlotDir <- "outdir"
\end_layout

\begin_layout Plain Layout

dir.create(myPlotDir)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Just one more thing before finishing}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R has separate functions to write graphs in files with various formats (pdf,
 postscript, png, jpeg)
\end_layout

\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

pull down
\begin_inset Quotes erd
\end_inset

 Save As menu seems convenient, but it is not 
\begin_inset Quotes eld
\end_inset

scriptable
\begin_inset Quotes erd
\end_inset

 or flexible.
\end_layout

\begin_layout Itemize
So learn to write commands that can save output images automatically
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Recall PDF example from Frist-R-01}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<p5, echo=T, include = F, results=hide>>=
\end_layout

\begin_layout Plain Layout

x <- rgamma(100, 1.5, 2.2)
\end_layout

\begin_layout Plain Layout

y <- rnorm(100) + 0.2 * x
\end_layout

\begin_layout Plain Layout

pdf("RegPlot1.pdf", height=6, width=6, paper="special")
\end_layout

\begin_layout Plain Layout

plot(y ~ x, main="Here comes a line of best fit!")
\end_layout

\begin_layout Plain Layout

mod1 <- lm(y ~ x)
\end_layout

\begin_layout Plain Layout

abline(mod1)
\end_layout

\begin_layout Plain Layout

dev.off() #turns off pdf output device
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout


\backslash
input{plots/p-p5.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
That creates a pdf and writes it in the Current Working Directory.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{You can write the files in other locations}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<p10, echo=T, include = F, results=hide>>=
\end_layout

\begin_layout Plain Layout

x <- rgamma(100, 1.5, 2.2)
\end_layout

\begin_layout Plain Layout

y <- rnorm(100) + 0.2 * x
\end_layout

\begin_layout Plain Layout

dir.create("plots2")
\end_layout

\begin_layout Plain Layout

pdf("plots2/RegPlot1.pdf", height=6, width=6, paper="special")
\end_layout

\begin_layout Plain Layout

plot(y ~ x, main = "I'm saved in plots folder!")
\end_layout

\begin_layout Plain Layout

mod1 <- lm(y ~ x)
\end_layout

\begin_layout Plain Layout

abline(mod1)
\end_layout

\begin_layout Plain Layout

dev.off() #turns off pdf output device
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout


\backslash
input{plots/p-p10.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Creates a directory 
\begin_inset Quotes eld
\end_inset

plots2
\begin_inset Quotes erd
\end_inset

 and writes the file in there
\end_layout

\begin_layout Itemize
In addition to creating plots2 in the working directory, can place the new
 directory elsewhere
\end_layout

\begin_deeper
\begin_layout Itemize
relative placement, above: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

"../plots2/RegPlot1.pdf"
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
absolute path: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

"C:/user/long-annoying-directory/plots2/RegPlot1.pdf"
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\end_body
\end_document
