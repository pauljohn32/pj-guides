#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass sweavel-beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}

%\usepackage{Sweavel}


% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}


%\setbeamercovered{transparent}
% or whatever (possibly just delete it)

% In document Latex options:
\fvset{listparameters={\setlength{\topsep}{0em}}}
\def\Sweavesize{\normalsize} 
\def\Rcolor{\color{black}} 
\def\Rbackground{\color[gray]{0.95}}

\usepackage{graphicx}
\usepackage{listings}
\lstset{tabsize=2, breaklines=true,style=Rstyle}


%\setbeamercovered{transparent}
% or whatever (possibly just delete it)

%%only for presentation
%%not for article, but for presentation
\mode<presentation>
\newcommand\makebeamertitle{\frame{\maketitle}}



\mode<presentation>
\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}


\expandafter\def\expandafter\insertshorttitle\expandafter{%
 \insertshorttitle\hfill\insertframenumber\,/\,\inserttotalframenumber}


\usetheme{KU}
\usecolortheme{dolphin} %dark blues
%\usetheme{Antibes}
% or ...
\end_preamble
\use_default_options false
\begin_modules
sweave
logicalmkup
\end_modules
\maintain_unincluded_children false
\begin_local_layout
Format 7
InsetLayout CharStyle:Rinput
  LyxType               charstyle
  LabelString           Rinput
  LatexType             command
  LatexName             Rinput
  Font
      Family             Typewriter
  EndFont
  Preamble
      \newcommand*{\Rinput}[1]{{\ttfamily #1}}
  EndPreamble
End

InsetLayout CharStyle:Rfunction
  LyxType               charstyle
  LabelString           Rfunction
  LatexType             command
  LatexName             Rfunction
  Font
      Family             Typewriter
  EndFont
  Preamble
      \newcommand*{\Rfunction}[1]{{\ttfamily #1}}
  EndPreamble
End

InsetLayout CharStyle:Routput
  LyxType               charstyle
  LabelString           Routput
  LatexType             command
  LatexName             Routput
  Font
      Family             Typewriter
  EndFont
  Preamble
      \newcommand*{\Routput}[1]{{\ttfamily #1}}
  EndPreamble
End
 
\end_local_layout
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\use_refstyle 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch effects
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\branch termplot
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Branch R
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=F>>=
\end_layout

\begin_layout Plain Layout

dir.create("plots", showWarnings=F)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=plots/t,split=T,ae=F,height=3.5,width=6}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, echo=F>>=
\end_layout

\begin_layout Plain Layout

options(device = pdf)
\end_layout

\begin_layout Plain Layout

options(width=160, prompt=" ", continue="  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE) 
\end_layout

\begin_layout Plain Layout

#set.seed(12345)
\end_layout

\begin_layout Plain Layout

op <- par() 
\end_layout

\begin_layout Plain Layout

pjmar <- c(5.1, 5.1, 1.5, 2.1) 
\end_layout

\begin_layout Plain Layout

#pjmar <- par("mar")
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=10)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=10)
\end_layout

\begin_layout Plain Layout

pdf.options(useDingbats = FALSE) ##suggestion to avoid bad symbols
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang canadian
\begin_inset Note Note
status open

\begin_layout Plain Layout

\lang canadian
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang canadian
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Title
rockchalk package 
\begin_inset Argument
status collapsed

\begin_layout Plain Layout
rockchalk
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul E.
 Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

<pauljohn@ku.edu>
\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Political Science
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Center for Research Methods and Data Analysis, University of Kansas
\begin_inset Argument
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Date

\size huge
2013
\size default

\begin_inset space \hspace{}
\length 3cm
\end_inset


\end_layout

\begin_layout TitleGraphic
\begin_inset Graphics
	filename importfigs/jayhawk.pdf
	lyxscale 10
	width 1.5cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pgfdeclareimage[height=0.5cm]{institution-logo}{importfigs/jayhawk.pdf}
\end_layout

\begin_layout Plain Layout


\backslash
logo{
\backslash
pgfuseimage{institution-logo}}
\end_layout

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Outline
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Thanks for Joining}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Thanks to Ray DiGiacomo, Jr & OC RUG for organizing 
\end_layout

\begin_layout Description
Downloads:
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://pj.freefaculty.org/guides
\end_layout

\end_inset

 {all my lectures on anything}
\end_layout

\begin_layout Standard
\begin_inset space \hspace{}
\length 1in
\end_inset


\begin_inset CommandInset href
LatexCommand href
name ".../Rcourse/rockchalk-2013"
target "http://pj.freefaculty.org/guides/Rcourse/rockchalk-2013"

\end_inset

 {this lecture, source code, LyX doc, etc}
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://pj.freefaculty.org/R
\end_layout

\end_inset

: Rtips, links to other R stuff
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Why Make a Package?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Avoid a riot after an influx of 40 MA-bound behavioral scientists into my
 regression class 
\end_layout

\begin_deeper
\begin_layout Itemize
Honestly, I'd rather teach R programming, but
\end_layout

\begin_layout Itemize
I can understand the view that statistics exists apart from R
\end_layout

\end_deeper
\begin_layout Itemize
Package has 
\begin_inset Quotes eld
\end_inset

convenience
\begin_inset Quotes erd
\end_inset

 functions for
\end_layout

\begin_deeper
\begin_layout Description
Me preparing lectures
\end_layout

\begin_layout Description
Them doing papers (with nice looking graphs!)
\end_layout

\end_deeper
\begin_layout Itemize
I had distributed functions before, but never made a package
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What do you expect in rockchalk?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Functions for difficult/tedious/hard-to-teach chores
\end_layout

\begin_layout Itemize
Verbose documentation, (too) many examples
\end_layout

\begin_layout Itemize
vignettes 
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
\begin_inset Quotes eld
\end_inset

rockchalk
\begin_inset Quotes erd
\end_inset


\emph default
: Dicussion & demonstration of package
\end_layout

\begin_layout Itemize

\emph on
\begin_inset Quotes eld
\end_inset

Rchaeology
\begin_inset Quotes erd
\end_inset


\emph default
: Deep insights into R programming I accumulate while working on the package
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset


\emph on
Rstyle
\begin_inset Quotes erd
\end_inset


\emph default
: The style manual I wish R Core would adopt
\end_layout

\end_deeper
\begin_layout Itemize
Hidden value added: the examples folder in the package install directory
 includes some special educational R examples (look for 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
noWords-001.R
\end_layout

\end_inset

 and 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
centeredRegression.R
\end_layout

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Where is the hard work in version 1.8?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
predictOMatic()
\end_layout

\end_inset

.
 
\emph on
Flexible 
\emph default
way to demonstrate marginal effects of predictors.
 Goal: make it easy to understand regression as a translation of inputs
 into predicted values (and uncertainty)
\end_layout

\begin_layout Itemize
Scan fitted regressions, create newdata objects with possible predictor
 values (
\begin_inset Quotes eld
\end_inset

divider
\begin_inset Quotes erd
\end_inset

 algorithms to create focal values for consideration).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Data
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Make a Presentable Table Describing The Data}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Assignment: create a summary table for your research article
\end_layout

\begin_layout Itemize
R's 
\begin_inset Flex Rinput
status collapsed

\begin_layout Plain Layout
summary
\end_layout

\end_inset

() 
\end_layout

\begin_deeper
\begin_layout Itemize
does not include diversity estimates
\end_layout

\begin_layout Itemize
does not separate numeric from factor variables in the report
\end_layout

\begin_layout Itemize
does not provide output in a usable format 
\end_layout

\end_deeper
\begin_layout Itemize
rockchalk 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
summarize()
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
does
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=F>>=
\end_layout

\begin_layout Plain Layout

library(rockchalk)
\end_layout

\begin_layout Plain Layout

dat <- data.frame(income = rnorm(1000, m=10000, sd=20000), 
\end_layout

\begin_layout Plain Layout

educ = rpois(1000, lambda = 10),
\end_layout

\begin_layout Plain Layout

age = rpois(1000, lambda = 22),
\end_layout

\begin_layout Plain Layout

religion = factor(sample(c("cath","roman","prot","jewish","muslem","other"),
 1000, replace = TRUE, prob = c(.20, .10, .20, .10, .10, .30))),
\end_layout

\begin_layout Plain Layout

gender = factor(sample(c("male","female"), 1000, replace = TRUE)))
\end_layout

\begin_layout Plain Layout

dat$educ[sample(1:1000, 42, replace = TRUE)] <- NA
\end_layout

\begin_layout Plain Layout

dat$income[sample(1:1000, 82, replace = TRUE)] <- NA
\end_layout

\begin_layout Plain Layout

dat$religion[sample(1:1000, 77, replace = TRUE)] <- NA
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Example}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
tiny}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<desc10>>=
\end_layout

\begin_layout Plain Layout

(datsum <- summary(dat))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Can you wrestle that into a paper? I can't! It has text and values combined
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
tiny}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<desc11>>=
\end_layout

\begin_layout Plain Layout

datsum[ ,1]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Default output from summarize separates numerics & factors, alphabetizes
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<desc20>>=
\end_layout

\begin_layout Plain Layout

datsum2 <- summarize(dat)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The result object datsum2 is a list with 2 parts, a numeric matrix part
 and a factor variable display.
\end_layout

\end_deeper
\begin_layout Itemize
The numerics are a matrix, easy to take rows or columns to put into a paper
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

datsum2$numerics
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The factors are a separate list
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

datsum2$factors
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Indicators of central tendency and dispersion are included in both displays
\end_layout

\begin_layout Itemize
Try 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
summarizeNumerics()
\end_layout

\end_inset

 and 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
summarizeFactors()
\end_layout

\end_inset

 to get just one or the other.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Sidenote: recoding a factor}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Note the religion variable has levels 
\begin_inset Quotes eld
\end_inset

cath
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

roman
\begin_inset Quotes erd
\end_inset

, which was a data entry error.
 Catholic and Roman Catholic represent the same idea
\end_layout

\begin_layout Itemize
Did you ever try to write R code to fix that (without killing yourself)?
\end_layout

\begin_layout Itemize
Try 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
rockchalk::combineLevels()
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

dat$religion2 <- combineLevels(dat$religion, c("cath", "roman"), "cath")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=T>>=
\end_layout

\begin_layout Plain Layout

table(dat$religion2, dat$religion, dnn = c("religion2", "religion"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Outreg
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Need a Nice Looking Regression Table?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Each student should not invent a unique report format for regressions.
\end_layout

\begin_layout Itemize
MS Word users especially tempted to 
\begin_inset Quotes eld
\end_inset

finger paint
\begin_inset Quotes erd
\end_inset

 with fonts and formats.
\end_layout

\begin_layout Itemize
Solution: provide usable LaTeX tables (added benefit: bait to get them to
 use LaTeX)
\end_layout

\begin_layout Itemize
rockchalk-1.8 provides HTML backend as well (compromise with reality)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{For many years, outreg was a function in search of a package}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Dave Armstrong (then at U.
 Maryland student) gave me the outreg idea 10 years ago
\end_layout

\begin_layout Itemize
I wrote up a function that more-or-less worked, distributed it, revised
 it as my R programming skills improved 
\end_layout

\begin_layout Itemize
I didn't know there was "outreg" module for Stata
\begin_inset Formula $\ldots$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{outreg example usage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I fit a regression using a subset of the American National Election Study
 2004 (ICPSR), which I called 
\begin_inset Quotes eld
\end_inset

mydta1
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=F>>=
\end_layout

\begin_layout Plain Layout

mydta1 <- readRDS("/home/pauljohn/SVN/SVN-guides/Rcourse/rockchalk-2013/04245.rds
")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<anes40, eval=F, include=F, echo=T>>=
\end_layout

\begin_layout Plain Layout

mod1age <- lm(th.bush.kerry ~ V043250, data = mydta1)
\end_layout

\begin_layout Plain Layout

outreg(mod1age, tight = FALSE, modelLabels = c("Age as Predictor"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-anes40.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Produces this LaTeX Markup}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<anes41, echo=F, eval=T, include=F>>=
\end_layout

\begin_layout Plain Layout

<<anes40>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout


\backslash
input{plots/t-anes41.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Which LaTeX Renders as}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<anes45,echo=F,include=F,results=tex>>= 
\end_layout

\begin_layout Plain Layout

<<anes40>> 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-anes45.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
My terminology:
\end_layout

\begin_layout Standard
tight = FALSE 
\begin_inset Formula $\Rightarrow$
\end_inset

 
\begin_inset Formula $\hat{\beta}$
\end_inset

 and 
\begin_inset Formula $std.err(\hat{\beta})$
\end_inset

 are side by side
\end_layout

\begin_layout Standard
tight = TRUE 
\begin_inset Formula $\Rightarrow$
\end_inset

 
\begin_inset Formula $\hat{\beta}$
\end_inset

 and 
\begin_inset Formula $std.err(\hat{\beta})$
\end_inset

 are vertically aligned.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Add Gender}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<anes50, eval=F, include=F, echo=T, results=tex>>=
\end_layout

\begin_layout Plain Layout

## Run a new regression
\end_layout

\begin_layout Plain Layout

mod2age <- lm(th.bush.kerry ~ V043250 + V041109A, data = mydta1)
\end_layout

\begin_layout Plain Layout

## Put 2 regressions in same table
\end_layout

\begin_layout Plain Layout

outreg(list(mod1age, mod2age), tight = TRUE, modelLabels = c("Age Only","Age
 With Gender"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-anes50.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
NB: tight = TRUE
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Output To LaTEX}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<anes51,echo=F,include=F,results=tex>>= 
\end_layout

\begin_layout Plain Layout

<<anes50>> 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout


\backslash
input{plots/t-anes51.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Alternative way to specify model labels (rockchalk 1.8)}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<anes60, eval=F, include=F, echo=T,results=tex>>=
\end_layout

\begin_layout Plain Layout

outreg(list("Age Only" = mod1age, "Age With Gender" = mod2age), tight =
 FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{plots/t-anes60.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Perhaps more coherent usage: keep labels with models in a list
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Output To LaTEX}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<anes61,echo=F,include=T,results=tex>>= 
\end_layout

\begin_layout Plain Layout

<<anes60>> 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Beautify Variable Labels}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<anes70, eval=F, include=T, echo=T,results=tex>>=
\end_layout

\begin_layout Plain Layout

 outreg(list("Age Only" = mod1age, "Age With Gender" = mod2age), tight =
 TRUE, varLabels = list("V043250" = "Age", "V041109A" = "Gender")) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Quotation marks optional before equal sign in list; this works too
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<anes71, eval=F, include=T, echo=T,results=tex>>=
\end_layout

\begin_layout Plain Layout

 outreg(list("Age Only" = mod1age, "Age With Gender" = mod2age), tight =
 FALSE, varLabels = list(V043250 = "Age", V041109A = "Gender")) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Not necessary to provide new labels for all variables
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{My Beautiful Table with Lovely Variable Labels}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<anes72,echo=F,include=T,results=tex>>= 
\end_layout

\begin_layout Plain Layout

<<anes71>> 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Quick R style comment: My opinion}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Students often have urge to rename variables in the analysis itself, to
 create new dat$gender and dat$age
\end_layout

\begin_layout Itemize
I urge them to resist the temptation 
\end_layout

\begin_layout Itemize
In a team setting, everybody has same input variables with names like V234234,
 cooperation is frustrated when everybody renames everything
\end_layout

\begin_layout Itemize
However, in output, no reader wants to see V234234 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What is this Good For?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Good-enough tables in lectures & term papers
\end_layout

\begin_layout Itemize
Possible to 
\begin_inset Quotes eld
\end_inset

script
\begin_inset Quotes erd
\end_inset

 together a lot of separate estimates for a lot of different datasets
\end_layout

\begin_layout Itemize
Especially when the students start to think they know everything, show 
\emph on
I'm still smarter than you
\emph default
: 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://pj.freefaculty.org/R/gloating/test2
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://pj.freefaculty.org/guides/stat/Regression/Multicollinearity/Multicollineari
ty-1-lecture.pdf
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Recent updates to outreg}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I get more emails about 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
outreg()
\end_layout

\end_inset

 than any of the other functions.
 People want more and more features.
\end_layout

\begin_layout Itemize
Compromises so far allow customization of:
\end_layout

\begin_deeper
\begin_layout Itemize
model 
\begin_inset Quotes eld
\end_inset

header
\begin_inset Quotes erd
\end_inset

 labels and variable names
\end_layout

\begin_layout Itemize
the selection of 
\begin_inset Quotes eld
\end_inset

goodness of fit
\begin_inset Quotes erd
\end_inset

 indicators in the bottom of the table
\end_layout

\begin_layout Itemize
choice of alpha levels (Previously, I first refused p-values, then insisted
 only 0.05).
\end_layout

\begin_layout Itemize
HTML output (next slide)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{outreg can create html file output}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This is a brand new feature in outreg 1.8 (June, 2013)
\end_layout

\begin_deeper
\begin_layout Itemize
outreg2HTML() receives outreg results and converts into Web markup.
\end_layout

\begin_layout Itemize
Wrestle that into Word however you like.
 
\end_layout

\begin_deeper
\begin_layout Itemize
open the html document File -> Open
\end_layout

\begin_layout Itemize
view the html document in a web browser, copy & paste manually into word
 (use paste Special HTML).
\end_layout

\end_deeper
\begin_layout Itemize
Not as nice looking or as automatic as LaTeX, but I may try harder in future
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{HTML output}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=T, eval=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

or1 <- outreg(list(mod1age, mod2age), tight = TRUE, modelLabels = c("Age
 Only", "Age With Gender"))
\end_layout

\begin_layout Plain Layout

outreg2HTML(or1, file = "or1-test.html")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
That creates a file, 
\begin_inset Quotes eld
\end_inset

or1-test.html
\begin_inset Quotes erd
\end_inset

.
 See if your web browser can open it.
 See if Word can open that.
 I uploaded a copy you can inspect: 
\begin_inset CommandInset href
LatexCommand href
target "http://pj.freefaculty.org/R/or1-test.html"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Plots
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{I want it to be easy to make scatterplots with Predicted Values}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/Hastie-ESL-2d-1.png
	width 9cm

\end_inset


\end_layout

\begin_layout Standard
T.
 Hastie, R.
 Tibshirani, J.
 Friedman, 
\emph on
Elements of Statistical Learning: Data Mining, Inference, And Prediction,
 2ed
\emph default
 (Springer, 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Especially in 3D}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/Hastie-ESL-3d-02.png
	width 6cm

\end_inset


\begin_inset Graphics
	filename importfigs/Hastie-ESL-3d.png
	width 7cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{abline is an R staple}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mod05,include=F>>=
\end_layout

\begin_layout Plain Layout

set.seed(234234)
\end_layout

\begin_layout Plain Layout

x1 <- 0.5 * rpois(100, lambda = 7)
\end_layout

\begin_layout Plain Layout

x2 <- rnorm(100, m = 50, sd = 2)
\end_layout

\begin_layout Plain Layout

x3 <- sample(c(0,1), 100, replace = TRUE)
\end_layout

\begin_layout Plain Layout

y <- 2*x1 + 11.45*x2 + 2.8*x1*(x2-45) + 0.3*x1*x3 + rnorm(100, sd = 10)
\end_layout

\begin_layout Plain Layout

y2 <- 2*x1 + 0.15*x2 + 1*x1*x3 + rnorm(100, sd = 10)
\end_layout

\begin_layout Plain Layout

x3 <- factor(x3, labels=c("left", "right"))
\end_layout

\begin_layout Plain Layout

dat <- data.frame(x1, x2, x3, y, y2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mod10,fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

mod1 <- lm(y ~ x1, data = dat)
\end_layout

\begin_layout Plain Layout

plot(y ~ x1, data = dat)
\end_layout

\begin_layout Plain Layout

abline(mod1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Everybody has done this.
 (Right?)
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

<<mod10>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{abline}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{plots/t-mod10}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{I'd rather look at this plot}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ps1, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

ps1 <- plotSlopes(mod1, plotx = "x1", interval = "confidence")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

<<ps1>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=11cm]{plots/t-ps1}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{abline's fatal flaws}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Suppose the regression model is
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

mod4 <- lm(y ~ x1 + x2 + x3, data = dat)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

mod2 <- lm(y ~ log(x1), data = dat)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

mod2 <- lm(y ~ x1*x2, data = dat)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

mod3 <- glm(y ~ x1, data = dat, family = "binomial")
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Common answer: abline is an epic fail.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{I have taught this "'easy' 3 step procedure" many times}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Step
\begin_inset space ~
\end_inset

1.
 Create a 
\begin_inset Quotes eld
\end_inset

newdata
\begin_inset Quotes erd
\end_inset

 data frame that has values of the x's for which we want to calculate prediction
s.
\end_layout

\begin_layout Description
Step
\begin_inset space ~
\end_inset

2.
 Use that newdata object (say, ndat) with the regression model's predict
 method, with syntax like
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

p1 <- predict(mod1, newdata = ndat)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
or, if confidence intervals are desired,
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

p2 <- predict(mod1, newdata = ndat, interval = "confidence")
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Frustratingly, p1 and p2 are returned as different object types
\end_layout

\end_deeper
\begin_layout Description
Step
\begin_inset space ~
\end_inset

3.
 Wrestle those predicted values into a plot
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{A sophisticated R user should learn to do that}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I've taught that (look for notes in 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://pj.freefaculty.org/R/WorkingExamples
\end_layout

\end_inset

), but it is too difficult
\end_layout

\begin_layout Itemize
I needed to create plots and calculate correlations as described in 
\emph on
Applied Multiple Regression
\emph default
, by Cohen, Cohen, West, and Aiken, (Routledge, 2002).
 Students needed lots of R help, some calculations not trivial.
\end_layout

\begin_layout Itemize
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
plotSlopes()
\end_layout

\end_inset

 is the 
\begin_inset Quotes eld
\end_inset

simple-slope
\begin_inset Quotes erd
\end_inset

 routine ala CCWA, it was improvised in an emergency, 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
plotCurves()
\end_layout

\end_inset

 & 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
plotPlane()
\end_layout

\end_inset

 used same terminology for consistency.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Syntax}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
User fits 
\begin_inset Flex Rinput
status collapsed

\begin_layout Plain Layout
m1
\end_layout

\end_inset

, a multiple regression
\end_layout

\begin_layout Itemize
Then gives that to 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
plotSlopes()
\end_layout

\end_inset

, with arguments
\end_layout

\begin_deeper
\begin_layout Description
plotx: The name of the variable on the horizontal axis
\end_layout

\begin_layout Description
modx: The name of a 
\begin_inset Quotes eld
\end_inset

moderator
\begin_inset Quotes erd
\end_inset

 variable on which predicted values may depend.
\end_layout

\begin_layout Description
modxVals: Values of the moderator for which 
\begin_inset Quotes eld
\end_inset

simple slopes
\begin_inset Quotes erd
\end_inset

 are desired
\end_layout

\end_deeper
\begin_layout Itemize
Other arguments to will be passed through to 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
plot()
\end_layout

\end_inset

 and 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
predict()
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
See the rockchalk vignette.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Difference between plotSlopes and plotCurves}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
plotSlopes()
\end_layout

\end_inset

: for linear models
\end_layout

\begin_deeper
\begin_layout Itemize
Allows interactions (unlike 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
termplot()
\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize
Output object can be passed to rockchalk function 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
testSlopes()
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
plotCurves()
\end_layout

\end_inset

: for nonlinear models (
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
lm()
\end_layout

\end_inset

 or 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
glm()
\end_layout

\end_inset

).
 
\end_layout

\begin_deeper
\begin_layout Itemize
Complete drop-in replacement for 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
plotSlopes()
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Nonlinear formulae in the predictors (succeeds where termplot fails)
\end_layout

\begin_layout Itemize
Does not create object suitable for 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
testSlopes()
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{plotSlopes}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
plotSlopes(): calculate predicted value lines (w/confidence intervals),
 one for each value of another predictor (e.g., an 
\begin_inset Quotes eld
\end_inset

interaction
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

subgroups
\begin_inset Quotes erd
\end_inset

 of respondents)
\end_layout

\begin_layout Itemize
Suppose 
\begin_inset Formula $x1_{i}$
\end_inset

 is the predictor of interest, but we fit an interactive model to find out
 if the effect of 
\begin_inset Formula $x1_{i}$
\end_inset

 depends on 
\begin_inset Formula $x2_{i}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset Formula 
\[
y_{i}=\beta_{0}+\beta_{1}x1_{i}+\beta_{2}x2_{i}+\beta_{3}x1_{i}\cdot x2_{i}+e_{i}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Moderator variable: popular jargon with psychologists for 
\begin_inset Formula $x2_{i}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

simple-slope
\begin_inset Quotes erd
\end_inset

: For each value of 
\begin_inset Formula $x2_{i}$
\end_inset

, one can plot a predicted value 
\begin_inset Formula 
\[
\hat{y}_{i}=\hat{\beta}_{0}+(\hat{\beta}_{1}+\hat{\beta}_{3}x2_{i})x1_{i}
\]

\end_inset


\end_layout

\begin_layout Itemize
R makes this very convenient because a formula 
\begin_inset Flex Rinput
status collapsed

\begin_layout Plain Layout
x1*x2
\end_layout

\end_inset

 is automatically converted to 
\begin_inset Flex Rinput
status collapsed

\begin_layout Plain Layout
x1 + x2 + x1:x2
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Categorical modx
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Example: moderator is an R factor}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ps10, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

mod1 <- lm(y2 ~ x1*x3, data = dat)
\end_layout

\begin_layout Plain Layout

ps1 <- plotSlopes(mod1, plotx = "x1", modx = "x3")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
x3 is a predictor with values 
\begin_inset Quotes eld
\end_inset

left
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

right
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
If there are more predictors, they will be set to their central values (mean
 or mode) for calculation of predicted values
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

<<ps10>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The estimated regression is}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ps10b,echo=F,results=tex>>=
\end_layout

\begin_layout Plain Layout

outreg(list("Example Interaction" = mod1), tight = FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{2 lines, one for each value of modx}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=12cm]{plots/t-ps10}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Add confidence interval}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ps20,fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

ps2 <- plotSlopes(mod1, plotx = "x1", modx = "x3", interval = "confidence")
 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

<<ps20>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Add confidence interval}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=12cm]{plots/t-ps20}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Plot a particular group}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ps30a,fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

ps3a <- plotSlopes(mod1, plotx = "x1", modx = "x3", modxVals = c("left"),
 interval = "confidence")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

<<ps30a>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Plot of values for "left" group}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=12cm]{plots/t-ps30a}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Plot of values for "right" group}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ps30b,fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

ps3b <- plotSlopes(mod1, plotx = "x1", modx = "x3", modxVals = c("right"),
 interval = "confidence")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

<<ps30b>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Note my hard work to keep colors consistent}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=12cm]{plots/t-ps30b}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Numeric moderator
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What if the modx variable is numeric?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
When modx is numeric, then particular values need to be chosen for plotting
\end_layout

\begin_layout Itemize
Originally, I thought users would explicitly specify values, modxVals
\end_layout

\begin_layout Itemize
Have received many user requests, rockchalk 1.8 offers a variety of selection
 methods.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What if the modx variable is numeric?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
psychologists generally prefer 
\begin_inset Formula $mean-std.dev.,$
\end_inset

 
\begin_inset Formula $mean$
\end_inset

, 
\begin_inset Formula $mean+std.dev.$
\end_inset

 (or more standard deviations)
\end_layout

\begin_layout Itemize
other fields prefer quantiles, such as the 25%, 50% and 75%
\end_layout

\begin_layout Itemize
User selects either particular values or a 
\begin_inset Quotes eld
\end_inset

divider algorithm
\begin_inset Quotes erd
\end_inset

 to get this done
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Defaults}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ps50,fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

mod2 <- lm(y ~ x1*x2, data = dat) 
\end_layout

\begin_layout Plain Layout

ps5 <- plotSlopes(mod2, plotx = "x1", modx = "x2")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

<<ps50>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The default will select the 3 middle quartiles
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{plotSlopes with numeric modx}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=12cm]{plots/t-ps50}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Add confidence intervals}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ps60,fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

ps5 <- plotSlopes(mod2, plotx = "x1", modx = "x2", interval = "confidence")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

<<ps60>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{plotSlopes with confidence intervals}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=12cm]{plots/t-ps60}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Change the algorithm to chose modx values}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ps70,fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

ps7 <- plotSlopes(mod2, plotx = "x1", modx = "x2", modxVals = "std.dev.",
 interval = "confidence")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

<<ps70>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{std.dev, +/-}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=12cm]{plots/t-ps70}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Want a lot of lines? n = 5}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ps80,fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

ps8 <- plotSlopes(mod2, plotx = "x1", modx = "x2", modxVals = "std.dev.",
 n = 5, interval = "confidence")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

<<ps80>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{5 lines}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=12cm]{plots/t-ps80}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Conclusion about plotSlopes}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If you don't want a plot, but rather just the newdata matrix and the predicted
 values, please look at newdata() and predictOMatic().
\end_layout

\begin_layout Itemize
plotCurves() can do all of that stuff, and it works with nonlinear models
 and glm
\end_layout

\begin_layout Itemize
Have studied extension to other regression packages.
 
\end_layout

\begin_deeper
\begin_layout Itemize
package writers are inconsistent, don't provide predict methods.
 
\end_layout

\begin_layout Itemize
Conf.
 Intervals for glm objects controversial
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Analyzing Interaction effects}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Selway & Templeman (2012) 
\begin_inset Quotes eld
\end_inset

Myth of Consocionalism?
\begin_inset Quotes erd
\end_inset

 
\emph on
Comparative Political Studies
\end_layout

\begin_layout Standard
Model has PR*EthnicFractionalization
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/Selway-Tempelman-01.png
	width 9cm

\end_inset


\end_layout

\begin_layout Standard
The 
\begin_inset Quotes eld
\end_inset

marginal effect
\begin_inset Quotes erd
\end_inset

 is the slope (
\begin_inset Formula $\hat{\beta}_{PR}+\hat{\beta}_{EF\cdot PR}EF_{i})PR_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{testSlopes}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
plotSlopes()
\end_layout

\end_inset

creates an output object that allows a 'simple-slopes' analysis of statistical
 significance.
\end_layout

\begin_layout Itemize
If modx is 
\end_layout

\begin_deeper
\begin_layout Description
categorical: simply calculates the slope of the relationship and tests whether
 it is different from 0
\end_layout

\begin_layout Description
numeric: calculates a Johnson-Neyman analysis: for which values of modx
 would the slope of plotx be different from 0?
\end_layout

\begin_layout Itemize
J-N: if the fitted model is 
\begin_inset Formula $\hat{y}_{i}=\hat{\beta}_{0}+(\hat{\beta}_{1}+\hat{\beta}_{3}x2_{i})x1_{i}$
\end_inset

, for which values of 
\begin_inset Formula $x2_{i}$
\end_inset

 is 
\begin_inset Formula $(\hat{\beta}_{1}+\hat{\beta}_{3}x2_{i})$
\end_inset

 statistically significantly different from 0?
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{testSlopes}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ts10,include=T>>=
\end_layout

\begin_layout Plain Layout

ps5ts <- testSlopes(ps5)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{A method for testSlopes objects (plot.testSlopes)}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ts20,fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

plot(ps5ts)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

<<ts20>>
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
rockchalk is an S3 type R package.
\end_layout

\begin_layout Standard
If you are uncertain about the significance of S3 and the term 
\begin_inset Quotes eld
\end_inset

method
\begin_inset Quotes erd
\end_inset

, I strongly recommend you get a copy of Friedrich Leisch, 
\begin_inset Quotes eld
\end_inset

Creating R Packages: A Tutorial
\begin_inset Quotes erd
\end_inset

 (available in CRAN contributed documentation) which has many excellent
 insights!
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{plot of a testSlopes object}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=12cm]{plots/t-ts20}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note: intended verbosity of labels & legend
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Free Lunch
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Mean-Center, Residual-Centered Regressions}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Start with 
\end_layout

\begin_deeper
\begin_layout Standard
lm (y ~ x1 * x2 + x3, data = dat)
\end_layout

\end_deeper
\begin_layout Itemize
which implies
\end_layout

\begin_deeper
\begin_layout Standard
lm (y ~ x1 + x2 + x1:x2 + x3, data = dat)
\end_layout

\end_deeper
\begin_layout Itemize
Should it matter if we replace x1 with
\end_layout

\begin_deeper
\begin_layout Itemize
mean centered values, x1c = (x1 - mean(x1)) by fitting
\end_layout

\begin_deeper
\begin_layout Standard
lm(y ~ x1c + x2 + x1c:x2 + x3, data = dat)
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Or if we replace x1:x2 by with the
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

residual centered
\begin_inset Quotes erd
\end_inset

 value of the interaction term, which is the residual from this regresision?
\end_layout

\begin_deeper
\begin_layout Standard
lm( (x1*x2) ~ x1 + x2, data = dat)
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Several authorities say those changes may be important}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Cohen, Cohen, Aichen & West (2002) strongly endorse mean-centering
\end_layout

\begin_layout Itemize
Little, T.
 D., Bovaird, J.
 A., & Widaman, K.
 F.
 (2006).
 On the Merits of Orthogonalizing Powered and Product Terms: Implications
 for Modeling Interactions Among Latent Variables.
 
\emph on
Structural Equation Modeling,
\emph default
 13(4), 497-519.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{3 ease of use functions in rockchalk}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
standardize()
\end_layout

\end_inset

 calculates centered & scaled values of all variables and re-fits the model.
\end_layout

\begin_layout Itemize
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
meanCenter()
\end_layout

\end_inset

 adjusts predictors by subtracting observed means
\end_layout

\begin_layout Itemize
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
residualCenter()
\end_layout

\end_inset

 calculates one variant of orthogonal regression
\end_layout

\begin_layout Itemize
rockchalk supplies 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
print()
\end_layout

\end_inset

, 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
predict()
\end_layout

\end_inset

 and 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
summary()
\end_layout

\end_inset

 methods for these functions
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Mean-Center}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Fit some big multiple regression
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

m1 <- lm(someDV ~ x1 + x2 + x3 * x4, data = dat)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Center only the interactive predictors 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

m1 <- lm(someDV ~ x1 + x2 + x3c*x4c, data = dat)
\end_layout

\begin_layout Plain Layout

m1mc <- meanCenter(m1)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
ends up fitting
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

lm(someDV ~ x1 + x2 + x3c + x4c + x3c:x4c, data = dat)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Mean-Center}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Center all predictors
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

m1mc2 <- meanCenter(m1, centerOnlyInteractors = FALSE)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
ends up fitting
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

lm(someDV ~ x1c + x2c + x3c + x4c + x3c:x4c, data = dat)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Center also the DV
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

m1mc3 <- meanCenter(m1, centerDV= TRUE, centerOnlyInteractors = FALSE)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
ends up fitting
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

lm(someDVc ~ x1c + x2c + x3c + x4c + x3c:x4c, data = dat)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Why this is fool's gold}
\end_layout

\end_inset


\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
Changing a predictor column from 
\begin_inset Formula $X_{i}$
\end_inset

 to 
\begin_inset Formula $X_{i}-5$
\end_inset

 cannot improve statistical precision.
 
\end_layout

\begin_layout Itemize
It simply re-positions the Y axis.
\end_layout

\begin_deeper
\begin_layout Itemize
Slope same, standard error of slope same
\end_layout

\begin_layout Itemize
Intercept is 
\begin_inset Quotes eld
\end_inset

bigger
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Predicted value at Y axis is more precise, due to hour-glass shape of CI
\end_layout

\end_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<mc10, fig=T, include=F, height = 4, width = 4>>=	
\end_layout

\begin_layout Plain Layout

dat$y5 <- dat$y + rnorm(length(dat$y), sd = 30)
\end_layout

\begin_layout Plain Layout

mod5 <- lm(y5 ~ x1, data = dat)
\end_layout

\begin_layout Plain Layout

plotSlopes(mod5, plotx = "x1", interval = "confidence", plotLegend = F,
 xlim = c(0, 1.05 * max(dat$x1)), axes = F)
\end_layout

\begin_layout Plain Layout

axis(1)
\end_layout

\begin_layout Plain Layout

axis(2, pos = 0)
\end_layout

\begin_layout Plain Layout

axis(2, pos = mean(dat$x1), labels = FALSE)
\end_layout

\begin_layout Plain Layout

arrows(0.3, 1.15*mean(dat$y5), 0.80 * mean(dat$x1), 1.2*mean(dat$y5), col =
 "red")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=6cm]{plots/t-mc10}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{I was not so sure about residual centering}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The residualCenter() function leaves the linear terms in the model unchanged,
 but re-constructs interactive variables, replacing 
\begin_inset Flex Rinput
status collapsed

\begin_layout Plain Layout
x3:x4
\end_layout

\end_inset

 with the residual from 
\begin_inset Flex Rinput
status collapsed

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
lm(x3*x4 ~ x3+x4)
\end_layout

\end_inset

, which I'm calling 
\begin_inset Quotes eld
\end_inset

x3.X.x4
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

m1rc <- lm(someDV ~ x1 + x2 + x3 + x4 + x5 + x6 + x5.X.x6, data = dat)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This is one way to create truly orthogonal columns.
 Before introduction of QR decomposition, it might have actually been a
 good way to do so
\end_layout

\begin_layout Itemize
Requires some serious fancy coding to make interactions like 
\begin_inset Flex Rinput
status collapsed

\begin_layout Plain Layout
x3*x4*x5
\end_layout

\end_inset

 work correctly (see also 
\begin_inset Flex Rfunction
status collapsed

\begin_layout Plain Layout
predict.mcreg()
\end_layout

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Alternatives seem better, but they are not actually different}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The predicted values are identical
\end_layout

\begin_layout Itemize
See the rockchalk vignette, which gives a full argument.
\end_layout

\begin_layout Itemize
In directory with this presentation, find the small example file 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
curve-example-1.R
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Other functions worth mentioning}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
mcDiagnose: splattering of multicollinearity diagnostics
\end_layout

\begin_layout Itemize
getDeltaRsquare, getPartialCor: partial and semi-partial correlations
\end_layout

\begin_layout Itemize
See the rockchalk vignette, which gives a full argument.
\end_layout

\begin_layout Itemize
In directory with this presentation, find the small example file 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
curve-example-1.R
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Guessing
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What makes package building easier?}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Rinput
status collapsed

\begin_layout Plain Layout
roxygen2
\end_layout

\end_inset

 (Hadley Wickham, Peter Danenberg, Manuel Eugster).
 
\end_layout

\begin_layout Description
Usual
\begin_inset space ~
\end_inset

R
\begin_inset space ~
\end_inset

development: one writes R files, and documentation files in a separate directory.
 Very inconvenient to keep documents in sync with R code.
\end_layout

\begin_layout Description
roxygen2
\begin_inset space ~
\end_inset

approach: put documentation in the R files, use functions to extract & format
 the documents.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Am I competing with "car", "rms", "memisc", "texreg", etc?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
No.
 
\begin_inset Quotes eld
\end_inset

car
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

rms
\begin_inset Quotes erd
\end_inset

 are established industry leading packages that support widely sold textbooks.
 Those authors are 
\begin_inset Quotes eld
\end_inset

up there
\begin_inset Quotes erd
\end_inset

, I'm 
\begin_inset Quotes eld
\end_inset

down here.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize
No.
 
\end_layout

\begin_deeper
\begin_layout Itemize
I'm filling in perceived gaps to create convenience
\end_layout

\end_deeper
\begin_layout Itemize
Yes.
 Perhaps I think their 
\end_layout

\begin_deeper
\begin_layout Itemize
jargon is difficult (tough for me 
\begin_inset Formula $\Longrightarrow$
\end_inset

impossible for students)
\end_layout

\begin_layout Itemize
their functions are clumsy, or 
\end_layout

\begin_layout Itemize
I think their source code is not clear
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
