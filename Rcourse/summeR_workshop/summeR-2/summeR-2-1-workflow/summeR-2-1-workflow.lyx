#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}
\usepackage{array}
\usepackage{longtable}
\usepackage{graphicx}
%\newcommand\makebeamertitle{\frame{\maketitle}}%
\renewcommand{\doiprefix}{doi:\kern-1pt}
\setlength{\bibsep}{10pt}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
%for bold upright roman in math for matrix algebra
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}

%%\input{theme/guidePreambleSweavel.tex} 
%%% From beamer slide:
\usepackage{Sweave}
%% 
%% This controls display of code chunks
\usepackage{ae,fancyvrb,relsize,listings}

\providecommand{\Sweavesize}{\normalsize}
\providecommand{\Rsize}{}
\renewcommand{\Rsize}{\normalsize}
\providecommand{\Routsize}{\scriptsize}

\providecommand{\Rcolor}{\color[rgb]{0.1, 0.1, 0.1}}
\providecommand{\Routcolor}{\color[rgb]{0.2, 0.2, 0.2}}
\providecommand{\Rcommentcolor}{\color[rgb]{0.101, 0.43, 0.432}}

\providecommand{\Rbackground}{\color[gray]{0.91}}
\providecommand{\Routbackground}{\color[gray]{0.935}}
% Can specify \color[gray]{1} for white background or just \color{white}

\lstdefinestyle{Rinput}{
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  basicstyle=\Rsize\Rcolor\ttfamily,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%,
  commentstyle=\Rcommentcolor\ttfamily,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1{==}{{=\,=}}2{--}{{-\,-}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},%
  backgroundcolor=\Rbackground,%
  numbers=left,%
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}%

% Other options of interest:
% frame=single,framerule=0.1pt,framesep=1pt,rulecolor=\color{blue},
% numbers=left,numberstyle=\tiny,stepnumber=1,numbersep=7pt,
% keywordstyle={\bf\Rcolor}

\lstdefinestyle{Routput}{fancyvrb=false,
  literate={~}{{$\sim$}}1{R^2}{{$R^{2}$}}2{^}{{$^{\scriptstyle\wedge}$}}1{R-squared}{{$R^{2}$}}2,%
  basicstyle=\Routcolor\Routsize\ttfamily,%
  backgroundcolor=\Routbackground,
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1 {==}{{=\,=}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},
  numbers=left,
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}

\renewenvironment{Schunk}{}{}
\renewenvironment{Sinput}{}{}
\let\Sinput\relax
\let\Scode\relax
\let\Soutput\relax
\lstnewenvironment{Sinput}{\lstset{style=Rinput}}{}
\lstnewenvironment{Scode}{\lstset{style=Rinput}}{}
\lstnewenvironment{Soutput}{\lstset{style=Routput}}{}
%%end paste in from guidePreambleSweavel.tex


\lstset{tabsize=2, breaklines=true, style=Rinput, breakatwhitespace=true}

\fvset{listparameters={\setlength{\topsep}{0em}}}

\usepackage{xcolor}
\definecolor{light-gray}{gray}{0.90}
\usepackage{realboxes}
\providecommand*{\code}[1]{\texttt{#1}}
\renewcommand{\code}[1]{%
\Colorbox{light-gray}{#1}%
}%
%% end of paste

\usepackage[natbibapa]{apacite}

\definecolor{darkblue}{HTML}{1e2277}

%would be in beamerthemekucrmda%
\mode<presentation>
\definecolor{kublue}{RGB}{0,81,186}
\usefonttheme{professionalfonts}
\useoutertheme{infolines}
\useinnertheme{rounded}
%disable rounded for alert and example boxes%
\setbeamertemplate{blocks}[default]
\usecolortheme{whale}
\usecolortheme{orchid}
\setbeamercolor{structure}{bg=kublue,fg=kublue!90!black}
%\setbeamercolor{structure}{fg=kublue}
\setbeamercolor{frametitle}{bg=kublue}
\setbeamercolor{section in toc}{fg=kublue!40!black}

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}
\beamertemplatenavigationsymbolsempty
%end of beamerthemekucrmda%

%If you want bigger margins, try this:
\setbeamersize{text margin left=05mm,text margin right=10mm} 
\hypersetup{colorlinks,allcolors=.,urlcolor=darkblue}
%Following seems to have no effect now
%\usepackage{handoutWithNotes}
%\pgfpagesuselayout{3 on 1 with notes}[letterpaper, border shrink=5mm]

\titlegraphic{\includegraphics[width=6cm]{theme/logo}}
\logo{\includegraphics[width=5mm]{theme/logomini}}
\end_preamble
\options aspectratio=1609
\use_default_options false
\begin_modules
logicalmkup
sweave
natbibapa
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style \use_bibtopic false
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch semboot
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\branch cfalvm
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%following is LyX shortcut 
\backslash
vb for bold upright math for matrices
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\vb}[1]{\bm{\mathrm{#1}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch R
inverted 0
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% tmpout directory must exist first
\end_layout

\begin_layout Plain Layout

<<tmpout, echo=FALSE, include=FALSE, results=hide>>=
\end_layout

\begin_layout Plain Layout

tdir <- "tmpout"
\end_layout

\begin_layout Plain Layout

if(!dir.exists(tdir)) dir.create(tdir, showWarnings=FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=tmpout/t,split=T,ae=F,height=4.5,width=7}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, include=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

opts.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=100, prompt = " ", continue = "  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE)
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

par.orig <- par(no.readonly = TRUE) 
\end_layout

\begin_layout Plain Layout

pjmar <- c(4.1, 4.1, 1.5, 2.1)
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12, xpd=F)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

if(!file.exists("theme")) file.symlink("../../../../template/theme", "theme")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
Workflow 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
workflow
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul E.
 Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Political Science
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Center for Research Methods and Data Analysis, University of Kansas
\begin_inset Argument 1
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Date
2018
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Outline}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Replication is a Priority}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In CRDMA, we need to replicate projects
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Across time: a worker can exactly reproduce something
\end_layout

\begin_layout Itemize
Across people: another person can exactly reproduce something
\end_layout

\end_deeper
\begin_layout Itemize
The General Failure of Research Reproducibility is a high-priority topic
 at the current time.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Center for Open Science 
\begin_inset Quotes eld
\end_inset

Reproducibility crisis
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Many possible causes, today we are focused on poor data management and non-repli
cable calculations.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Avoid non-replicable point-and-click methods}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Friends don't let Friends use Microsoft Excel
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_deeper
\begin_layout Itemize
J.D.
 Cryer: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.amstat.org/sections/srms/proceedings/y2001/proceed/00470.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Excel's Checkered Statistical Past
\begin_inset Quotes erd
\end_inset

 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.statisticalengineering.com/Weibull/excel.html
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[plain]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/Should_You_Use_Excel_for_Statistics.png
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What Excel is Not Good For: Analysis}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Paul Krugman, April 18, 2013, 
\begin_inset Quotes eld
\end_inset

The Excel Depression
\begin_inset Quotes erd
\end_inset

 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.nytimes.com/2013/04/19/opinion/krugman-the-excel-depression.html
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Mike Konczal, April 16, 2013, 
\begin_inset Quotes eld
\end_inset

Researchers Finally Replicated Reinhart-Rogoff, and There are Serious Problems
\begin_inset Quotes erd
\end_inset

, 
\begin_inset CommandInset href
LatexCommand href
name "The Roosevelt Institute"
target "http://rooseveltinstitute.org/researchers-finally-replicated-reinhart-rogoff-and-there-are-serious-problems"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "“Reinhart, Rogoff, and the Excel Error That Changed History”"
target "http://www.bloomberg.com/news/articles/2013-04-18/faq-reinhart-rogoff-and-the-excel-error-that-changed-history"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
These concern
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Reinhart, Carmen and Rogoff, Kenneth (2010) 
\begin_inset Quotes eld
\end_inset

Growth in a time of debt
\begin_inset Quotes erd
\end_inset

, 
\begin_inset CommandInset href
LatexCommand href
name "NBER Working Paper Series #15639"
target "http://www.nber.org/papers/w15639.pdf"
literal "false"

\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Prepare R Scripts
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Write out everything}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The R 
\begin_inset CommandInset citation
LatexCommand citep
key "RCore"
literal "true"

\end_inset

 console is a place to 'doodle', find out what works.
\end_layout

\begin_layout Itemize
All calculations, from top-to-bottom, should be saved in a script file.
\end_layout

\begin_layout Itemize
Ideally, that would be able to repeat everything
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
data import
\end_layout

\begin_layout Itemize
recode
\end_layout

\begin_layout Itemize
analyze
\end_layout

\begin_layout Itemize
create figures 
\end_layout

\begin_layout Itemize
and tables.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{You need an editor that won't drive you crazy}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Mac, Linux, & Windows {Emacs, Rstudio}
\end_layout

\begin_layout Itemize
Windows only {Notepad++ with NPPTOR}
\end_layout

\begin_layout Itemize
Mac only {R.app}
\end_layout

\begin_layout Itemize
The R FAQ recommends Emacs, I've always respected that judgment
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
My Emacs Notes: 
\begin_inset Quotes eld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "Emacs has no learning curve"
target "http://pj.freefaculty.org/guides/Rcourse/emacs-ess/emacs-ess.pdf"
literal "false"

\end_inset

.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Can't deny that beginners do better with RStudio
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
smiley{}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
can't understand why non-beginners keep using it
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frownie{}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Write Code in an R file}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The same things you would have typed in a terminal can be typed into a file
\end_layout

\begin_layout Itemize
An R-aware editor has a 
\begin_inset Quotes eld
\end_inset

send-this-line
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

send-this-region
\begin_inset Quotes erd
\end_inset

 shortcut key.
\end_layout

\begin_layout Itemize
Formatting: Editor should help you respect indentation and spaces.
 See my essay: 
\begin_inset CommandInset href
LatexCommand href
name "Rstyle"
target "http://pj.freefaculty.org/R/Rstyle.pdf"
literal "false"

\end_inset

 a vignette in rockchalk
\end_layout

\begin_layout Itemize
Use { } to separate nested sections of commands.
\end_layout

\begin_layout Itemize
# is the comment symbol.
 It is customary in the Emacs-using community to use two ## to represent
 a comment that is to be intended at the current level.
\end_layout

\begin_layout Itemize
Examples: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://pj.freefaculty.org/R/WorkingExamples
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Standard Workflow
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Stages in (Almost All) Projects}
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsCenterAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Enumerate
Download 
\begin_inset Quotes eld
\end_inset

raw
\begin_inset Quotes erd
\end_inset

 data
\end_layout

\begin_layout Enumerate
Import data
\end_layout

\begin_layout Enumerate
Inspect data (descriptive and graphic)
\end_layout

\begin_layout Enumerate
Recode & Reorganize data
\end_layout

\begin_layout Enumerate
Analyze data
\end_layout

\begin_layout Enumerate
Generate Tables and Plots
\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
In a perfect world, these are all
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

automated
\begin_inset Quotes erd
\end_inset

 and 
\end_layout

\begin_layout Itemize
more-or-less easily repeated.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Project Sub-folders
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Project Folders}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Subdirectories in a CRMDA Project folder
\end_layout

\begin_layout Description
data: Data in 
\begin_inset Quotes eld
\end_inset

fresh
\begin_inset Quotes erd
\end_inset

 
\begin_inset Quotes eld
\end_inset

pristine
\begin_inset Quotes erd
\end_inset

 
\begin_inset Quotes eld
\end_inset

unaltered state
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Description
R: R files here
\end_layout

\begin_layout Description
workingdata: 
\begin_inset Quotes eld
\end_inset

Recoded
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Cleaned
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Subsetted
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Description
output: Graphs and tables
\end_layout

\begin_layout Description
lit: reading material
\end_layout

\begin_layout Description
trash: don't use the system-wide recycle bin
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Relative Paths}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Suppose we are in R folder.
\end_layout

\begin_layout Itemize
Read data from 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
../data
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Write/read working data from 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
../workingdata
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Write output into 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
../output
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{kutils:initProject will automate}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

library(kutils)
\end_layout

\begin_layout Plain Layout

## Creates directories in current working directory
\end_layout

\begin_layout Plain Layout

initProject()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I'll test in the working directory 
\begin_inset Quotes eld
\end_inset

/tmp/practice
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "style=Routput"
inline false
status open

\begin_layout Plain Layout

Creating: data
\end_layout

\begin_layout Plain Layout

Creating: workingdata
\end_layout

\begin_layout Plain Layout

Creating: output
\end_layout

\begin_layout Plain Layout

Creating: tmp
\end_layout

\begin_layout Plain Layout

Creating: lit
\end_layout

\begin_layout Plain Layout

Creating: writeup
\end_layout

\begin_layout Plain Layout

Creating: R
\end_layout

\begin_layout Plain Layout

Initialized empty shared Git repository in /tmp/practice/.git/
\end_layout

\begin_layout Plain Layout

[master (root-commit) 5d2504b] Initialized project in /tmp/practice
\end_layout

\begin_layout Plain Layout

 2 files changed, 5 insertions(+)  create mode 100644 ChangeLog
\end_layout

\begin_layout Plain Layout

 create mode 100644 README.md
\end_layout

\begin_layout Plain Layout

Please consider creating a remote repository to which this repo should be
 linked
\end_layout

\begin_layout Plain Layout

[1] "/tmp/practice"
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{TRY THIS}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Test this out by temporarily using the R temporary directory.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

library(kutils)
\end_layout

\begin_layout Plain Layout

owd <- getwd()
\end_layout

\begin_layout Plain Layout

tdir <- tempdir()
\end_layout

\begin_layout Plain Layout

setwd(tdir)
\end_layout

\begin_layout Plain Layout

initProject()
\end_layout

\begin_layout Plain Layout

list.files()
\end_layout

\begin_layout Plain Layout

# go back to your original directory
\end_layout

\begin_layout Plain Layout

setwd(owd)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Step 1.
 Download}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Could retrieve files in a web browser.
 
\end_layout

\begin_layout Itemize
R has functions for downloading files.
 
\end_layout

\begin_layout Itemize
My R code is in the R subdirectory.
 Use 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
dir.create()
\end_layout

\end_inset

 to create a folder 
\begin_inset Quotes eld
\end_inset

../data
\begin_inset Quotes erd
\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

if(!file.exists("../data")) dir.create("../data", showWarnings = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Confession: the first thing a programmer will say is 
\begin_inset Quotes eld
\end_inset

don't type strings into code that way
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

ddir <- "../data"
\end_layout

\begin_layout Plain Layout

if(!file.exists(ddir)) dir.create(ddir, showWarnings = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
R's 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
download.file()
\end_layout

\end_inset

 function can retrieve text files without trouble
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

fn <- "ortann.csv"
\end_layout

\begin_layout Plain Layout

URL <- paste0("http://pj.freefaculty.org/guides/", 
\end_layout

\begin_layout Plain Layout

                "stat/DataSets/OregonTemps/", fn)
\end_layout

\begin_layout Plain Layout

download.file(URL, destfile = file.path(ddir, "oregon.csv"))
\end_layout

\begin_layout Plain Layout

list.files(ddir)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Step 2-5.
 Import, Analyze, Reconsider}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
We will go through this in detail in the following sessions
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Step 6.
 Output}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Can export graphics to devices of many types (pdf, png, etc)
\end_layout

\begin_layout Itemize
Can export ready-for-production tables of many types
\end_layout

\begin_layout Itemize
Documents: Don't 
\begin_inset Quotes eld
\end_inset

embed
\begin_inset Quotes erd
\end_inset

! Rather 
\begin_inset Quotes eld
\end_inset

link to
\begin_inset Quotes erd
\end_inset

 tables and graphs (so document does not need copy/paste editing to update
 figures and tables).
\end_layout

\begin_layout Itemize
Key idea: if need arises to correct, add, or remove data, possible to re-produce
 tables & graphs instantly
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
On the Radar
\end_layout

\begin_layout Subsection
Version Management
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Version Management}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Use a Project Management framework.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Register and Track project files over time
\end_layout

\begin_layout Itemize
Accumulate a comprehensive file history
\end_layout

\end_deeper
\begin_layout Itemize
Avoid the 
\begin_inset Quotes eld
\end_inset

how did I get that number?
\begin_inset Quotes erd
\end_inset

 problem!
\end_layout

\begin_layout Itemize
Synchronize one computer's copy with a central server
\end_layout

\begin_layout Itemize
Integrate team of workers
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Why Version Management?}
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/phd101212s.png
	width 5cm

\end_inset


\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
Git is one of the most popular programs for version management.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
We wrote a long(ish) guide, 
\begin_inset Quotes eld
\end_inset

Git it Together
\begin_inset Quotes erd
\end_inset

 (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://crmda.ku.edu/guides
\end_layout

\end_inset

).
\end_layout

\end_deeper
\begin_layout Itemize
Remote server not necessary.
 Tracking can be strictly inside your computer
\end_layout

\begin_layout Itemize
Can use GitHub, Gitlab, BitBucket, etc
\end_layout

\begin_layout Itemize
not Dropbox
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Sweave, knitr, Rmarkdown
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Reproducible Documents}
\end_layout

\end_inset


\end_layout

\begin_layout Description
bad: point and click, gaze at output, and hand-type a table into a paper
\end_layout

\begin_layout Description
poor: point and click, copy/paste some output into a paper, re-arrange by
 hand
\end_layout

\begin_layout Description
good: export tables and figures in format ready for inclusion in paper
\end_layout

\begin_layout Description
better: Re-produce all calculations in process of producing paper.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Sweave}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
For \SpecialChar LaTeX
 documents, developed by Friedrich Leisch and the R Core for inclusion
 of R code in 
\begin_inset Quotes eld
\end_inset

literate documents
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Here's the basic idea.
 Inside a \SpecialChar LaTeX
 document, R code chunks are included
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Verbatim}
\end_layout

\begin_layout Plain Layout

 <<swexample1, fig=T, include=F, eval=F>>=
\end_layout

\begin_layout Plain Layout

  x <- rnorm(100, mean = 39, sd = 22)
\end_layout

\begin_layout Plain Layout

  hist(x, main = "Sweave code included")
\end_layout

\begin_layout Plain Layout

 @
\end_layout

\begin_layout Plain Layout


\backslash
end{Verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
knitr, developed by Yihui Xie, similar to Sweave, offers different customization
s
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Xie, Yihui (2015) 
\emph on
Dynamic Documents with R and knitr
\emph default
.
 2nd edition.
 Chapman and Hall/CRC.
 
\end_layout

\end_deeper
\begin_layout Itemize
Rmarkdown.
 A completely different framework that flows out of the 
\begin_inset Quotes eld
\end_inset

markdown
\begin_inset Quotes erd
\end_inset

 movement for preparing web pages
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{I'm between good and better}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I Sweave most of my lectures
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Eliminates the mismatch between code examples and what students actually
 get
\end_layout

\end_deeper
\begin_layout Itemize
Here's an 
\begin_inset Quotes eld
\end_inset

I'm smarter than you
\begin_inset Quotes erd
\end_inset

 moment: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://pj.freefaculty.org/R/gloating/test2
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Sometimes I'll write two documents at once, 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
An Sweave document that writes 
\begin_inset Quotes eld
\end_inset

bits
\begin_inset Quotes erd
\end_inset

 of graphs and tables into separate files.
\end_layout

\begin_layout Enumerate
A Sweave document that incorporates results, makes a presentation
\end_layout

\end_deeper
\begin_layout Itemize
Why separate those 2 steps? 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Cobbling everything into one giant document sometimes causes hard-to-find
 bugs
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
The Variable Key
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Project Management and Interacting with Clients}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In several CRMDA projects, we notice a dangerous tendency to develop R scripts
 with 100s of recodes and calculations that are impossible to proofread
 (without herculean effort).
\end_layout

\begin_layout Itemize
In a project for a US Government agency, we needed to 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
import 18 separate SPSS data files
\end_layout

\begin_layout Itemize
deal with problem that each survey could change variable names and recode
 the scales!
\end_layout

\end_deeper
\begin_layout Itemize
We developed a 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Variable Key spreadsheet file so that the client could inspect the variable
 names and recodings
\end_layout

\begin_layout Itemize
R code that could import the Variable Key and carry out the recoding
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Graphics
	filename importfigs/Variable_Key-vso.png
	width 10cm

\end_inset


\end_layout

\begin_layout Itemize
By separating the substance of variable names and recodes from the details
 of R code, we reduced the danger that typographical errors would slide
 through without notice.
\end_layout

\begin_layout Itemize
Also, we get improved communication with client, who was not fluent in R,
 but was fluent in English! 
\end_layout

\begin_layout Itemize
To make the Variable Key framework work in day-to-day projects, we offer
 functions in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
kutils
\end_layout

\end_inset

 named 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
keyTemplate()
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
keyImport()
\end_layout

\end_inset

, and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
keyApply()
\end_layout

\end_inset

, along with a host of support functions.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks, containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Research Life is 6 Steps}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Download
\end_layout

\begin_layout Enumerate
Import 
\end_layout

\begin_layout Enumerate
Review
\end_layout

\begin_layout Enumerate
Recode
\end_layout

\begin_layout Enumerate
Analyze
\end_layout

\begin_layout Enumerate
Plot & Table
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{References}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../../R"
options "apalike2"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Session}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sess10>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<opts20, include=F>>=
\end_layout

\begin_layout Plain Layout

## Don't delete this.
 It puts the interactive session options
\end_layout

\begin_layout Plain Layout

## back the way they were.
 If this is compiled within a session
\end_layout

\begin_layout Plain Layout

## it is vital to do this.
\end_layout

\begin_layout Plain Layout

options(opts.orig)
\end_layout

\begin_layout Plain Layout

options(par.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
