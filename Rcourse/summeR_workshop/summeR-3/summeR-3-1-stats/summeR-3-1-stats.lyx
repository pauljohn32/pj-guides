#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}
\usepackage{array}
\usepackage{longtable}
\usepackage{graphicx}
%\newcommand\makebeamertitle{\frame{\maketitle}}%
\renewcommand{\doiprefix}{doi:\kern-1pt}
\setlength{\bibsep}{10pt}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
%for bold upright roman in math for matrix algebra
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}

%%\input{theme/guidePreambleSweavel.tex} 
%%% From beamer slide:
\usepackage{Sweave}
%% 
%% This controls display of code chunks
\usepackage{ae,fancyvrb,relsize,listings}

\providecommand{\Sweavesize}{\normalsize}
\providecommand{\Rsize}{}
\renewcommand{\Rsize}{\normalsize}
\providecommand{\Routsize}{\scriptsize}

\providecommand{\Rcolor}{\color[rgb]{0.1, 0.1, 0.1}}
\providecommand{\Routcolor}{\color[rgb]{0.2, 0.2, 0.2}}
\providecommand{\Rcommentcolor}{\color[rgb]{0.101, 0.43, 0.432}}

\providecommand{\Rbackground}{\color[gray]{0.91}}
\providecommand{\Routbackground}{\color[gray]{0.935}}
% Can specify \color[gray]{1} for white background or just \color{white}

\lstdefinestyle{Rinput}{
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  basicstyle=\Rsize\Rcolor\ttfamily,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%,
  commentstyle=\Rcommentcolor\ttfamily,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1{==}{{=\,=}}2{--}{{-\,-}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},%
  backgroundcolor=\Rbackground,%
  numbers=left,%
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}%

% Other options of interest:
% frame=single,framerule=0.1pt,framesep=1pt,rulecolor=\color{blue},
% numbers=left,numberstyle=\tiny,stepnumber=1,numbersep=7pt,
% keywordstyle={\bf\Rcolor}

\lstdefinestyle{Routput}{fancyvrb=false,
  literate={~}{{$\sim$}}1{R^2}{{$R^{2}$}}2{^}{{$^{\scriptstyle\wedge}$}}1{R-squared}{{$R^{2}$}}2,%
  basicstyle=\Routcolor\Routsize\ttfamily,%
  backgroundcolor=\Routbackground,
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1 {==}{{=\,=}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},
  numbers=left,
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}

\renewenvironment{Schunk}{}{}
\renewenvironment{Sinput}{}{}
\let\Sinput\relax
\let\Scode\relax
\let\Soutput\relax
\lstnewenvironment{Sinput}{\lstset{style=Rinput}}{}
\lstnewenvironment{Scode}{\lstset{style=Rinput}}{}
\lstnewenvironment{Soutput}{\lstset{style=Routput}}{}
%%end paste in from guidePreambleSweavel.tex


\lstset{tabsize=2, breaklines=true, style=Rinput, breakatwhitespace=true}

\fvset{listparameters={\setlength{\topsep}{0em}}}

\usepackage{xcolor}
\definecolor{light-gray}{gray}{0.90}
\usepackage{realboxes}
\providecommand*{\code}[1]{\texttt{#1}}
\renewcommand{\code}[1]{%
\Colorbox{light-gray}{#1}%
}%
%% end of paste

\usepackage[natbibapa]{apacite}

\definecolor{darkblue}{HTML}{1e2277}

%would be in beamerthemekucrmda%
\mode<presentation>
\definecolor{kublue}{RGB}{0,81,186}
\usefonttheme{professionalfonts}
\useoutertheme{infolines}
\useinnertheme{rounded}
%disable rounded for alert and example boxes%
\setbeamertemplate{blocks}[default]
\usecolortheme{whale}
\usecolortheme{orchid}
\setbeamercolor{structure}{bg=kublue,fg=kublue!90!black}
%\setbeamercolor{structure}{fg=kublue}
\setbeamercolor{frametitle}{bg=kublue}
\setbeamercolor{section in toc}{fg=kublue!40!black}

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}
\beamertemplatenavigationsymbolsempty
%end of beamerthemekucrmda%

%If you want bigger margins, try this:
\setbeamersize{text margin left=05mm,text margin right=10mm} 
\hypersetup{colorlinks,allcolors=.,urlcolor=darkblue}
%Following seems to have no effect now
%\usepackage{handoutWithNotes}
%\pgfpagesuselayout{3 on 1 with notes}[letterpaper, border shrink=5mm]

\titlegraphic{\includegraphics[width=6cm]{theme/logo}}
\logo{\includegraphics[width=5mm]{theme/logomini}}
\end_preamble
\options aspectratio=1609
\use_default_options false
\begin_modules
logicalmkup
sweave
natbibapa
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style \use_bibtopic false
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch semboot
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\branch cfalvm
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%following is LyX shortcut 
\backslash
vb for bold upright math for matrices
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\vb}[1]{\bm{\mathrm{#1}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch R
inverted 0
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% tmpout directory must exist first
\end_layout

\begin_layout Plain Layout

<<tmpout, echo=FALSE, include=FALSE, results=hide>>=
\end_layout

\begin_layout Plain Layout

tdir <- "tmpout"
\end_layout

\begin_layout Plain Layout

if(!dir.exists(tdir)) dir.create(tdir, showWarnings=FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=tmpout/t,split=T,ae=F,height=4.5,width=7}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, include=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

opts.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=100, prompt = " ", continue = "  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE)
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

par.orig <- par(no.readonly = TRUE) 
\end_layout

\begin_layout Plain Layout

pjmar <- c(4.1, 4.1, 1.5, 2.1)
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12, xpd=F)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

if(!file.exists("theme")) file.symlink("../../../../template/theme", "theme")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
Stat Overview 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
stat
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul E.
 Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Johnson
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Political Science
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Center for Research Methods and Data Analysis, University of Kansas
\begin_inset Argument 1
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Date
2019
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Outline}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Getting Started
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Check your packages}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The base install of R 
\begin_inset CommandInset citation
LatexCommand citep
key "RCore"
literal "true"

\end_inset

 loads the stats module.
 See?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
tiny}
\end_layout

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The presence of 
\begin_inset Quotes eld
\end_inset

stats
\begin_inset Quotes erd
\end_inset

 means that functions like these are available.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
mean
\end_layout

\begin_layout Itemize
lm
\end_layout

\end_deeper
\begin_layout Itemize
See about the stats package
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

help(package="stats")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{For anything else, run library}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Specialized stat procedures are generally provided in separate packages
\end_layout

\begin_layout Itemize
Possibly most famous stat-oriented packages are associated with stats textbooks
\end_layout

\begin_layout Description
MASS Venables, William and Ripley, Brian, 
\emph on
Modern Applied Statistics with S
\end_layout

\begin_layout Description
car Fox, John, 
\emph on
Applied Regression Analysis and Generalized Linear Models
\emph default
 and 
\emph on
Companion to Applied Regression
\end_layout

\begin_layout Description
nlme Pinheiro, Jose and Bates, 
\emph on
Douglas Mixed-Effects Models in S and S-PLUS.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Major Super-Big Gigantic Points
\end_layout

\begin_layout Subsection
Variable Types
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{variable types: numeric versus factors}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Numbers can be logged, squared, added, etc
\end_layout

\begin_layout Itemize
Factors cannot be logged, squared
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
religion
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
label
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
R's internal integer for record keeping
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Catholic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Protestant
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Jewish
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Muslim
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
In R, categorical variables are called factors (see functions 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
factor()
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ordered()
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
levels()
\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize
Many functions will 
\begin_inset Quotes eld
\end_inset

promote
\begin_inset Quotes erd
\end_inset

 character variables to factors automatically
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{R functions adapt to data}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Most R statistical procedures try to 
\begin_inset Quotes eld
\end_inset

do the right thing
\begin_inset Quotes erd
\end_inset

 if we use a factor variable
\end_layout

\begin_layout Itemize
Regression Example.
 
\emph on
As we all know 
\emph default
regression coefficients are only defined for numeric predictors.
 However, factor predictors can be included).
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Suppose 
\begin_inset Formula $sex\in\{Male,Female\}$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize
Including sex as a predictor in a regression will cause R to
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Notice sex is not numeric.
 It is an unordered factor.
\end_layout

\begin_layout Itemize
R will create a 
\begin_inset Quotes eld
\end_inset

dummy variable
\begin_inset Quotes erd
\end_inset

 named 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sexFemale
\end_layout

\end_inset

 (Male=0, Female=1).
 (Also known as an 
\begin_inset Quotes eld
\end_inset

indicator variable
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

binary variable
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

dichotomous variable
\begin_inset Quotes erd
\end_inset

)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Itemize
If the predictor were 
\begin_inset Formula $rel\in\{Cath,Prot,Jewi,Musl,Hind\}$
\end_inset

, a regression routine would typically create 4 
\begin_inset Quotes eld
\end_inset

dummies
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
relProt, relJewi, relMusl, relHind
\end_layout

\end_inset

, the last 4 columns here.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="7">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="1.5cm">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
religion
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
numeric score
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
relCath
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
relProt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
relJewi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
relMusl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
relHind
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cath
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prot
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Jewi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Musl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hind
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Itemize
However, user can adjust the regression formula to request estimation of
 both 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sexFemale
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sexMale
\end_layout

\end_inset

 or all 5 levels of religion.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{R functions adapt to data}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Example 2.
 The plot function responds differently to inputs
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

plot(y ~ x)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
will make 
\end_layout

\begin_layout Itemize
a scatterplot if y and x are numeric
\end_layout

\begin_layout Itemize
a box plot if y is numeric and x is a factor
\end_layout

\begin_layout Itemize
a bar plot if both are factors
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Interrogate the object
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Output}
\end_layout

\end_inset


\end_layout

\begin_layout Quote
You only get what you know how to ask for (Paul Johnson, 2016)
\end_layout

\begin_layout Itemize
Most procedures return minimal output.
 This is silent, unless there is an error message
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

m1 <- lm(mydv ~ x1 + x2 + x3 + x4, data = wonderful)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
m1 is an 
\begin_inset Quotes eld
\end_inset

object
\begin_inset Quotes erd
\end_inset

, waiting to be quizzed and investigated.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{For Functions within R's recommended packages}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
we can be fairly sure that functions like 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
print()
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
summary()
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
plot()
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
coef()
\end_layout

\end_inset

 will work as expected
\end_layout

\begin_layout Itemize
Almost always, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
summary()
\end_layout

\end_inset

 will create a new object which can be further explored
\end_layout

\begin_layout Itemize
If you download additional packages, 
\emph on
all bets are off
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Cultural Norms versus Coding Requirements}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R is an open, flexible culture
\end_layout

\begin_deeper
\begin_layout Itemize
opinion leaders
\end_layout

\begin_layout Itemize
mutual expectations
\end_layout

\begin_layout Itemize
shorthand symbolic references
\end_layout

\end_deeper
\begin_layout Itemize
R allows creation of new symbols and functions 
\end_layout

\begin_layout Itemize
Until now, the most respected voices have been authors coming out of the
 ATT S tradition
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
They are focused on re-usability of function names across contexts.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
summary()
\end_layout

\end_inset

 is supposed to work on any kind of object, and change understandably across
 contexts
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
anova()
\end_layout

\end_inset

 is supposed to be a general purpose way to compare fitted statistical objects
\end_layout

\end_deeper
\begin_layout Itemize
These are recommended practices, but not universally followed.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Keep all the pieces (at no extra charge!)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Open Source/Free Software}
\end_layout

\end_inset


\end_layout

\begin_layout Quote
If it breaks, you get to keep all the pieces (Anon)
\end_layout

\begin_layout Itemize
R is an engine congenial to the addition of contributed packages
\end_layout

\begin_layout Itemize
Perhaps R is the 
\begin_inset Quotes eld
\end_inset

lingua franca of statistics
\begin_inset Quotes erd
\end_inset

 (
\begin_inset Quotes eld
\end_inset

Data Analysts Captivated by R's Power
\begin_inset Quotes erd
\end_inset

, 
\emph on
New York Times
\emph default
, January 6, 2009), but it is not a corporation.
\end_layout

\begin_layout Itemize
r-help email list, Stackexchange forums
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Fish follow glittering objects}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Some of the most enticing R packages are also the most frustrating
\end_layout

\begin_layout Itemize
Fancy model appears, our dissertation advisor says 
\begin_inset Quotes eld
\end_inset

use that
\begin_inset Quotes erd
\end_inset

, and it doesn't work.
\end_layout

\begin_layout Itemize
Download the package source code, to find out how they did it
\end_layout

\begin_deeper
\begin_layout Itemize
Bad news: The code a complicated tangle we have no hope of learning from
 it.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
GSS Data
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Some example data I made a long time ago}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I have a file in 
\begin_inset Quotes eld
\end_inset

data
\begin_inset Quotes erd
\end_inset

 called 
\begin_inset Quotes eld
\end_inset

gss-subset2.Rda
\begin_inset Quotes erd
\end_inset

.
 If you don't have it, it can be downloaded:
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://pj.freefaculty.org/guides/stat/DataSets/GSS/gss-subset2.Rda
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Lets check the workspace before loading
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

(ls.old <- ls())
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This is an RData structure, it can drop any number of objects into my workspace
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<load, include=F, fig=T>>=
\end_layout

\begin_layout Plain Layout

load("data/gss-subset2.Rda")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Check workspace after loading
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

(ls.new <- ls())
\end_layout

\begin_layout Plain Layout

setdiff(ls.new, ls.old)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
setdiff()
\end_layout

\end_inset

 is a handy function, it goes along with the R functions 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
union()
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
intersect()
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Descriptive
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{summary()}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=F>>=
\end_layout

\begin_layout Plain Layout

options.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=60)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
SweaveSize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

summary(dat)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=F>>=
\end_layout

\begin_layout Plain Layout

options(options.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{rockchalk::summarize()}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
summary()
\end_layout

\end_inset

 has been that way since, well, forever
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
output is text, not an object with numbers we can re-use
\end_layout

\begin_layout Itemize
no diversity values (variance, skewness, kurtosis)
\end_layout

\begin_layout Itemize
I prefer to separate the numeric and factor variables, and to alphabetize
 the output
\end_layout

\begin_layout Itemize
entropy is a diversity measure for discrete sets.
 
\end_layout

\begin_layout Itemize
normedEntropy range
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
0 (all scores observed in one category)
\end_layout

\begin_layout Itemize
1 (all outcomes equally likely)
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Mean, Variance, etc}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
There are functions in stats package for basic descriptive statistics
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
purpose
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
R function
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sample average
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mean(x)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sample variance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
var(x)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sample standard deviation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sd(x)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
range
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
range(x)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minimum
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
min(x)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
maximum
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max(x)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
quantiles (range values)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
quantile(x)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{But there's a "gotcha" I need to warn you about}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Observe
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

mean(dat$age)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The age variable is average is missing in GSS.
 WTF?
\end_layout

\end_deeper
\begin_layout Itemize
The range does not exist either? And no maximum?
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

range(dat$age)
\end_layout

\begin_layout Plain Layout

max(dat$age)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Missing values}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The symbol 
\series bold
NA 
\series default
is used for 
\begin_inset Quotes eld
\end_inset

missing data
\begin_inset Quotes erd
\end_inset

 in R vectors and data frames
\end_layout

\begin_layout Itemize
At least quantile throws us a warning
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Sinput}
\end_layout

\begin_layout Plain Layout

quantile(dat$age)
\end_layout

\begin_layout Plain Layout


\backslash
end{Sinput}
\end_layout

\begin_layout Plain Layout


\backslash
begin{Soutput}
\end_layout

\begin_layout Plain Layout

Error in quantile.default(dat$age) :   
\end_layout

\begin_layout Plain Layout

missing values and NaN's not allowed if 'na.rm' is FALSE
\end_layout

\begin_layout Plain Layout


\backslash
end{Soutput}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
passive-aggressive approach to missings in R
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

mean(dat$age, na.rm = TRUE)
\end_layout

\begin_layout Plain Layout

range(dat$age, na.rm = TRUE)
\end_layout

\begin_layout Plain Layout

quantile(dat$age, na.rm = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Some functions will automatically ignore missings (plot(), lm()).
 Simple stats will not.
 Grrrr!
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Cross tabulation
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Sometimes, a Cross Tabulation is the best you can do}
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
5cm
\end_layout

\begin_layout Standard

\series bold
The Iron Laws of Crosstabs.
 3
\series default
 rules for a happy life.
\end_layout

\begin_layout Enumerate
IV on top, DV on left
\end_layout

\begin_layout Enumerate
Convert to percentages (or proportions) on the columns
\end_layout

\begin_layout Enumerate
Compare the across, find if columns are distributed differently
\end_layout

\begin_layout Column
7cm
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The FX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Column 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Percentages
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Network is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Respondent
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sex
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
male
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
female
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
really infantile
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
25%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
60%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OK
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
50%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
really great
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
25%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
343
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
288
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Here's a Table I Typed By hand}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{lD{.}{.}{0}D{.}{.}{0}D{.}{.}{0}}
\end_layout

\begin_layout Plain Layout


\backslash
toprule
\end_layout

\begin_layout Plain Layout

&  
\backslash
multicolumn{3}{c}{Does Respondent Own a Gun?}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

 Stance on Gun Registration& 
\backslash
multicolumn{1}{c}{Yes} & 
\backslash
multicolumn{1}{c}{No} & 
\backslash
multicolumn{1}{c}{Refused To Say} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
midrule
\end_layout

\begin_layout Plain Layout

Favor & 70.7
\backslash
% & 84.9 & 62.9 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Oppose & 29.3 & 15.1 & 38.0 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Number of Cases & 656 & 1128 & 27 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
bottomrule
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Found 2 typographical errors when reviewing against real numbers below.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{R base tools for tables can be made to work}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

t1 <- table(dat$gunlaw, dat$owngun)
\end_layout

\begin_layout Plain Layout

t1
\end_layout

\begin_layout Plain Layout

prop.table(t1, 2)
\end_layout

\begin_layout Plain Layout

addmargins(t1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{package gmodels introduced SPSS style CrossTable function}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=F>>=
\end_layout

\begin_layout Plain Layout

options.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=60)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

library(gmodels)
\end_layout

\begin_layout Plain Layout

CrossTable(dat$gunlaw, dat$owngun)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=F>>=
\end_layout

\begin_layout Plain Layout

options(options.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{rockchalk has pctable}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
While CrossTable was a welcome invention, it did not boil down to the sort
 of table that I required of my students.
 
\end_layout

\begin_layout Itemize
We explored alternatives, some of which are very nice (packages memisc,
 vcd, and descr).
 
\end_layout

\begin_layout Itemize
But, now, feast your eyes on this:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=F>>=
\end_layout

\begin_layout Plain Layout

options.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=60)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

library(rockchalk)
\end_layout

\begin_layout Plain Layout

pctable(gunlaw ~ owngun, data = dat, rvlab = "Stance on Gun Registration",
 cvlab = "Does Respondent Own a Gun?")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=F>>=
\end_layout

\begin_layout Plain Layout

options(options.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
which can be wrestled into a nice looking table, either in html or \SpecialChar LaTeX
.
 Here's the \SpecialChar LaTeX

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<pctable20,include=F,result=tex>>=
\end_layout

\begin_layout Plain Layout

pctable20 <- pctable(gunlaw ~ owngun, data = dat, rvlab = "Stance on Gun
 Registration", cvlab = "Does Respondent Own a Gun?")
\end_layout

\begin_layout Plain Layout

require(tables)
\end_layout

\begin_layout Plain Layout

require(Hmisc)
\end_layout

\begin_layout Plain Layout

tabsum <- summary(pctable20, rowpct = FALSE, colpct = TRUE)
\end_layout

\begin_layout Plain Layout

tabsum <- apply(tabsum, 1:2, function(x) {gsub("%", "
\backslash

\backslash

\backslash

\backslash
%", x) })
\end_layout

\begin_layout Plain Layout

tabsum.hmisc <- Hmisc::latex(tabsum, file = "tmpout/t-pctable20a.tex")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{"tmpout/t-pctable20a.tex"}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Graphs
\end_layout

\begin_layout Subsection
Scatterplots
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Scatterplot: 2 numeric variables}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Socio-economic status and education
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<scat10, include=F, fig=T>>=
\end_layout

\begin_layout Plain Layout

plot(sei ~ educ, data = dat, cex = 0.5, lwd = 0.2, main = "", 
\end_layout

\begin_layout Plain Layout

xlab =  "Education (years)", ylab = "Socio-economic Status", ylim = c(0,
 100))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-scat10}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-scat10}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Color Coded Men and Women
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<scat20, include=F, fig=T>>=
\end_layout

\begin_layout Plain Layout

plot(sei ~ educ, data = dat,  main = "", xlab = "Education (years)", 
\end_layout

\begin_layout Plain Layout

    ylab = "Socio-economic Status", ylim = c(0,120), type = "n")
\end_layout

\begin_layout Plain Layout

sexcolor <- ifelse(dat$sex == "MALE", "black", "gray60")
\end_layout

\begin_layout Plain Layout

sexpch <- ifelse(dat$sex == "MALE", 1, 4)
\end_layout

\begin_layout Plain Layout

points(sei ~ educ, data = dat, cex = 0.5, lwd = 0.2, 
\end_layout

\begin_layout Plain Layout

    col = sexcolor, pch = sexpch)
\end_layout

\begin_layout Plain Layout

legend("topleft", legend = c("Male","Female"), 
\end_layout

\begin_layout Plain Layout

    col = c("black","gray80"), pch = c(1,4))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-scat20}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-scat20}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{"Piled up observations" Problem}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I made the symbols light to give a hint: There are lots of repeated scores.
\end_layout

\begin_layout Itemize
The most common quick fix for this is to 
\begin_inset Quotes eld
\end_inset

jitter
\begin_inset Quotes erd
\end_inset

 the observations so they don't overlap quite so much.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<scat30, include=F, fig=T>>=
\end_layout

\begin_layout Plain Layout

plot(jitter(sei) ~ jitter(educ), data = dat, cex = 0.5, lwd = 0.2, main =
 "", xlab =  "Education (years)", ylab = "Socio-economic Status", ylim =
 c(0, 100))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-scat30}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-scat30}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Lately, People are looking at smarter plot types}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
CRAN package 
\begin_inset Quotes eld
\end_inset

hexbin
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
You should install 
\begin_inset Quotes eld
\end_inset

hexbin
\begin_inset Quotes erd
\end_inset

, then run
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

library(hexbin)
\end_layout

\begin_layout Plain Layout

help(package = "hexbin")
\end_layout

\begin_layout Plain Layout

example(hexbin)
\end_layout

\begin_layout Plain Layout

vignette("hexabon_binning")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Following usage is in classic R style
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
An object 
\begin_inset Quotes eld
\end_inset

hbin
\begin_inset Quotes erd
\end_inset

 is created (class = hexbin)
\end_layout

\begin_layout Itemize
Then a plot method is used (which responds to common R style arguments xlab,
 ylab, etc)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<scat70, include=F, fig=T>>=
\end_layout

\begin_layout Plain Layout

library(hexbin)
\end_layout

\begin_layout Plain Layout

hbin <- hexbin(dat$educ, dat$sei, xbins = 40)
\end_layout

\begin_layout Plain Layout

plot(hbin, xlab = "Education", ylab = "Socio Economic Status", 
\end_layout

\begin_layout Plain Layout

    main =  "Hexagon-binned Data Plot",
\end_layout

\begin_layout Plain Layout

    lcex = 0.6)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-scat70}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I had some difficulty understanding how that worked, believe answer is in
 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
?gplot.hexbin
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 (maybe you also run "
\begin_inset Flex Code
status open

\begin_layout Plain Layout

\family typewriter
methods(class = 
\family default
"
\family typewriter
hexbin
\family default
"
\family typewriter
)
\end_layout

\end_inset

" to retrace my steps 
\end_layout

\begin_layout Itemize
Creates six sided shapes, counts observations within
\end_layout

\begin_layout Itemize
plot method draws color-coded hexagons
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-scat70}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The R lattice package implements "Trellis" plots}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<scat80, include=F, fig=T>>=
\end_layout

\begin_layout Plain Layout

hexbinplot(sei ~ educ, dat, 
\end_layout

\begin_layout Plain Layout

       xlab = "Education", ylab = "Socio Economic Status", 
\end_layout

\begin_layout Plain Layout

       main =  "Hexagon via lattice graphics")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The lattice package is a huge accomplishment by U.
 Wisc.
 PhD Deepayan Sarkar (see Sarkar, Deepayan (2008) 
\emph on
Lattice: Multivariate Data Visualization with R
\emph default
).
 
\end_layout

\begin_layout Itemize
To get the flavor of it, run
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

library(lattice)
\end_layout

\begin_layout Plain Layout

example(xyplot)
\end_layout

\begin_layout Plain Layout

?xyplot
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The hexbin package includes a function that calls lattice tools, hexbinplot
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-scat80}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-scat80}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Compare Male and Female}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<scat90, include=F, fig=T>>=
\end_layout

\begin_layout Plain Layout

hexbinplot(sei ~ educ | sex, dat, 
\end_layout

\begin_layout Plain Layout

       xlab = "Education", ylab = "Socio Economic Status", 
\end_layout

\begin_layout Plain Layout

       main =  "Hexagon via lattice graphics")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Lattice graphs are intended to 
\begin_inset Quotes eld
\end_inset

scale up
\begin_inset Quotes erd
\end_inset

 to display many sub-groups compactly.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Syntax uses bar 
\begin_inset Quotes eld
\end_inset

|
\begin_inset Quotes erd
\end_inset

 to indicate grouping variable
\end_layout

\begin_layout Itemize
Elaborate framework for specifying style details of panels inside xyplot
\end_layout

\end_deeper
\begin_layout Itemize
plot method draws color-coded hexagons
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-scat90}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-scat90}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Boxplots
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Boxplot:  Like a Histogram Turned on its Side}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<box09, include=F>>=
\end_layout

\begin_layout Plain Layout

set.seed(234234)
\end_layout

\begin_layout Plain Layout

x <- rnorm(1000, m=50, sd=10)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<box10, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

boxplot(x)
\end_layout

\begin_layout Plain Layout

text(0.8, median(x), paste("median is", round(median(x), 2)), pos=2)
\end_layout

\begin_layout Plain Layout

text(1.2, 37, paste("box=interquartile 
\backslash
n range"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
5cm
\end_layout

\begin_layout Itemize
A boxplot is John Tukey's invention
\end_layout

\begin_layout Itemize
Dark line at Median
\end_layout

\begin_layout Itemize
Box has 25% of cases above and below (IQ range)
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Whiskers
\begin_inset Quotes erd
\end_inset

 default to reach out 1.5*interquartile range
\end_layout

\begin_layout Itemize
Dots represent extreme cases.
\end_layout

\begin_layout Column
7cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=6cm]{tmpout/t-box10}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-box10}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
This variable is symmetric, with mean near median of 50.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Boxplot: For a Nonsymmetric Variable}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<box11,include=F>>=
\end_layout

\begin_layout Plain Layout

x <- 40 + 8*rgamma(1000, 1, 2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<box12, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

boxplot(x, xlim=c(0,2))
\end_layout

\begin_layout Plain Layout

text(0.8, median(x), paste("median is", round(median(x), 2)), pos=2)
\end_layout

\begin_layout Plain Layout

text(1.2, mean(x), paste("mean is", round(mean(x),1)), pos=4)
\end_layout

\begin_layout Plain Layout

points(1.0, mean(x), pch=13, col="red", cex=2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<box13, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

hist(x, main="")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
5cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=6cm]{tmpout/t-box13}
\end_layout

\begin_layout Plain Layout


\backslash
input{tmpout/t-box13}
\end_layout

\end_inset


\end_layout

\begin_layout Column
7cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=6cm]{tmpout/t-box12}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-box12}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Boxplot Case Study in GSS Data}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
A histogram can display only one group of respondents
\end_layout

\begin_layout Itemize
Boxplot can offer more compact multi-group view.
\end_layout

\begin_layout Itemize
GSS has questions about the total number of sexual partners that a person
 has had in their lifetimes, both male and female (what self-respecting
 13 year old boy is not interested in that?)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<box19, fig=T, include=F, height=4, width=7>>=
\end_layout

\begin_layout Plain Layout

dat$totnum <- dat$nummen + dat$numwomen
\end_layout

\begin_layout Plain Layout

hist(dat$totnum, prob=TRUE, xlab="Total sexual partners (Male + Female)",
 main = "All Respondents")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-box19}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-box19}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I concluded we'd better exclude respondents with more than 99 partners
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
Histograms for Number of Sexual Partners(GSS 2006)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<box20, fig=T, include=F, height=4, width=9>>=
\end_layout

\begin_layout Plain Layout

dat$totnum <- dat$nummen + dat$numwomen
\end_layout

\begin_layout Plain Layout

dat$totnum[dat$totnum > 99] <- NA  #exclude liars and prostitutes
\end_layout

\begin_layout Plain Layout

par(mfcol=c(1,2))
\end_layout

\begin_layout Plain Layout

datmale <- dat[dat$sex %in% levels(dat$sex)[1], ]
\end_layout

\begin_layout Plain Layout

hist(datmale$totnum, prob=TRUE, xlab="Total sexual partners (Male + Female)",
 main="Respondents: Male")
\end_layout

\begin_layout Plain Layout

datfemale <- dat[dat$sex %in% levels(dat$sex)[2], ]
\end_layout

\begin_layout Plain Layout

hist(datfemale$totnum,  prob=TRUE, xlab="Total sexual partners (Male + Female)",
 main="Respondents: Female")
\end_layout

\begin_layout Plain Layout

par(mfcol=c(1,1))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-box20}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
Use a Box Plot Instead
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<box40, fig=T, include=F, height=4, width=9>>=
\end_layout

\begin_layout Plain Layout

# One approach
\end_layout

\begin_layout Plain Layout

boxplot(totnum~ sex , data=dat, ylab="Sex Partners since age 18 (excl.
 cases > 99)",xlab="Respondent Gender", names=c("Male","Female"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-box40}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
I spent about 1 million hours on this in 2007, so I insist you look
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<box50, fig=T, include=F, height=6, width=9>>=
\end_layout

\begin_layout Plain Layout

lsex <- levels(dat$sex)
\end_layout

\begin_layout Plain Layout

lsexsex5 <- levels(dat$sexsex5)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

dat$gpref <- NA
\end_layout

\begin_layout Plain Layout

dat$gpref[dat$sex %in% lsex[1] & dat$sexsex5 %in% lsexsex5[1]] <- "M-only
 M"
\end_layout

\begin_layout Plain Layout

dat$gpref[dat$sex %in% lsex[1] & dat$sexsex5 %in% lsexsex5[2]] <- "M-bi"
\end_layout

\begin_layout Plain Layout

dat$gpref[dat$sex %in% lsex[1] & dat$sexsex5 %in% lsexsex5[3]] <- "M-only
 W"
\end_layout

\begin_layout Plain Layout

dat$gpref[dat$sex %in% lsex[2] & dat$sexsex5 %in% lsexsex5[1]] <- "W-only
 M"
\end_layout

\begin_layout Plain Layout

dat$gpref[dat$sex %in% lsex[2] & dat$sexsex5 %in% lsexsex5[2]] <- "W-bi"
\end_layout

\begin_layout Plain Layout

dat$gpref[dat$sex %in% lsex[2] & dat$sexsex5 %in% lsexsex5[3]] <- "W-only
 W"
\end_layout

\begin_layout Plain Layout

dat$gpref <- factor(dat$gpref, levels= c( "M-only M","M-bi","M-only W",
 "W-only M","W-bi", "W-only W"  ))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

bp1 <- boxplot(totnum ~ gpref , data=dat, ylab="Sex Partners since age 18
 (excl.
 cases > 99)", xlab="Respondent Gender")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

gprefcounts <- by(dat, dat$gpref, function(x) length(x$gpref))
\end_layout

\begin_layout Plain Layout

gprefmeans <- by(dat, dat$gpref, function(x) mean(x$totnum, na.rm=T))
\end_layout

\begin_layout Plain Layout

gprefmeans <- round(gprefmeans, 2)
\end_layout

\begin_layout Plain Layout

gprefmeds <- bp1$stats[3,]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

abline(h=seq(5,120,by=5), lty=2, lwd=0.7, col="gray80")
\end_layout

\begin_layout Plain Layout

### Really wanted this, but does not fit!
\end_layout

\begin_layout Plain Layout

###text( 1:6, gprefmeds, as.character(gprefmeds), pos=2, cex=0.7,bg="white")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

### Stupid.
 Should have used mapply to get this in 1 command
\end_layout

\begin_layout Plain Layout

text(1, gprefmeans[1], bquote(paste(bar(y)[1] == .(gprefmeans[1]),sep="")),pos=3,
 cex=0.8 )
\end_layout

\begin_layout Plain Layout

text(2, gprefmeans[2], bquote(paste(bar(y)[2] == .(gprefmeans[2]),sep="")),pos=3,
 cex=0.8)
\end_layout

\begin_layout Plain Layout

text(3, gprefmeans[3], bquote(paste(bar(y)[3] == .(gprefmeans[3]),sep="")),pos=3,
 cex=0.8)
\end_layout

\begin_layout Plain Layout

text(4, gprefmeans[4], bquote(paste(bar(y)[4] == .(gprefmeans[4]),sep="")),pos=3,
 cex=0.8)
\end_layout

\begin_layout Plain Layout

text(5, gprefmeans[5], bquote(paste(bar(y)[5] == .(gprefmeans[5]),sep="")),pos=3,
 cex=0.8)
\end_layout

\begin_layout Plain Layout

text(6, gprefmeans[6], bquote(paste(bar(y)[6] == .(gprefmeans[6]),sep="")),pos=3,
 cex=0.8)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

mtext("N=", 1, 2, at=c(0.5))
\end_layout

\begin_layout Plain Layout

mtext(gprefcounts, 1, 2, at=1:6)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[height=70mm]{tmpout/t-box50}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Barplots
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Barplot}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Barplot: graphic presentation of a tabulation
\end_layout

\begin_layout Itemize
Horizontal: discrete variable
\end_layout

\begin_layout Itemize
Vertical: Any numeric value (summary score ,mean, proportion, count) 
\end_layout

\begin_layout Itemize
Problem: The width of the bar has no 
\begin_inset Quotes eld
\end_inset

substantive
\begin_inset Quotes erd
\end_inset

 meaning (Unlike a histogram, where the width 
\begin_inset Formula $\times$
\end_inset

 height represents the area)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Barplot}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In R, we are asked to assemble a barplot in 2 steps
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Create a table that includes the values we intend to plot
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Usually table(), or 
\end_layout

\begin_layout Enumerate
prop.table(table()), or
\end_layout

\begin_layout Enumerate
Any other matrix-making function, like memisc::genTable.
\end_layout

\end_deeper
\begin_layout Enumerate
Run the barplot() function to create the graphic
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Gender Gap in 2004}
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
tiny{}
\end_layout

\begin_layout Plain Layout


\backslash
begin{tabular}{lD{.}{.}{0}D{.}{.}{0}}
\end_layout

\begin_layout Plain Layout


\backslash
toprule
\end_layout

\begin_layout Plain Layout

&  
\backslash
multicolumn{2}{c}{Respondent Gender} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Presidential Choice & 
\backslash
multicolumn{1}{c}{Male} & 
\backslash
multicolumn{1}{c}{Female} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
midrule
\end_layout

\begin_layout Plain Layout

Kerry & 45
\backslash
% & 52 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Bush & 53 & 47 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Nader & 2 & 1 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Didn't Vote* & 1 & 1 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Number of Cases & 1137 & 1487 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
bottomrule
\end_layout

\begin_layout Plain Layout

* Respondent voted, but
\backslash

\backslash
did not cast vote in
\backslash

\backslash
Presidential contest
\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<bar10, fig=T, include=F, echo=T>>=
\end_layout

\begin_layout Plain Layout

load("/home/pauljohn/ps/SVN-guides/stat/DataSets/GSS/gss-subset2.Rda")
\end_layout

\begin_layout Plain Layout

library(memisc) 
\end_layout

\begin_layout Plain Layout

t1 <- genTable(percent(factor(pres04))~sex, data=dat)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

bp1 <- barplot(t1[1:2,], beside=T, names=c("Men","Women"), col=c("gray70","gray8
0"), density=c(15,20),angle=c(45,-45), ylim=c(0,60),ylab="Presidential Preferenc
e, 2004", xlab="Respondent Gender")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

text(as.vector(bp1),as.vector(t1[1:2,]), label=as.vector(round(t1[1:2,],1)),pos=1)
 
\end_layout

\begin_layout Plain Layout

par(xpd=T) 
\end_layout

\begin_layout Plain Layout

text(bp1,-1.5,c("Kerry","Bush"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=6cm]{tmpout/t-bar10}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Voter Participation Dynamics}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<bar20, fig=T, include=F, echo=T>>=
\end_layout

\begin_layout Plain Layout

par(xpd=TRUE)
\end_layout

\begin_layout Plain Layout

ptvote <- 100*prop.table(table(dat$vote04, dat$vote00),2) 	
\end_layout

\begin_layout Plain Layout

mycolors <- c("gray76", "gray80", "gray90")
\end_layout

\begin_layout Plain Layout

bpbeside <- barplot(ptvote, ylim=c(0,100), beside = TRUE, col = mycolors,
 density = c(30,20,40), angle = c(45,-45,0), xlab = "Participation in 2000",
 ylab = "Participation in 2004")
\end_layout

\begin_layout Plain Layout

legend("topright", legend = levels(factor(dat$vote04)), col = mycolors,
 density = c(30,20,40), angle = c(45,-45,0))
\end_layout

\begin_layout Plain Layout

text(as.vector(bpbeside), as.vector(ptvote), labels=round(as.vector(ptvote),1),pos=
3)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-bar20}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
SweaveSize{
\backslash
tiny}
\end_layout

\begin_layout Plain Layout


\backslash
input{tmpout/t-bar20}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Barplot: Partisanship in 2004}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<bar30, fig=T, include=F, echo=T>>=
\end_layout

\begin_layout Plain Layout

opar <- par(no.readonly = TRUE)
\end_layout

\begin_layout Plain Layout

newmar <- par("mar") + c(3, 0,0,0)
\end_layout

\begin_layout Plain Layout

par(mar = newmar)
\end_layout

\begin_layout Plain Layout

##From the 2010 midterm notes
\end_layout

\begin_layout Plain Layout

dat$partyid[dat$partyid %in% levels(dat$partyid)[8]] <- NA 
\end_layout

\begin_layout Plain Layout

dat$partyid <- factor(dat$partyid)
\end_layout

\begin_layout Plain Layout

levels(dat$partyid) <- c("Strong Dem.", "Dem.", "Ind Near Dem", "Independent",
 "Ind.
 Near Repub.", "Repub.", "Strong Repub.")
\end_layout

\begin_layout Plain Layout

dat$pres04[dat$pres04 %in% levels(dat$pres04)[3:10]]<-NA 
\end_layout

\begin_layout Plain Layout

dat$pres04 <- factor(dat$pres04) 
\end_layout

\begin_layout Plain Layout

t1 <- with(dat, prop.table(table(pres04, partyid), 2)) 
\end_layout

\begin_layout Plain Layout

barplot(t1, beside = TRUE, las = 2, ylim = c(0,1)) 
\end_layout

\begin_layout Plain Layout

abline(h=seq(0.05,1,by=0.05), lty=4, lwd=0.2) 
\end_layout

\begin_layout Plain Layout

legend("top", legend=c("J.Kerry","G.W.Bush"), fill=gray.colors(2), bg="white")
\end_layout

\begin_layout Plain Layout

par <- opar
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-bar30}
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
SweaveSize{
\backslash
tiny}
\end_layout

\begin_layout Plain Layout


\backslash
input{tmpout/t-bar30}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{A German Student Helped me Figure this out}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Is was not truly interested in bar plots, but a young student from Germany
 was
\end_layout

\begin_layout Itemize
I learned a great deal, and you will too, if you step through these examples:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://pj.freefaculty.org/R/WorkingExamples/plot-barplot-1.R
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://pj.freefaculty.org/R/WorkingExamples/plot-barplot-2.R
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
There are 
\begin_inset Quotes eld
\end_inset

html
\begin_inset Quotes erd
\end_inset

 output files there too
\end_layout

\end_deeper
\begin_layout Itemize
These help not only with barplots, but also with the problem of 
\begin_inset Quotes eld
\end_inset

writing outside the plot region
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{A German Student Helped me Figure this out}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
NB: Many Other Types of Plots
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

spinogram
\begin_inset Quotes erd
\end_inset

 is a barplot that scales the widths of the bars according to the numbers
 of observations
\end_layout

\begin_layout Itemize
dot plot replaces the 
\begin_inset Quotes eld
\end_inset

big boxy bars
\begin_inset Quotes erd
\end_inset

 with smaller dots to mark the tops of the bars.
\end_layout

\begin_layout Itemize
pie charts are awful, every reasonable person would agree they should never
 be used for anything.
 (my definition of reasonable is based on your answer: 
\begin_inset Quotes eld
\end_inset

do you hate pie charts?
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Basic Stats
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{t.test}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Does GSS report different SES for men and women?
\end_layout

\begin_layout Itemize
\begin_inset Formula $H_{0}:\mu_{men}=\mu_{women}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ttest10>>=
\end_layout

\begin_layout Plain Layout

t.test(sei ~ sex, data = dat)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In 2002 (or so), R Core decided to use 
\begin_inset Quotes eld
\end_inset

Welch's unequal variance correction
\begin_inset Quotes erd
\end_inset

 for this
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ttest20>>=
\end_layout

\begin_layout Plain Layout

t.test(sei ~ sex, data = dat, var.equal = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{t.test}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I suppose the expected value of age is smaller than 46
\end_layout

\begin_layout Itemize
NULL 
\begin_inset Formula $H_{0}:\mu_{age}\geq46$
\end_inset

 Alternative 
\begin_inset Formula $H_{A}:\mu_{age}<46$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ttest30>>=
\end_layout

\begin_layout Plain Layout

t.test(dat$age, mu = 46, alternative = "less")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Quick: Make Up Some Data!
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Easy access to random number generators}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R provides a family of random number generators
\end_layout

\begin_layout Itemize
When we find new methods, it is easiest to understand them if we make up
 some data, so we know what we are supposed to get
\end_layout

\begin_layout Itemize
Simulation offers a 
\begin_inset Quotes eld
\end_inset

low barrier to entry
\begin_inset Quotes erd
\end_inset

 for people who want to learn more about statistical distributions
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What is that Gamma thing?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I'll create 4 variables with the same expected values
\end_layout

\begin_layout Itemize
Which should have roughly the same means in a sample of 500
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<phony10>>=
\end_layout

\begin_layout Plain Layout

set.seed(234234)
\end_layout

\begin_layout Plain Layout

N <- 500
\end_layout

\begin_layout Plain Layout

dat2 <- data.frame(x1 = rnorm(N, m = 4, sd = 5),
\end_layout

\begin_layout Plain Layout

                   x2 = rpois(N, lambda = 4),
\end_layout

\begin_layout Plain Layout

                   x3 = rgamma(N, shape = 0.4, scale = 10), 
\end_layout

\begin_layout Plain Layout

                   x4 = rbinom(N, size = 8, prob = 0.5))
\end_layout

\begin_layout Plain Layout

rockchalk::summarize(dat2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{I Cannot See Too Much in the Scatterplot Matrix}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<phony20,fig=T,include=F,height=6,width=6>>=
\end_layout

\begin_layout Plain Layout

pairs(dat2, lwd = 0.8)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
4cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-phony20.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Column
8cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=7cm]{tmpout/t-phony20}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Compare Histograms}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<phony30,fig=T,include=F,height=6,width=9>>=
\end_layout

\begin_layout Plain Layout

par(mfcol=c(2,2))
\end_layout

\begin_layout Plain Layout

hist(dat2$x1, main = "Normal", prob = TRUE, breaks = 20,  xlab = paste("E[x]
 = 4"), xlim = c(-16,24))
\end_layout

\begin_layout Plain Layout

hist(dat2$x2, main = "Poisson", prob = TRUE, breaks = 20, xlab = paste("E[x]
 = 4"), xlim = c(-16,24))
\end_layout

\begin_layout Plain Layout

hist(dat2$x3, main = "Gamma", prob = TRUE, breaks = 20, xlab = paste("E[x]
 = 4"), xlim = c(-16,24))
\end_layout

\begin_layout Plain Layout

hist(dat2$x4, main = "Binomial", prob = TRUE, breaks = 20, xlab = paste("E[x]
 = 4"), xlim = c(-16,24))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{tmpout/t-phony30}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/t-phony30}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The R Experience is What You Make of It}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If you are completely inexperienced, hooray!
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
It seems certain to me that R is the best statistical & programming learning
 environment the planet Earth has ever known
\end_layout

\begin_layout Itemize
R is 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
open to experimentation
\end_layout

\begin_layout Itemize
invention of new tools
\end_layout

\end_deeper
\begin_layout Itemize
And yet R is disciplined and structured
\end_layout

\end_deeper
\begin_layout Itemize
If you are experienced with other statistical software, hooray!
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
You will experience the same trauma and struggle that I did
\end_layout

\begin_layout Itemize
Look for similarities, but don't assume they will exist
\end_layout

\begin_layout Itemize
Other stat packs are gradually adapting to be more like R, I expect the
 differences will not be so start for the students in the future
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Stata and SAS now have facilities similar to R factors, for example.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{References}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../../R"
options "apalike2"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Session}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sess10>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<opts20, include=F>>=
\end_layout

\begin_layout Plain Layout

## Don't delete this.
 It puts the interactive session options
\end_layout

\begin_layout Plain Layout

## back the way they were.
 If this is compiled within a session
\end_layout

\begin_layout Plain Layout

## it is vital to do this.
\end_layout

\begin_layout Plain Layout

options(opts.orig)
\end_layout

\begin_layout Plain Layout

options(par.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
