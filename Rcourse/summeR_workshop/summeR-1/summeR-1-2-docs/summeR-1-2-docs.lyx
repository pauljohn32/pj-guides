#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}
\usepackage{array}
\usepackage{longtable}
\usepackage{graphicx}
\newcommand\makebeamertitle{\frame{\maketitle}}%
\renewcommand{\doiprefix}{doi:\kern-1pt}
\setlength{\bibsep}{10pt}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
%for bold upright roman in math for matrix algebra
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}

%%\input{theme/guidePreambleSweavel.tex} 
%%% From beamer slide:
\usepackage{Sweave}
%% 
%% This controls display of code chunks
\usepackage{ae,fancyvrb,relsize,listings}

\providecommand{\Sweavesize}{\normalsize}
\providecommand{\Rsize}{}
\renewcommand{\Rsize}{\normalsize}
\providecommand{\Routsize}{\scriptsize}

\providecommand{\Rcolor}{\color[rgb]{0.1, 0.1, 0.1}}
\providecommand{\Routcolor}{\color[rgb]{0.2, 0.2, 0.2}}
\providecommand{\Rcommentcolor}{\color[rgb]{0.101, 0.43, 0.432}}

\providecommand{\Rbackground}{\color[gray]{0.91}}
\providecommand{\Routbackground}{\color[gray]{0.935}}
% Can specify \color[gray]{1} for white background or just \color{white}

\lstdefinestyle{Rinput}{
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  basicstyle=\Rsize\Rcolor\ttfamily,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%,
  commentstyle=\Rcommentcolor\ttfamily,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1{==}{{=\,=}}2{--}{{-\,-}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},%
  backgroundcolor=\Rbackground,%
  numbers=left,%
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}%

% Other options of interest:
% frame=single,framerule=0.1pt,framesep=1pt,rulecolor=\color{blue},
% numbers=left,numberstyle=\tiny,stepnumber=1,numbersep=7pt,
% keywordstyle={\bf\Rcolor}

\lstdefinestyle{Routput}{fancyvrb=false,
  literate={~}{{$\sim$}}1{R^2}{{$R^{2}$}}2{^}{{$^{\scriptstyle\wedge}$}}1{R-squared}{{$R^{2}$}}2,%
  basicstyle=\Routcolor\Routsize\ttfamily,%
  backgroundcolor=\Routbackground,
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1 {==}{{=\,=}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},
  numbers=left,
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}

\renewenvironment{Schunk}{}{}
\renewenvironment{Sinput}{}{}
\let\Sinput\relax
\let\Scode\relax
\let\Soutput\relax
\lstnewenvironment{Sinput}{\lstset{style=Rinput}}{}
\lstnewenvironment{Scode}{\lstset{style=Rinput}}{}
\lstnewenvironment{Soutput}{\lstset{style=Routput}}{}
%%end paste in from guidePreambleSweavel.tex


\lstset{tabsize=2, breaklines=true, style=Rinput, breakatwhitespace=true}

\fvset{listparameters={\setlength{\topsep}{0em}}}

\usepackage{xcolor}
\definecolor{light-gray}{gray}{0.90}
\usepackage{realboxes}
\providecommand*{\code}[1]{\texttt{#1}}
\renewcommand{\code}[1]{%
\Colorbox{light-gray}{#1}%
}%
%% end of paste

\usepackage[natbibapa]{apacite}

\definecolor{darkblue}{HTML}{1e2277}

%would be in beamerthemekucrmda%
\mode<presentation>
\definecolor{kublue}{RGB}{0,81,186}
\usefonttheme{professionalfonts}
\useoutertheme{infolines}
\useinnertheme{rounded}
%disable rounded for alert and example boxes%
\setbeamertemplate{blocks}[default]
\usecolortheme{whale}
\usecolortheme{orchid}
\setbeamercolor{structure}{bg=kublue,fg=kublue!90!black}
%\setbeamercolor{structure}{fg=kublue}
\setbeamercolor{frametitle}{bg=kublue}
\setbeamercolor{section in toc}{fg=kublue!40!black}

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}
\beamertemplatenavigationsymbolsempty
%end of beamerthemekucrmda%

%If you want bigger margins, try this:
\setbeamersize{text margin left=05mm,text margin right=10mm} 
\hypersetup{colorlinks,allcolors=.,urlcolor=darkblue}
%Following seems to have no effect now
%\usepackage{handoutWithNotes}
%\pgfpagesuselayout{3 on 1 with notes}[letterpaper, border shrink=5mm]

\titlegraphic{\includegraphics[width=6cm]{theme/logo}}
\logo{\includegraphics[width=5mm]{theme/logomini}}
\end_preamble
\options aspectratio=1609
\use_default_options false
\begin_modules
logicalmkup
sweave
natbibapa
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style 
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch semboot
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\branch cfalvm
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%following is LyX shortcut 
\backslash
vb for bold upright math for matrices
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\vb}[1]{\bm{\mathrm{#1}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch R
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% tmpout directory must exist first
\end_layout

\begin_layout Plain Layout

<<tmpout, echo=FALSE, include=FALSE, results=hide>>=
\end_layout

\begin_layout Plain Layout

tdir <- "tmpout"
\end_layout

\begin_layout Plain Layout

if(!dir.exists(tdir)) dir.create(tdir, showWarnings=FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=tmpout/t,split=T,ae=F,height=4.5,width=7}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, include=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

opts.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=100, prompt = " ", continue = "  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE)
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

par.orig <- par(no.readonly = TRUE) 
\end_layout

\begin_layout Plain Layout

pjmar <- c(4.1, 4.1, 1.5, 2.1)
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12, xpd=F)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

if(!file.exists("theme")) file.symlink("../../../../template/theme", "theme")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
R is Self Documenting 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Docs
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul E.
 Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Johnson 
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Political Science
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Center for Research Methods and Data Analysis, University of Kansas
\begin_inset Argument 1
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Date
2018
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Outline}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{R packages are supposed to be "self documenting"}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Ask your R 
\begin_inset CommandInset citation
LatexCommand citep
key "RCore"

\end_inset

 program which packages are already installed:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T,echo=T>>=
\end_layout

\begin_layout Plain Layout

library()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Each listed package has manual pages, examples, and usually more.
\end_layout

\begin_layout Itemize
Launch a Web browser overview of all of this
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

help.start()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Caution
\series default
: Rstudio will block the browser from starting and will force the page into
 the small pane on the bottom right.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{R provides books, help pages, and vignettes}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/help.start.png
	lyxscale 40
	width 11cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{"An Introduction to R"}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
TOP LEFT: 
\emph on
An Introduction to R
\emph default
.
 
\color brown
A Free Book
\color inherit
!
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

Writing R Extensions
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

The R Language Definition
\begin_inset Quotes erd
\end_inset

 are intended for R developers.
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

Packages
\begin_inset Quotes erd
\end_inset

 shows a list of packages currently installed, with links to information
 about them
\end_layout

\begin_layout Enumerate
FAQ (Frequently Asked Questions) bottom center.
 
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

User Manuals
\begin_inset Quotes erd
\end_inset

.
 A listing of the vignettes distributed with R's core packages.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Command Line Access to Help}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
List 
\emph on
functions,
\emph default
 
\emph on
datasets
\emph default
 and 
\emph on
vignettes
\emph default
 in a package.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T,echo=T>>=
\end_layout

\begin_layout Plain Layout

help(package = "stats")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Read the information on a particular function.
 The full form of the request would be 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

help(topic = "lm")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
And you don't have to name the argument, the help function will guess what
 you mean so that same as
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

help("lm")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
They noticed people would forget the quotes, so they enriched the help()
 function to guess the right thing if you leave them out
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

help(lm)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
But users said that's tedious, so they made a shortcut 
\begin_inset Quotes eld
\end_inset

?
\begin_inset Quotes erd
\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T,echo=T>>=
\end_layout

\begin_layout Plain Layout

?lm
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The display of help documents can be delivered either as 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

text
\begin_inset Quotes erd
\end_inset

: output inside the R console
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

html
\begin_inset Quotes erd
\end_inset

: a web page in a browser
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

pdf
\begin_inset Quotes erd
\end_inset

: a pdf document
\end_layout

\end_deeper
\begin_layout Itemize
See what your system assumes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

options("help_type")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Can be configured 
\end_layout

\begin_deeper
\begin_layout Itemize
within the session, e.g.
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

options("help_type" = "text")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
or as an argument to the help function
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

help("ls", help_type = "text")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Your chosen Editor/Graphical user environment will impose its preferences
 (RStudio interferes with this)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{All Help Pages Follow the Same Format}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\series bold
Description
\end_layout

\begin_layout Itemize

\series bold
Usage 
\end_layout

\begin_layout Itemize

\series bold
Arguments
\series default
: The named arguments
\end_layout

\begin_layout Itemize

\series bold
Details
\series default
: particulars author wants to mention
\end_layout

\begin_layout Itemize

\series bold
Value
\series default
: what you get back
\end_layout

\begin_layout Itemize

\series bold
Examples
\series default
: recommended, usually included.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Example of help}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
For example, here's what I see for help on the linear model (lm) function.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lmhelp, echo=T, eval=F, include=F>>=
\end_layout

\begin_layout Plain Layout

?lm
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true,tabsize=2"
inline false
status open

\begin_layout Plain Layout

lm                 package:stats           R Documentation
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Fitting Linear Models
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Description:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	'lm' is used to fit linear models.
 It can be used to carry out regression, single stratum analysis of variance
 and analysis of covariance (although 'aov' may provide a more convenient
 interface for these).
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Usage:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	lm(formula, data, subset, weights, na.action, method = "qr", model = TRUE,
 x = FALSE, y = FALSE, qr = TRUE, singular.ok = TRUE, contrasts = NULL, offset,
 ...)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Arguments:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	formula: an object of class '"formula"' (or one that can be coerced to
 that class): a symbolic description of the model to be fitted.
 The details of model specification are given under 'Details'.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	data: an optional data frame, list or environment (or object coercible
 by 'as.data.frame' to a data frame) containing the variables in the model.
 If not found in 'data', the variables are taken from 'environment(formula)',
 typically the environment from which 'lm' is called.
 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	subset: an optional vector specifying a subset of observations to be used
 in the fitting process.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	weights: an optional vector of weights to be used in the fitting process.
 Should be 'NULL' or a numeric vector.
 If non-NULL, weighted least squares is used with weights 'weights' (that
 is, minimizing 'sum(w*e^2)'); otherwise ordinary least squares is used.
 See also 'Details'.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	na.action: a function which indicates what should happen when the data contain
 'NA's.
 The default is set by the 'na.action' setting of 'options', and is 'na.fail'
 if that is unset.
 The 'factory-fresh' default is 'na.omit'.
 Another possible value is 'NULL', no action.
 Value 'na.exclude' can be useful.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	method: the method to be used; for fitting, currently only 'method = "qr"'
 is supported; 'method = "model.frame"' returns the model frame (the same
 as with 'model = TRUE', see below).
 model, x, y, qr: logicals.
 If 'TRUE' the corresponding components of the fit (the model frame, the
 model matrix, the response, the QR decomposition) are returned.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	singular.ok: logical.
 If 'FALSE' (the default in S but not in R) a singular fit is an error.
 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	contrasts: an optional list.
 See the 'contrasts.arg' of 'model.matrix.default'.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	offset: this can be used to specify an _a priori_ known component to be
 included in the linear predictor during fitting.
 This should be 'NULL' or a numeric vector of length equal to the number
 of cases.
 One or more 'offset' terms can be included in the formula instead or as
 well, and if more than one are specified their sum is used.
 See 'model.offset'.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	...: additional arguments to be passed to the low level regression fitting
 functions (see below).
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Details:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	Models for 'lm' are specified symbolically.
 A typical model has the form 'response $
\backslash
sim$ terms' where 'response' is the (numeric) response vector and 'terms'
 is a series of terms which specifies a linear predictor for 'response'.
 A terms specification of the form 'first + second' indicates all the terms
 in 'first' together with all the terms in 'second' with duplicates removed.
 A specification of the form 'first:second' indicates the set of terms obtained
 by taking the interactions of all terms in 'first' with all terms in 'second'.
 The specification 'first*second' indicates the _cross_ of 'first' and 'second'.
 This is the same as 'first + second + first:second'.
 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	If the formula includes an 'offset', this is evaluated and subtracted from
 the response.
 If 'response' is a matrix a linear model is fitted separately by least-squares
 to each column of the matrix.
 See 'model.matrix' for some further details.
 The terms in the formula will be re-ordered so that main effects come first,
 followed by the interactions, all second-order, all third-order and so
 on: to avoid this pass a 'terms' object as the formula (see 'aov' and 'demo(glm.
vr)' for an example).
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	A formula has an implied intercept term.
 To remove this use either 'y ~ x - 1' or 'y ~ 0 + x'.
 See 'formula' for more details of allowed formulae.
 Non-'NULL' 'weights' can be used to indicate that different observations
 have different variances (with the values in 'weights' being inversely
 proportional to the variances); or equivalently, when the elements of 'weights'
 are positive integers w_i, that each response y_i is the mean of w_i unit-weigh
t observations (including the case that there are w_i observations equal
 to y_i and the data have been summarized).
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	'lm' calls the lower level functions 'lm.fit', etc, see below, for the actual
 numerical computations.
 For programming only, you may consider doing likewise.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	All of 'weights', 'subset' and 'offset' are evaluated in the same way as
 variables in 'formula', that is first in 'data' and then in the environment
 of 'formula'.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Value:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	'lm' returns an object of 'class' '"lm"' or for multiple responses of class
 'c("mlm", "lm")'.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	The functions 'summary' and 'anova' are used to obtain and print a summary
 and analysis of variance table of the results.
 The generic accessor functions 'coefficients', 'effects', 'fitted.values'
 and 'residuals' extract various useful features of the value returned by
 'lm'.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	An object of class '"lm"' is a list containing at least the following component
s: 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	coefficients: a named vector of coefficients
\end_layout

\begin_layout Plain Layout

	residuals: the residuals, that is response minus fitted values.
\end_layout

\begin_layout Plain Layout

	fitted.values: the fitted mean values.
\end_layout

\begin_layout Plain Layout

	rank: the numeric rank of the fitted linear model.
\end_layout

\begin_layout Plain Layout

	weights: (only for weighted fits) the specified weights.
\end_layout

\begin_layout Plain Layout

	df.residual: the residual degrees of freedom.
\end_layout

\begin_layout Plain Layout

	call: the matched call.
\end_layout

\begin_layout Plain Layout

	terms: the 'terms' object used.
\end_layout

\begin_layout Plain Layout

	contrasts: (only where relevant) the contrasts used.
\end_layout

\begin_layout Plain Layout

	xlevels: (only where relevant) a record of the levels of the factors used
 in fitting.
\end_layout

\begin_layout Plain Layout

	offset: the offset used (missing if none were used).
\end_layout

\begin_layout Plain Layout

	y: if requested, the response used.
\end_layout

\begin_layout Plain Layout

	x: if requested, the model matrix used.
\end_layout

\begin_layout Plain Layout

	model: if requested (the default), the model frame used.
\end_layout

\begin_layout Plain Layout

	na.action: (where relevant) information returned by 'model.frame' on the
 special handling of 'NA's.
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	In addition, non-null fits will have components 'assign', 'effects' and
 (unless not requested) 'qr' relating to the linear fit, for use by extractor
 functions such as 'summary' and 'effects'.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Using time series:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	Considerable care is needed when using 'lm' with time series.
 Unless 'na.action = NULL', the time series attributes are stripped from
 the variables before the regression is done.
 (This is necessary as omitting 'NA's would invalidate the time series attribute
s, and if 'NA's are omitted in the middle of the series the result would
 no longer be a regular time series.) Even if the time series attributes
 are retained, they are not used to line up series, so that the time shift
 of a lagged or differenced regressor would be ignored.
 It is good practice to prepare a 'data' argument by 'ts.intersect(..., dframe
 = TRUE)', then apply a suitable 'na.action' to that data frame and call
 'lm' with 'na.action = NULL' so that residuals and fitted values are time
 series.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Note:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	Offsets specified by 'offset' will not be included in predictions by 'predict.lm
', whereas those specified by an offset term in the formula will be.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Author(s):
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	The design was inspired by the S function of the same name described in
 Chambers (1992).
 The implementation of model formula by Ross Ihaka was based on Wilkinson
 & Rogers (1973).
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

References:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	Chambers, J.
 M.
 (1992) _Linear models._ Chapter 4 of _Statistical Models in S_ eds J.
 M.
 Chambers and T.
 J.
 Hastie, Wadsworth  & Brooks/Cole.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	Wilkinson, G.
 N.
 and Rogers, C.
 E.
 (1973) Symbolic descriptions of factorial models for analysis of variance.
 _Applied Statistics_, *22*, 392-9.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

See Also:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	'summary.lm' for summaries and 'anova.lm' for the ANOVA table; 'aov' for
 a different interface.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	The generic functions 'coef', 'effects', 'residuals', 'fitted', 'vcov'.
 'predict.lm' (via 'predict') for prediction, including confidence and prediction
 intervals; 'confint' for confidence intervals of _parameters_.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	'lm.influence' for regression diagnostics, and 'glm' for *generalized* linear
 models.
 
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	The underlying low level functions, 'lm.fit' for plain, and 'lm.wfit' for
 weighted regression fitting.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	More 'lm()' examples are available e.g., in 'anscombe', 'attitude', 'freeny',
 'LifeCycleSavings', 'longley', 'stackloss', 'swiss'.
 'biglm' in package 'biglm' for an alternative way to fit linear models
 to large datasets (especially those with many cases).
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Examples:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	require(graphics)
\end_layout

\begin_layout Plain Layout

	 # # Annette Dobson (1990) "An Introduction to Generalized Linear Models".
\end_layout

\begin_layout Plain Layout

	 # # Page 9: Plant Weight Data.
\end_layout

\begin_layout Plain Layout

	ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
\end_layout

\begin_layout Plain Layout

	trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
\end_layout

\begin_layout Plain Layout

	group <- gl(2,10,20, labels=c("Ctl","Trt"))
\end_layout

\begin_layout Plain Layout

	weight <- c(ctl, trt)
\end_layout

\begin_layout Plain Layout

	lm.D9 <- lm(weight $
\backslash
sim$ group)
\end_layout

\begin_layout Plain Layout

	lm.D90 <- lm(weight $
\backslash
sim$ group - 1) # omitting intercept
\end_layout

\begin_layout Plain Layout

	anova(lm.D9)
\end_layout

\begin_layout Plain Layout

	summary(lm.D90)
\end_layout

\begin_layout Plain Layout

	opar <- par(mfrow = c(2,2), oma = c(0, 0, 1.1, 0))
\end_layout

\begin_layout Plain Layout

	plot(lm.D9, las = 1) # Residuals, Fitted, ...
\end_layout

\begin_layout Plain Layout

	par(opar)
\end_layout

\begin_layout Plain Layout

	## less simple examples in "See Also" above
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{How I read a help page}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Look at the top to figure out 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
what is this supposed to do? and 
\end_layout

\begin_layout Enumerate
what information do I need to give it?
\end_layout

\end_deeper
\begin_layout Enumerate
Run the example to see if I can understand what it does
\end_layout

\begin_layout Enumerate
If still interested, go back to top
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Look more carefully at the arguments
\end_layout

\begin_layout Enumerate
Study the return 
\begin_inset Quotes eld
\end_inset


\series bold
Value
\series default

\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
Look for the 
\begin_inset Quotes eld
\end_inset


\series bold
Details
\series default

\begin_inset Quotes erd
\end_inset

 heading.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Run the Examples described on the help page}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Runs the entire example
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

> example(someFunction)
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
If you use Emacs as your editor, there is a handy feature to run a help
 example line-by-line.
\end_layout

\begin_layout Itemize
One reason why I'm reluctant about 
\begin_inset Quotes eld
\end_inset

RStudio
\begin_inset Quotes erd
\end_inset

 is that access to help and examples is made more difficult.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Vignette: An essay with a package}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
A vignette is a (hopefully) 
\begin_inset Quotes eld
\end_inset

more readable
\begin_inset Quotes erd
\end_inset

 discussion of a package's features
\end_layout

\begin_layout Itemize
Some vignettes are quite excellent! 
\end_layout

\begin_layout Itemize
Load the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rpart
\end_layout

\end_inset

 package (which everybody does have because it is provided with R).
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

library(rpart)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Vignettes are listed with the documentation.
 Toward the bottom of the help output for a package
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

help(package = "rpart")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Soutput}
\end_layout

\begin_layout Plain Layout

Further information is available in the following vignettes in directory
 '/usr/lib/R/library/rpart/doc':
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

longintro: Introduction to Rpart (source, pdf) 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

usercode: User Written Split Functions (source, pdf)
\end_layout

\begin_layout Plain Layout


\backslash
end{Soutput}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Clickable links to vignette in top of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
help.start()
\end_layout

\end_inset

, after navigating to packages, and finding 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rpart
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
loadable by name with the function 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
vignette()
\end_layout

\end_inset

.
 This is a package survey:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

vignette("longintro")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Your system does not have "help" for packages that are not installed}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
help
\end_layout

\end_inset

 (or 
\begin_inset Quotes eld
\end_inset

?
\begin_inset Quotes erd
\end_inset

) looks in your current session for functions in loaded packages.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
help.search
\end_layout

\end_inset

 looks in installed packages (
\begin_inset Quotes eld
\end_inset

??
\begin_inset Quotes erd
\end_inset

 is shortcut).
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

help.search("aov")
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

??aov
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note, oddly, that quotation marks are needed within 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
help.search
\end_layout

\end_inset

 but not with 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
??
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
RSiteSearch("aov")
\end_layout

\end_inset

 looks on the main R website for items items related to the aov function.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Reminder: When you ask for help, provide$
\backslash
ldots$}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Calm down.
 Consider the possibility that you've corrupted the R session.
 Close R, re-start.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Make sure no old failed session was reloaded.
 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
ls()
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 should show no old objects.
\end_layout

\begin_layout Enumerate
This will delete those objects 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
rm(list = ls())
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Then try again to run your code
\end_layout

\end_deeper
\begin_layout Enumerate
If you do write to ask for help, don't forget 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sessionInfo()
\end_layout

\end_inset

 output.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=T>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Even Better: an MRE}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
3.
 MRE: Minimum Reproducible Example.
 The smallest set of code that reproduces the problem you are concerned
 about.
 
\end_layout

\begin_layout Itemize
Produce a small, clear example of the problem you are trying to solve.
 
\end_layout

\begin_layout Itemize
If you do that, the chances are good you will see what you were doing wrong
 (running commands out of order, depending on the wrong variables, etc).
\end_layout

\begin_layout Itemize
If you share the MRE to people when you ask for help, they are much more
 likely to take you seriously.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{References}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../../R"
options "apalike2"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Session}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sess10>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<opts20, include=F>>=
\end_layout

\begin_layout Plain Layout

## Don't delete this.
 It puts the interactive session options
\end_layout

\begin_layout Plain Layout

## back the way they were.
 If this is compiled within a session
\end_layout

\begin_layout Plain Layout

## it is vital to do this.
\end_layout

\begin_layout Plain Layout

options(opts.orig)
\end_layout

\begin_layout Plain Layout

options(par.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
