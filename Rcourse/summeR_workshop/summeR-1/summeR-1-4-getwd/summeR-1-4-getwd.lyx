#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}
\usepackage{array}
\usepackage{longtable}
\usepackage{graphicx}
%\newcommand\makebeamertitle{\frame{\maketitle}}%
\renewcommand{\doiprefix}{doi:\kern-1pt}
\setlength{\bibsep}{10pt}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
%for bold upright roman in math for matrix algebra
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}

%%\input{theme/guidePreambleSweavel.tex} 
%%% From beamer slide:
\usepackage{Sweave}
%% 
%% This controls display of code chunks
\usepackage{ae,fancyvrb,relsize,listings}

\providecommand{\Sweavesize}{\normalsize}
\providecommand{\Rsize}{}
\renewcommand{\Rsize}{\normalsize}
\providecommand{\Routsize}{\scriptsize}

\providecommand{\Rcolor}{\color[rgb]{0.1, 0.1, 0.1}}
\providecommand{\Routcolor}{\color[rgb]{0.2, 0.2, 0.2}}
\providecommand{\Rcommentcolor}{\color[rgb]{0.101, 0.43, 0.432}}

\providecommand{\Rbackground}{\color[gray]{0.91}}
\providecommand{\Routbackground}{\color[gray]{0.935}}
% Can specify \color[gray]{1} for white background or just \color{white}

\lstdefinestyle{Rinput}{
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  basicstyle=\Rsize\Rcolor\ttfamily,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%,
  commentstyle=\Rcommentcolor\ttfamily,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1{==}{{=\,=}}2{--}{{-\,-}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},%
  backgroundcolor=\Rbackground,%
  numbers=left,%
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}%

% Other options of interest:
% frame=single,framerule=0.1pt,framesep=1pt,rulecolor=\color{blue},
% numbers=left,numberstyle=\tiny,stepnumber=1,numbersep=7pt,
% keywordstyle={\bf\Rcolor}

\lstdefinestyle{Routput}{fancyvrb=false,
  literate={~}{{$\sim$}}1{R^2}{{$R^{2}$}}2{^}{{$^{\scriptstyle\wedge}$}}1{R-squared}{{$R^{2}$}}2,%
  basicstyle=\Routcolor\Routsize\ttfamily,%
  backgroundcolor=\Routbackground,
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1 {==}{{=\,=}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},
  numbers=left,
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}

\renewenvironment{Schunk}{}{}
\renewenvironment{Sinput}{}{}
\let\Sinput\relax
\let\Scode\relax
\let\Soutput\relax
\lstnewenvironment{Sinput}{\lstset{style=Rinput}}{}
\lstnewenvironment{Scode}{\lstset{style=Rinput}}{}
\lstnewenvironment{Soutput}{\lstset{style=Routput}}{}
%%end paste in from guidePreambleSweavel.tex


\lstset{tabsize=2, breaklines=true, style=Rinput, breakatwhitespace=true}

\fvset{listparameters={\setlength{\topsep}{0em}}}

\usepackage{xcolor}
\definecolor{light-gray}{gray}{0.90}
\usepackage{realboxes}
\providecommand*{\code}[1]{\texttt{#1}}
\renewcommand{\code}[1]{%
\Colorbox{light-gray}{#1}%
}%
%% end of paste

\usepackage[natbibapa]{apacite}

\definecolor{darkblue}{HTML}{1e2277}

%would be in beamerthemekucrmda%
\mode<presentation>
\definecolor{kublue}{RGB}{0,81,186}
\usefonttheme{professionalfonts}
\useoutertheme{infolines}
\useinnertheme{rounded}
%disable rounded for alert and example boxes%
\setbeamertemplate{blocks}[default]
\usecolortheme{whale}
\usecolortheme{orchid}
\setbeamercolor{structure}{bg=kublue,fg=kublue!90!black}
%\setbeamercolor{structure}{fg=kublue}
\setbeamercolor{frametitle}{bg=kublue}
\setbeamercolor{section in toc}{fg=kublue!40!black}

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}
\beamertemplatenavigationsymbolsempty
%end of beamerthemekucrmda%

%If you want bigger margins, try this:
\setbeamersize{text margin left=05mm,text margin right=10mm} 
\hypersetup{colorlinks,allcolors=.,urlcolor=darkblue}
%Following seems to have no effect now
%\usepackage{handoutWithNotes}
%\pgfpagesuselayout{3 on 1 with notes}[letterpaper, border shrink=5mm]

\titlegraphic{\includegraphics[width=6cm]{theme/logo}}
\logo{\includegraphics[width=5mm]{theme/logomini}}
\end_preamble
\options aspectratio=1609
\use_default_options false
\begin_modules
logicalmkup
sweave
natbibapa
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style \use_bibtopic false
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch semboot
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\branch cfalvm
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%following is LyX shortcut 
\backslash
vb for bold upright math for matrices
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\vb}[1]{\bm{\mathrm{#1}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch R
inverted 0
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% tmpout directory must exist first
\end_layout

\begin_layout Plain Layout

<<tmpout, echo=FALSE, include=FALSE, results=hide>>=
\end_layout

\begin_layout Plain Layout

tdir <- "tmpout"
\end_layout

\begin_layout Plain Layout

if(!dir.exists(tdir)) dir.create(tdir, showWarnings=FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=tmpout/p, split=T, ae=F, height=4.5, width=7}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, include=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

opts.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=100, prompt = " ", continue = "  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE)
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

par.orig <- par(no.readonly = TRUE) 
\end_layout

\begin_layout Plain Layout

pjmar <- c(4.1, 4.1, 1.5, 2.1)
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12, xpd=F)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

if(!file.exists("theme")) file.symlink("../../../../template/theme", "theme")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
getwd: Where Am I? 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
getwd
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul E.
 Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Political Science
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Center for Research Methods and Data Analysis, University of Kansas
\begin_inset Argument 1
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Date
2018
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Outline}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Introduction}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This part is about your operating system and how to understand the way R
 
\begin_inset CommandInset citation
LatexCommand citep
key "RCore"
literal "true"

\end_inset

 interacts with it.
\end_layout

\begin_layout Itemize
Vital Terms: 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
path 
\end_layout

\begin_layout Enumerate
current working directory
\end_layout

\end_deeper
\begin_layout Itemize
Paths may be either relative or absolute
\end_layout

\begin_deeper
\begin_layout Itemize
absolute path begins with highest OS level, such as 
\begin_inset Quotes eld
\end_inset

C:/
\begin_inset Quotes erd
\end_inset

 in Windows
\end_layout

\begin_layout Itemize
relative begins with current working directory as starting point, move 
\begin_inset Quotes eld
\end_inset

down
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

up
\begin_inset Quotes erd
\end_inset

 from there.
 
\end_layout

\end_deeper
\begin_layout Itemize
Key R functions that are emphasized
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
getwd()
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
setwd()
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{When R starts, Where are you?}
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
4cm
\end_layout

\begin_layout Itemize
When you start R, 
\begin_inset Quotes eld
\end_inset

where are you
\begin_inset Quotes erd
\end_inset

?
\end_layout

\begin_layout Itemize
This example: I started R in my Linux home directory, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

/home/pauljohn
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
getwd() 
\begin_inset Formula $\Longleftrightarrow$
\end_inset

 get Working Directory (WD)!
\end_layout

\begin_layout Column
8cm
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/terminal-01.png
	width 8cm

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Where Am I}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Sorry: this is one of the worst problems of modern GUI.
 Users are encouraged to give up control of their files.
\end_layout

\begin_layout Itemize
Launch R from the 
\end_layout

\begin_deeper
\begin_layout Itemize
Windows R icon, or 
\end_layout

\begin_layout Itemize
in the Mac Finder
\end_layout

\end_deeper
\begin_layout Itemize
Ask R what it thinks is your current working directory: 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

getwd()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Working Directory
\series default
: default directory where files are found or written
\end_layout

\begin_layout Itemize
If R thinks you are working with files in one place, but you may wish it
 were working with files in another place, then necessary to reset with
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
setwd()
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

setwd("...some...folder...you...specify...correctly")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Some GUIs will have a pull down menu to change the working directory.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{You Choose: Relative or Absolute Paths}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The output from getwd() is an absolute PATH.
 
\end_layout

\begin_layout Itemize
The FULL PATH would be (long, boring, typo-prone) like
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Mac: 
\begin_inset Quotes eld
\end_inset

/user/your-name/Documents/psych790/exercise-1/R
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Windows: 
\begin_inset Quotes eld
\end_inset

C:/users/your-name-here/Documents/psych790/exercise-1/R
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
We can use RELATIVE PATHs to make things a little easier
\end_layout

\begin_deeper
\begin_layout Standard
Relative path: If you don't specify an absolute, full path, R uses the relative
 directory address to look for files and folders.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Why I prefer Relative Paths}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If a student's R program begins with a path-setter, like
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

setwd("C:/users/pauljohn/Documents/schoolwork/stats/exercise1")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I cannot run that code 
\begin_inset Quotes eld
\end_inset

as is
\begin_inset Quotes erd
\end_inset

.
 However, if the student sends me the 
\begin_inset Quotes eld
\end_inset

exercise1
\begin_inset Quotes erd
\end_inset

 project folder, and uses relative paths inside the R code, then I can run
 it without editing.
\end_layout

\begin_layout Itemize
YES, I mean forward slashes, even in Windows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Windows Slashes
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
R (and programming in general) uses back slash is an 
\begin_inset Quotes eld
\end_inset

escape symbol
\begin_inset Quotes erd
\end_inset

,
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset


\backslash
n
\begin_inset Quotes erd
\end_inset

 a New Line in a text string
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset


\backslash
t
\begin_inset Quotes erd
\end_inset

 a TAB inserted
\end_layout

\end_deeper
\begin_layout Itemize
To avoid confusion, PATHS in Windows can be written with forward slashes.
\end_layout

\begin_layout Itemize
Repeat, even in Windows, 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
we do not type 
\begin_inset Quotes eld
\end_inset

backslashes
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize
If you run 
\begin_inset Quotes eld
\end_inset

getwd()
\begin_inset Quotes erd
\end_inset

, and R says this:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Quote
\begin_inset Quotes eld
\end_inset

C:
\backslash
user
\backslash
your-name-here
\backslash
Documents
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Use all of your 
\emph on
mental super powers
\emph default
 to see that as 
\end_layout

\begin_layout Quote
\begin_inset Quotes eld
\end_inset

C:/user/your-name-here/Documents
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Quote
Because if you want to specify a path in windows, you need to use the forward
 slashes.
\end_layout

\end_deeper
\begin_layout Frame
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
My Proposal
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Keep a project folder
\end_layout

\begin_layout Itemize
Subdirectories 
\begin_inset Quotes eld
\end_inset

R
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

data
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

output
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

workingdata
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Open an R script folder in the R folder.
\end_layout

\begin_deeper
\begin_layout Itemize
Imagine a happy future in which R automatically knows your working directory!
\end_layout

\begin_layout Itemize
Use a file manager to launch Emacs, Notepad++, or RStudio on your R file
 and you will be in that happy place!
\end_layout

\end_deeper
\begin_layout Itemize
When you need to share your 
\begin_inset Quotes eld
\end_inset

project
\begin_inset Quotes erd
\end_inset

 to somebody else, Zip together the whole folder, including the directory
 name, and send it.
 They will be able to run without changing anything.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Relative file paths}
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Standard
Suppose your directories are like so
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "tabsize=2"
inline false
status open

\begin_layout Plain Layout

school
\end_layout

\begin_layout Plain Layout

	pols706
\end_layout

\begin_layout Plain Layout

		project1
\end_layout

\begin_layout Plain Layout

			R
\end_layout

\begin_layout Plain Layout

			data
\end_layout

\begin_layout Plain Layout

			output
\end_layout

\end_inset


\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
Write an R file in the R directory.
\end_layout

\begin_layout Itemize
Start R with that working directory, then...
\end_layout

\begin_layout Itemize
Use relative paths like 
\begin_inset Quotes eld
\end_inset

../data
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

../output
\begin_inset Quotes erd
\end_inset

 in R programs.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\end_deeper
\begin_layout ColumnsTopAligned
Oh my gosh.
 Two dots and a slash?
\end_layout

\begin_layout ColumnsTopAligned

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Notice the 2 dots
\end_layout

\end_inset

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size larger
\begin_inset Flex Code
status open

\begin_layout Plain Layout

\size larger
../
\end_layout

\end_inset

 means go up one level
\end_layout

\begin_layout Itemize
Read data from 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"../data/whatever.xlsx"
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Write graphs to output, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
"../output/whatever.pdf"
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim,allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{initProject() in kutils}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Open R and set the working directory in a project folder.
 Run setwd if you need to
\end_layout

\begin_layout Itemize
I choose a directory named 
\begin_inset Quotes eld
\end_inset

/tmp/proj
\begin_inset Quotes erd
\end_inset

 for demonstration
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

library(kutils)
\end_layout

\begin_layout Plain Layout

initProject()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout


\backslash
begin{Soutput}
\end_layout

\begin_layout Plain Layout

> initProject()
\end_layout

\begin_layout Plain Layout

Creating: data
\end_layout

\begin_layout Plain Layout

Creating: workingdata
\end_layout

\begin_layout Plain Layout

Creating: output
\end_layout

\begin_layout Plain Layout

Creating: tmp
\end_layout

\begin_layout Plain Layout

Creating: lit
\end_layout

\begin_layout Plain Layout

Creating: writeup
\end_layout

\begin_layout Plain Layout

Creating: R
\end_layout

\begin_layout Plain Layout

Initialized empty shared Git repository in /tmp/proj/.git/
\end_layout

\begin_layout Plain Layout

[master (root-commit) 7ef920d] Initialized project in /tmp/proj
\end_layout

\begin_layout Plain Layout

 2 files changed, 5 insertions(+)  create mode 100644 ChangeLog
\end_layout

\begin_layout Plain Layout

 create mode 100644 README.md
\end_layout

\begin_layout Plain Layout

Please consider creating a remote repository to which this repo should be
 linked
\end_layout

\begin_layout Plain Layout

[1] "/tmp/proj"
\end_layout

\begin_layout Plain Layout


\backslash
end{Soutput}
\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
After that, the project should be laid out with several folders.
\end_layout

\begin_layout Itemize
Close, R, and use the file manager to navigate into the project's R folder
\end_layout

\begin_layout Itemize
Open 
\begin_inset Quotes eld
\end_inset

template.R
\begin_inset Quotes erd
\end_inset

 with your editor
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Recall PDF example from a previous lecture?}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Put these lines into your R script
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<p5, echo=T, include=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

x <- rgamma(100, 1.5, 2.2)
\end_layout

\begin_layout Plain Layout

y <- rnorm(100) + 0.2 * x
\end_layout

\begin_layout Plain Layout

pdf("output/scatter1.pdf", height=6, width=6, paper="special")
\end_layout

\begin_layout Plain Layout

plot(y ~ x, main="Scatterplot or Bust!")
\end_layout

\begin_layout Plain Layout

dev.off() #turns off pdf output device
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout


\backslash
input{tmpout/p-p5.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
That creates a pdf and writes it in the output.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Where is the big payoff here?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Easy re-production of graphs when the data changes slightly
\end_layout

\begin_layout Itemize
Ability to mass-produce graphs.
 I've produced thousands of graph files, which I could later snoop through
 to find something interesting.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{References}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../../R"
options "apalike2"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Session}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sess10>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<opts20, include=F>>=
\end_layout

\begin_layout Plain Layout

## Don't delete this.
 It puts the interactive session options
\end_layout

\begin_layout Plain Layout

## back the way they were.
 If this is compiled within a session
\end_layout

\begin_layout Plain Layout

## it is vital to do this.
\end_layout

\begin_layout Plain Layout

options(opts.orig)
\end_layout

\begin_layout Plain Layout

options(par.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
