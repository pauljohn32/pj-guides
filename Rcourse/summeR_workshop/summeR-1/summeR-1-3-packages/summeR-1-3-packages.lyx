#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}
\usepackage{array}
\usepackage{longtable}
\usepackage{graphicx}
\newcommand\makebeamertitle{\frame{\maketitle}}%
\renewcommand{\doiprefix}{doi:\kern-1pt}
\setlength{\bibsep}{10pt}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
%for bold upright roman in math for matrix algebra
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}

%%\input{theme/guidePreambleSweavel.tex} 
%%% From beamer slide:
\usepackage{Sweave}
%% 
%% This controls display of code chunks
\usepackage{ae,fancyvrb,relsize,listings}

\providecommand{\Sweavesize}{\normalsize}
\providecommand{\Rsize}{}
\renewcommand{\Rsize}{\normalsize}
\providecommand{\Routsize}{\scriptsize}

\providecommand{\Rcolor}{\color[rgb]{0.1, 0.1, 0.1}}
\providecommand{\Routcolor}{\color[rgb]{0.2, 0.2, 0.2}}
\providecommand{\Rcommentcolor}{\color[rgb]{0.101, 0.43, 0.432}}

\providecommand{\Rbackground}{\color[gray]{0.91}}
\providecommand{\Routbackground}{\color[gray]{0.935}}
% Can specify \color[gray]{1} for white background or just \color{white}

\lstdefinestyle{Rinput}{
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  basicstyle=\Rsize\Rcolor\ttfamily,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%,
  commentstyle=\Rcommentcolor\ttfamily,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1{==}{{=\,=}}2{--}{{-\,-}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},%
  backgroundcolor=\Rbackground,%
  numbers=left,%
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}%

% Other options of interest:
% frame=single,framerule=0.1pt,framesep=1pt,rulecolor=\color{blue},
% numbers=left,numberstyle=\tiny,stepnumber=1,numbersep=7pt,
% keywordstyle={\bf\Rcolor}

\lstdefinestyle{Routput}{fancyvrb=false,
  literate={~}{{$\sim$}}1{R^2}{{$R^{2}$}}2{^}{{$^{\scriptstyle\wedge}$}}1{R-squared}{{$R^{2}$}}2,%
  basicstyle=\Routcolor\Routsize\ttfamily,%
  backgroundcolor=\Routbackground,
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1 {==}{{=\,=}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},
  numbers=left,
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}

\renewenvironment{Schunk}{}{}
\renewenvironment{Sinput}{}{}
\let\Sinput\relax
\let\Scode\relax
\let\Soutput\relax
\lstnewenvironment{Sinput}{\lstset{style=Rinput}}{}
\lstnewenvironment{Scode}{\lstset{style=Rinput}}{}
\lstnewenvironment{Soutput}{\lstset{style=Routput}}{}
%%end paste in from guidePreambleSweavel.tex


\lstset{tabsize=2, breaklines=true, style=Rinput, breakatwhitespace=true}

\fvset{listparameters={\setlength{\topsep}{0em}}}

\usepackage{xcolor}
\definecolor{light-gray}{gray}{0.90}
\usepackage{realboxes}
\providecommand*{\code}[1]{\texttt{#1}}
\renewcommand{\code}[1]{%
\Colorbox{light-gray}{#1}%
}%
%% end of paste

\usepackage[natbibapa]{apacite}

\definecolor{darkblue}{HTML}{1e2277}

%would be in beamerthemekucrmda%
\mode<presentation>
\definecolor{kublue}{RGB}{0,81,186}
\usefonttheme{professionalfonts}
\useoutertheme{infolines}
\useinnertheme{rounded}
%disable rounded for alert and example boxes%
\setbeamertemplate{blocks}[default]
\usecolortheme{whale}
\usecolortheme{orchid}
\setbeamercolor{structure}{bg=kublue,fg=kublue!90!black}
%\setbeamercolor{structure}{fg=kublue}
\setbeamercolor{frametitle}{bg=kublue}
\setbeamercolor{section in toc}{fg=kublue!40!black}

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}
\beamertemplatenavigationsymbolsempty
%end of beamerthemekucrmda%

%If you want bigger margins, try this:
\setbeamersize{text margin left=05mm,text margin right=10mm} 
\hypersetup{colorlinks,allcolors=.,urlcolor=darkblue}
%Following seems to have no effect now
%\usepackage{handoutWithNotes}
%\pgfpagesuselayout{3 on 1 with notes}[letterpaper, border shrink=5mm]

\titlegraphic{\includegraphics[width=6cm]{theme/logo}}
\logo{\includegraphics[width=5mm]{theme/logomini}}
\end_preamble
\options aspectratio=1609
\use_default_options false
\begin_modules
logicalmkup
sweave
natbibapa
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style 
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch semboot
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\branch cfalvm
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%following is LyX shortcut 
\backslash
vb for bold upright math for matrices
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\vb}[1]{\bm{\mathrm{#1}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch R
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% tmpout directory must exist first
\end_layout

\begin_layout Plain Layout

<<tmpout, echo=FALSE, include=FALSE, results=hide>>=
\end_layout

\begin_layout Plain Layout

tdir <- "tmpout"
\end_layout

\begin_layout Plain Layout

if(!dir.exists(tdir)) dir.create(tdir, showWarnings=FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=tmpout/t,split=T,ae=F,height=4.5,width=7}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, include=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

opts.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=100, prompt = " ", continue = "  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE)
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

par.orig <- par(no.readonly = TRUE) 
\end_layout

\begin_layout Plain Layout

pjmar <- c(4.1, 4.1, 1.5, 2.1)
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12, xpd=F)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

if(!file.exists("theme")) file.symlink("../../../../template/theme", "theme")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
R packages 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Packages
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul E.
 Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Johnson 
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Political Science
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Center for Research Methods and Data Analysis, University of Kansas
\begin_inset Argument 1
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Date
2018
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Outline}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
R is Package Oriented
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{An Engine with a lot of Packages}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ross Ihaka and Robert Gentleman created the original R 
\begin_inset CommandInset citation
LatexCommand citep
key "RCore"

\end_inset

 program in the mid 1990s
\end_layout

\begin_layout Itemize
a computational engine that could tolerate the addition of features in the
 form of 
\begin_inset Quotes eld
\end_inset

packages
\begin_inset Quotes erd
\end_inset

 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
New Zealand junk car story
\end_layout

\end_deeper
\begin_layout Itemize
User commands followed the style of the S language (Bell Labs) but internal
 logic different
\end_layout

\begin_layout Itemize
R's core functionality, the part that users 
\emph on
think
\emph default
 is R itself, is drawn from the packages 
\begin_inset Quotes eld
\end_inset

graphics
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

stats
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
What's in your wallet?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Start R, what packages are loaded?}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Run 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
sessionInfo()
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
tiny}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{On a new install of R in MS Windows, I have $
\backslash
ldots$}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/R-win-library-1.png
	width 8cm

\end_inset


\end_layout

\begin_layout Standard
Listing combines the packages 
\emph on
within
\emph default
 R's distribution, plus the 
\emph on
recommended
\emph default
 packages that were provided with R
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks, containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Lets check my Laptop}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
On 2017-05-13:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F,echo=T,include=T>>=
\end_layout

\begin_layout Plain Layout

library()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\tiny},tabsize=4"
inline false
status open

\begin_layout Plain Layout

Packages in library '/home/pauljohn/R/x86_64-pc-linux-gnu-library/3.3':
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

abind                   Combine Multidimensional Arrays
\end_layout

\begin_layout Plain Layout

acepack                 ACE and AVAS for Selecting Multiple Regression
\end_layout

\begin_layout Plain Layout

                        Transformations
\end_layout

\begin_layout Plain Layout

AER                     Applied Econometrics with R
\end_layout

\begin_layout Plain Layout

afex                    Analysis of Factorial Experiments
\end_layout

\begin_layout Plain Layout

akima                   Interpolation of Irregularly and Regularly
\end_layout

\begin_layout Plain Layout

                        Spaced Data
\end_layout

\begin_layout Plain Layout

alr4                    Data to accompany Applied Linear Regression 4rd
\end_layout

\begin_layout Plain Layout

                        edition
\end_layout

\begin_layout Plain Layout

Amelia                  A Program for Missing Data
\end_layout

\begin_layout Plain Layout

animation               A Gallery of Animations in Statistics and
\end_layout

\begin_layout Plain Layout

                        Utilities to Create Animations
\end_layout

\begin_layout Plain Layout

apsrtable               apsrtable model-output formatter for social
\end_layout

\begin_layout Plain Layout

                        science
\end_layout

\begin_layout Plain Layout

arm                     Data Analysis Using Regression and
\end_layout

\begin_layout Plain Layout

                        Multilevel/Hierarchical Models
\end_layout

\begin_layout Plain Layout

assertthat              Easy pre and post assertions.
\end_layout

\begin_layout Plain Layout

backports               Reimplementations of Functions Introduced Since
\end_layout

\begin_layout Plain Layout

                        R-3.0.0
\end_layout

\begin_layout Plain Layout

base64                  Base64 Encoder and Decoder
\end_layout

\begin_layout Plain Layout

base64enc               Tools for base64 encoding
\end_layout

\begin_layout Plain Layout

BB                      Solving and Optimizing Large-Scale Nonlinear
\end_layout

\begin_layout Plain Layout

                        Systems
\end_layout

\begin_layout Plain Layout

bdsmatrix               Routines for Block Diagonal Symmetric matrices
\end_layout

\begin_layout Plain Layout

BH                      Boost C++ Header Files
\end_layout

\begin_layout Plain Layout

biclust                 BiCluster Algorithms
\end_layout

\begin_layout Plain Layout

BiocGenerics            S4 generic functions for Bioconductor
\end_layout

\begin_layout Plain Layout

bit                     A class for vectors of 1-bit booleans
\end_layout

\begin_layout Plain Layout

bit64                   A S3 Class for Vectors of 64bit Integers
\end_layout

\begin_layout Plain Layout

bitops                  Bitwise Operations
\end_layout

\begin_layout Plain Layout

BMS                     Bayesian Model Averaging Library
\end_layout

\begin_layout Plain Layout

bookdown                Authoring Books and Technical Documents with R
\end_layout

\begin_layout Plain Layout

                        Markdown
\end_layout

\begin_layout Plain Layout

boot                    Bootstrap Functions (Originally by Angelo Canty
\end_layout

\begin_layout Plain Layout

                        for S)
\end_layout

\begin_layout Plain Layout

brew                    Templating Framework for Report Generation
\end_layout

\begin_layout Plain Layout

broom                   Convert Statistical Analysis Objects into Tidy
\end_layout

\begin_layout Plain Layout

                        Data Frames
\end_layout

\begin_layout Plain Layout

car                     Companion to Applied Regression
\end_layout

\begin_layout Plain Layout

caTools                 Tools: moving window statistics, GIF, Base64,
\end_layout

\begin_layout Plain Layout

                        ROC AUC, etc.
\end_layout

\begin_layout Plain Layout

checkmate               Fast and Versatile Argument Checks
\end_layout

\begin_layout Plain Layout

chron                   Chronological Objects which can Handle Dates
\end_layout

\begin_layout Plain Layout

                        and Times
\end_layout

\begin_layout Plain Layout

cluster                 "Finding Groups in Data": Cluster Analysis
\end_layout

\begin_layout Plain Layout

                        Extended Rousseeuw et al.
\end_layout

\begin_layout Plain Layout

coda                    Output Analysis and Diagnostics for MCMC
\end_layout

\begin_layout Plain Layout

coin                    Conditional Inference Procedures in a
\end_layout

\begin_layout Plain Layout

                        Permutation Test Framework
\end_layout

\begin_layout Plain Layout

colorspace              Color Space Manipulation
\end_layout

\begin_layout Plain Layout

commonmark              High Performance CommonMark and Github Markdown
\end_layout

\begin_layout Plain Layout

                        Rendering in R
\end_layout

\begin_layout Plain Layout

compare                 Comparing Objects for Differences
\end_layout

\begin_layout Plain Layout

coxme                   Mixed Effects Cox Models
\end_layout

\begin_layout Plain Layout

crayon                  Colored Terminal Output
\end_layout

\begin_layout Plain Layout

crmda                   The KU CRMDA Private Package
\end_layout

\begin_layout Plain Layout

cubature                Adaptive Multivariate Integration over
\end_layout

\begin_layout Plain Layout

                        Hypercubes
\end_layout

\begin_layout Plain Layout

curl                    A Modern and Flexible Web Client for R
\end_layout

\begin_layout Plain Layout

data.table              Extension of 'data.frame'
\end_layout

\begin_layout Plain Layout

DBI                     R Database Interface
\end_layout

\begin_layout Plain Layout

ddst                    Data Driven Smooth Tests
\end_layout

\begin_layout Plain Layout

deldir                  Delaunay Triangulation and Dirichlet (Voronoi)
\end_layout

\begin_layout Plain Layout

                        Tessellation
\end_layout

\begin_layout Plain Layout

DEoptimR                Differential Evolution Optimization in Pure R
\end_layout

\begin_layout Plain Layout

desc                    Manipulate DESCRIPTION Files
\end_layout

\begin_layout Plain Layout

dfoptim                 Derivative-Free Optimization
\end_layout

\begin_layout Plain Layout

dichromat               Color Schemes for Dichromats
\end_layout

\begin_layout Plain Layout

digest                  Create Compact Hash Digests of R Objects
\end_layout

\begin_layout Plain Layout

diptest                 Hartigan's Dip Test Statistic for Unimodality -
\end_layout

\begin_layout Plain Layout

                        Corrected
\end_layout

\begin_layout Plain Layout

doParallel              Foreach Parallel Adaptor for the 'parallel'
\end_layout

\begin_layout Plain Layout

                        Package
\end_layout

\begin_layout Plain Layout

dplyr                   A Grammar of Data Manipulation
\end_layout

\begin_layout Plain Layout

effects                 Effect Displays for Linear, Generalized Linear,
\end_layout

\begin_layout Plain Layout

                        and Other Models
\end_layout

\begin_layout Plain Layout

eigenmodel              Semiparametric factor and regression models for
\end_layout

\begin_layout Plain Layout

                        symmetric relational data
\end_layout

\begin_layout Plain Layout

emplik                  Empirical Likelihood Ratio for
\end_layout

\begin_layout Plain Layout

                        Censored/Truncated Data
\end_layout

\begin_layout Plain Layout

ergm                    Fit, Simulate and Diagnose Exponential-Family
\end_layout

\begin_layout Plain Layout

                        Models for Networks
\end_layout

\begin_layout Plain Layout

ergm.count              Fit, Simulate and Diagnose Exponential-Family
\end_layout

\begin_layout Plain Layout

                        Models for Networks with Count Edges
\end_layout

\begin_layout Plain Layout

estimability            Tools for Assessing Estimability of Linear
\end_layout

\begin_layout Plain Layout

                        Predictions
\end_layout

\begin_layout Plain Layout

evaluate                Parsing and Evaluation Tools that Provide More
\end_layout

\begin_layout Plain Layout

                        Details than the Default
\end_layout

\begin_layout Plain Layout

evd                     Functions for Extreme Value Distributions
\end_layout

\begin_layout Plain Layout

faraway                 Functions and Datasets for Books by Julian
\end_layout

\begin_layout Plain Layout

                        Faraway
\end_layout

\begin_layout Plain Layout

flexclust               Flexible Cluster Algorithms
\end_layout

\begin_layout Plain Layout

flexmix                 Flexible Mixture Modeling
\end_layout

\begin_layout Plain Layout

foreach                 Provides Foreach Looping Construct for R
\end_layout

\begin_layout Plain Layout

formatR                 Format R Code Automatically
\end_layout

\begin_layout Plain Layout

Formula                 Extended Model Formulas
\end_layout

\begin_layout Plain Layout

fpc                     Flexible Procedures for Clustering
\end_layout

\begin_layout Plain Layout

gamm4                   Generalized Additive Mixed Models using 'mgcv'
\end_layout

\begin_layout Plain Layout

                        and 'lme4'
\end_layout

\begin_layout Plain Layout

gdata                   Various R Programming Tools for Data
\end_layout

\begin_layout Plain Layout

                        Manipulation
\end_layout

\begin_layout Plain Layout

geepack                 Generalized Estimating Equation Package
\end_layout

\begin_layout Plain Layout

ggnetwork               Geometries to Plot Networks with 'ggplot2'
\end_layout

\begin_layout Plain Layout

ggplot2                 Create Elegant Data Visualisations Using the
\end_layout

\begin_layout Plain Layout

                        Grammar of Graphics
\end_layout

\begin_layout Plain Layout

ggrepel                 Repulsive Text and Label Geoms for 'ggplot2'
\end_layout

\begin_layout Plain Layout

GLDEX                   Fitting Single and Mixture of Generalised
\end_layout

\begin_layout Plain Layout

                        Lambda Distributions (RS and FMKL) using
\end_layout

\begin_layout Plain Layout

                        Various Methods
\end_layout

\begin_layout Plain Layout

GLDreg                  Fit GLD Regression Model and GLD Quantile
\end_layout

\begin_layout Plain Layout

                        Regression Model to Empirical Data
\end_layout

\begin_layout Plain Layout

gmp                     Multiple Precision Arithmetic
\end_layout

\begin_layout Plain Layout

goftest                 Classical Goodness-of-Fit Tests for Univariate
\end_layout

\begin_layout Plain Layout

                        Distributions
\end_layout

\begin_layout Plain Layout

gplots                  Various R Programming Tools for Plotting Data
\end_layout

\begin_layout Plain Layout

graph                   graph: A package to handle graph data
\end_layout

\begin_layout Plain Layout

                        structures
\end_layout

\begin_layout Plain Layout

gridBase                Integration of base and grid graphics
\end_layout

\begin_layout Plain Layout

gridExtra               Miscellaneous Functions for "Grid" Graphics
\end_layout

\begin_layout Plain Layout

gsheet                  Download Google Sheets Using Just the URL
\end_layout

\begin_layout Plain Layout

gtable                  Arrange 'Grobs' in Tables
\end_layout

\begin_layout Plain Layout

gtools                  Various R Programming Tools
\end_layout

\begin_layout Plain Layout

haven                   Import and Export 'SPSS', 'Stata' and 'SAS'
\end_layout

\begin_layout Plain Layout

                        Files
\end_layout

\begin_layout Plain Layout

HH                      Statistical Analysis and Data Display:
\end_layout

\begin_layout Plain Layout

                        Heiberger and Holland
\end_layout

\begin_layout Plain Layout

highr                   Syntax Highlighting for R Source Code
\end_layout

\begin_layout Plain Layout

Hmisc                   Harrell Miscellaneous
\end_layout

\begin_layout Plain Layout

hms                     Pretty Time of Day
\end_layout

\begin_layout Plain Layout

HSAUR2                  A Handbook of Statistical Analyses Using R (2nd
\end_layout

\begin_layout Plain Layout

                        Edition)
\end_layout

\begin_layout Plain Layout

htmlTable               Advanced Tables for Markdown/HTML
\end_layout

\begin_layout Plain Layout

htmltools               Tools for HTML
\end_layout

\begin_layout Plain Layout

htmlwidgets             HTML Widgets for R
\end_layout

\begin_layout Plain Layout

httpuv                  HTTP and WebSocket Server Library
\end_layout

\begin_layout Plain Layout

httr                    Tools for Working with URLs and HTTP
\end_layout

\begin_layout Plain Layout

ICC                     Facilitating Estimation of the Intraclass
\end_layout

\begin_layout Plain Layout

                        Correlation Coefficient
\end_layout

\begin_layout Plain Layout

igraph                  Network Analysis and Visualization
\end_layout

\begin_layout Plain Layout

igraphdata              A Collection of Network Data Sets for the
\end_layout

\begin_layout Plain Layout

                        'igraph' Package
\end_layout

\begin_layout Plain Layout

igraphtosonia           Convert iGraph graps to SoNIA .son files
\end_layout

\begin_layout Plain Layout

inline                  Functions to Inline C, C++, Fortran Function
\end_layout

\begin_layout Plain Layout

                        Calls from R
\end_layout

\begin_layout Plain Layout

invgamma                The Inverse Gamma Distribution
\end_layout

\begin_layout Plain Layout

irlba                   Fast Truncated SVD, PCA and Symmetric
\end_layout

\begin_layout Plain Layout

                        Eigendecomposition for Large Dense and Sparse
\end_layout

\begin_layout Plain Layout

                        Matrices
\end_layout

\begin_layout Plain Layout

iterators               Provides Iterator Construct for R
\end_layout

\begin_layout Plain Layout

jsonlite                A Robust, High Performance JSON Parser and
\end_layout

\begin_layout Plain Layout

                        Generator for R
\end_layout

\begin_layout Plain Layout

kernlab                 Kernel-Based Machine Learning Lab
\end_layout

\begin_layout Plain Layout

knitr                   A General-Purpose Package for Dynamic Report
\end_layout

\begin_layout Plain Layout

                        Generation in R
\end_layout

\begin_layout Plain Layout

kutils                  Project Management Tools
\end_layout

\begin_layout Plain Layout

labeling                Axis Labeling
\end_layout

\begin_layout Plain Layout

languageR               Data sets and functions with "Analyzing
\end_layout

\begin_layout Plain Layout

                        Linguistic Data: A practical introduction to
\end_layout

\begin_layout Plain Layout

                        statistics".
\end_layout

\begin_layout Plain Layout

latentnet               Latent Position and Cluster Models for
\end_layout

\begin_layout Plain Layout

                        Statistical Networks
\end_layout

\begin_layout Plain Layout

latticeExtra            Extra Graphical Utilities Based on Lattice
\end_layout

\begin_layout Plain Layout

lavaan                  Latent Variable Analysis
\end_layout

\begin_layout Plain Layout

lazyeval                Lazy (Non-Standard) Evaluation
\end_layout

\begin_layout Plain Layout

leaps                   Regression Subset Selection
\end_layout

\begin_layout Plain Layout

lme4                    Linear Mixed-Effects Models using 'Eigen' and
\end_layout

\begin_layout Plain Layout

                        S4
\end_layout

\begin_layout Plain Layout

lmtest                  Testing Linear Regression Models
\end_layout

\begin_layout Plain Layout

lpSolve                 Interface to 'Lp_solve' v.
 5.5 to Solve
\end_layout

\begin_layout Plain Layout

                        Linear/Integer Programs
\end_layout

\begin_layout Plain Layout

lsmeans                 Least-Squares Means
\end_layout

\begin_layout Plain Layout

lubridate               Make Dealing with Dates a Little Easier
\end_layout

\begin_layout Plain Layout

magrittr                A Forward-Pipe Operator for R
\end_layout

\begin_layout Plain Layout

markdown                'Markdown' Rendering for R
\end_layout

\begin_layout Plain Layout

MatchIt                 MatchIt: Nonparametric Preprocessing for
\end_layout

\begin_layout Plain Layout

                        Parametric Casual Inference
\end_layout

\begin_layout Plain Layout

MatrixModels            Modelling with Sparse And Dense Matrices
\end_layout

\begin_layout Plain Layout

matrixStats             Functions that Apply to Rows and Columns of
\end_layout

\begin_layout Plain Layout

                        Matrices (and to Vectors)
\end_layout

\begin_layout Plain Layout

mclust                  Gaussian Mixture Modelling for Model-Based
\end_layout

\begin_layout Plain Layout

                        Clustering, Classification, and Density
\end_layout

\begin_layout Plain Layout

                        Estimation
\end_layout

\begin_layout Plain Layout

mcmc                    Markov Chain Monte Carlo
\end_layout

\begin_layout Plain Layout

MCMCpack                Markov Chain Monte Carlo (MCMC) Package
\end_layout

\begin_layout Plain Layout

memisc                  Tools for Management of Survey Data and the
\end_layout

\begin_layout Plain Layout

                        Presentation of Analysis Results
\end_layout

\begin_layout Plain Layout

memoise                 Memoisation of Functions
\end_layout

\begin_layout Plain Layout

MEMSS                   Data sets from Mixed-effects Models in S
\end_layout

\begin_layout Plain Layout

microbenchmark          Accurate Timing Functions
\end_layout

\begin_layout Plain Layout

mime                    Map Filenames to MIME Types
\end_layout

\begin_layout Plain Layout

miniUI                  Shiny UI Widgets for Small Screens
\end_layout

\begin_layout Plain Layout

minqa                   Derivative-free optimization algorithms by
\end_layout

\begin_layout Plain Layout

                        quadratic approximation
\end_layout

\begin_layout Plain Layout

mitools                 Tools for multiple imputation of missing data
\end_layout

\begin_layout Plain Layout

mixer                   Random graph clustering
\end_layout

\begin_layout Plain Layout

mixtools                Tools for Analyzing Finite Mixture Models
\end_layout

\begin_layout Plain Layout

mlmRev                  Examples from Multilevel Modelling Software
\end_layout

\begin_layout Plain Layout

                        Review
\end_layout

\begin_layout Plain Layout

mnormt                  The Multivariate Normal and t Distributions
\end_layout

\begin_layout Plain Layout

modeltools              Tools and Classes for Statistical Models
\end_layout

\begin_layout Plain Layout

multcomp                Simultaneous Inference in General Parametric
\end_layout

\begin_layout Plain Layout

                        Models
\end_layout

\begin_layout Plain Layout

munsell                 Utilities for Using Munsell Colours
\end_layout

\begin_layout Plain Layout

mvtnorm                 Multivariate Normal and t Distributions
\end_layout

\begin_layout Plain Layout

NetCluster              Clustering for networks
\end_layout

\begin_layout Plain Layout

NetData                 Network Data for McFarland's SNA R labs
\end_layout

\begin_layout Plain Layout

network                 Classes for Relational Data
\end_layout

\begin_layout Plain Layout

networkDynamic          Dynamic Extensions for Network Objects
\end_layout

\begin_layout Plain Layout

networkDynamicData      Dynamic (Longitudinal) Network Datasets
\end_layout

\begin_layout Plain Layout

nFactors                Parallel Analysis and Non Graphical Solutions
\end_layout

\begin_layout Plain Layout

                        to the Cattell Scree Test
\end_layout

\begin_layout Plain Layout

nloptr                  R interface to NLopt
\end_layout

\begin_layout Plain Layout

NLP                     Natural Language Processing Infrastructure
\end_layout

\begin_layout Plain Layout

NMF                     Algorithms and Framework for Nonnegative Matrix
\end_layout

\begin_layout Plain Layout

                        Factorization (NMF)
\end_layout

\begin_layout Plain Layout

np                      Nonparametric kernel smoothing methods for
\end_layout

\begin_layout Plain Layout

                        mixed data types
\end_layout

\begin_layout Plain Layout

numDeriv                Accurate Numerical Derivatives
\end_layout

\begin_layout Plain Layout

openssl                 Toolkit for Encryption, Signatures and
\end_layout

\begin_layout Plain Layout

                        Certificates Based on OpenSSL
\end_layout

\begin_layout Plain Layout

openxlsx                Read, Write and Edit XLSX Files
\end_layout

\begin_layout Plain Layout

optextras               Tools to Support Optimization Possibly with
\end_layout

\begin_layout Plain Layout

                        Bounds and Masks
\end_layout

\begin_layout Plain Layout

optimx                  A Replacement and Extension of the optim()
\end_layout

\begin_layout Plain Layout

                        Function
\end_layout

\begin_layout Plain Layout

ordinal                 Regression Models for Ordinal Data
\end_layout

\begin_layout Plain Layout

orthopolynom            Collection of functions for orthogonal and
\end_layout

\begin_layout Plain Layout

                        orthonormal polynomials
\end_layout

\begin_layout Plain Layout

packrat                 A Dependency Management System for Projects and
\end_layout

\begin_layout Plain Layout

                        their R Package Dependencies
\end_layout

\begin_layout Plain Layout

PAFit                   Joint Inference of Preferential Attachment and
\end_layout

\begin_layout Plain Layout

                        Node Fitness in Temporal Complex Networks
\end_layout

\begin_layout Plain Layout

pander                  An R Pandoc Writer
\end_layout

\begin_layout Plain Layout

pbivnorm                Vectorized Bivariate Normal CDF
\end_layout

\begin_layout Plain Layout

pbkrtest                Parametric Bootstrap and Kenward Roger Based
\end_layout

\begin_layout Plain Layout

                        Methods for Mixed Model Comparison
\end_layout

\begin_layout Plain Layout

pcse                    Panel-Corrected Standard Error Estimation in R
\end_layout

\begin_layout Plain Layout

pkgmaker                Package development utilities
\end_layout

\begin_layout Plain Layout

PKI                     Public Key Infrastucture for R Based on the
\end_layout

\begin_layout Plain Layout

                        X.509 Standard
\end_layout

\begin_layout Plain Layout

PKPDmodels              Pharmacokinetic/pharmacodynamic models
\end_layout

\begin_layout Plain Layout

plm                     Linear Models for Panel Data
\end_layout

\begin_layout Plain Layout

plogr                   The 'plog' C++ Logging Library
\end_layout

\begin_layout Plain Layout

plotrix                 Various Plotting Functions
\end_layout

\begin_layout Plain Layout

plyr                    Tools for Splitting, Applying and Combining
\end_layout

\begin_layout Plain Layout

                        Data
\end_layout

\begin_layout Plain Layout

polyclip                Polygon Clipping
\end_layout

\begin_layout Plain Layout

polynom                 A Collection of Functions to Implement a Class
\end_layout

\begin_layout Plain Layout

                        for Univariate Polynomial Manipulations
\end_layout

\begin_layout Plain Layout

portableParallelSeeds   Allow Replication of Simulations on Parallel
\end_layout

\begin_layout Plain Layout

                        and Serial Computers
\end_layout

\begin_layout Plain Layout

prabclus                Functions for Clustering of Presence-Absence,
\end_layout

\begin_layout Plain Layout

                        Abundance and Multilocus Genetic Data
\end_layout

\begin_layout Plain Layout

praise                  Praise Users
\end_layout

\begin_layout Plain Layout

pscl                    Political Science Computational Laboratory,
\end_layout

\begin_layout Plain Layout

                        Stanford University
\end_layout

\begin_layout Plain Layout

psidR                   Build Panel Data Sets from PSID Raw Data
\end_layout

\begin_layout Plain Layout

psych                   Procedures for Psychological, Psychometric, and
\end_layout

\begin_layout Plain Layout

                        Personality Research
\end_layout

\begin_layout Plain Layout

qdapTools               Tools for the 'qdap' Package
\end_layout

\begin_layout Plain Layout

quadprog                Functions to solve Quadratic Programming
\end_layout

\begin_layout Plain Layout

                        Problems.
\end_layout

\begin_layout Plain Layout

quantmod                Quantitative Financial Modelling Framework
\end_layout

\begin_layout Plain Layout

quantreg                Quantile Regression
\end_layout

\begin_layout Plain Layout

R.cache                 Fast and Light-Weight Caching (Memoization) of
\end_layout

\begin_layout Plain Layout

                        Objects and Results to Speed Up Computations
\end_layout

\begin_layout Plain Layout

R.methodsS3             S3 Methods Simplified
\end_layout

\begin_layout Plain Layout

R.oo                    R Object-Oriented Programming with or without
\end_layout

\begin_layout Plain Layout

                        References
\end_layout

\begin_layout Plain Layout

R.rsp                   Dynamic Generation of Scientific Reports
\end_layout

\begin_layout Plain Layout

R.utils                 Various Programming Utilities
\end_layout

\begin_layout Plain Layout

R2OpenBUGS              Running OpenBUGS from R
\end_layout

\begin_layout Plain Layout

R6                      Classes with Reference Semantics
\end_layout

\begin_layout Plain Layout

RBGL                    An interface to the BOOST graph library
\end_layout

\begin_layout Plain Layout

Rcgmin                  Conjugate Gradient Minimization of Nonlinear
\end_layout

\begin_layout Plain Layout

                        Functions
\end_layout

\begin_layout Plain Layout

RColorBrewer            ColorBrewer Palettes
\end_layout

\begin_layout Plain Layout

Rcpp                    Seamless R and C++ Integration
\end_layout

\begin_layout Plain Layout

RcppArmadillo           'Rcpp' Integration for the 'Armadillo'
\end_layout

\begin_layout Plain Layout

                        Templated Linear Algebra Library
\end_layout

\begin_layout Plain Layout

RcppEigen               'Rcpp' Integration for the 'Eigen' Templated
\end_layout

\begin_layout Plain Layout

                        Linear Algebra Library
\end_layout

\begin_layout Plain Layout

RCurl                   General Network (HTTP/FTP/...) Client Interface
\end_layout

\begin_layout Plain Layout

                        for R
\end_layout

\begin_layout Plain Layout

readr                   Read Rectangular Text Data
\end_layout

\begin_layout Plain Layout

registry                Infrastructure for R Package Registries
\end_layout

\begin_layout Plain Layout

relevent                Relational Event Models
\end_layout

\begin_layout Plain Layout

reshape2                Flexibly Reshape Data: A Reboot of the Reshape
\end_layout

\begin_layout Plain Layout

                        Package
\end_layout

\begin_layout Plain Layout

rgl                     3D Visualization Using OpenGL
\end_layout

\begin_layout Plain Layout

Rgraphviz               Provides plotting capabilities for R graph
\end_layout

\begin_layout Plain Layout

                        objects
\end_layout

\begin_layout Plain Layout

rJava                   Low-Level R to Java Interface
\end_layout

\begin_layout Plain Layout

rjson                   JSON for R
\end_layout

\begin_layout Plain Layout

RJSONIO                 Serialize R objects to JSON, JavaScript Object
\end_layout

\begin_layout Plain Layout

                        Notation
\end_layout

\begin_layout Plain Layout

rmarkdown               Dynamic Documents for R
\end_layout

\begin_layout Plain Layout

Rmpfr                   R MPFR - Multiple Precision Floating-Point
\end_layout

\begin_layout Plain Layout

                        Reliable
\end_layout

\begin_layout Plain Layout

rngtools                Utility functions for working with Random
\end_layout

\begin_layout Plain Layout

                        Number Generators
\end_layout

\begin_layout Plain Layout

robustbase              Basic Robust Statistics
\end_layout

\begin_layout Plain Layout

rockchalk               Regression Estimation and Presentation
\end_layout

\begin_layout Plain Layout

ROCR                    Visualizing the Performance of Scoring
\end_layout

\begin_layout Plain Layout

                        Classifiers
\end_layout

\begin_layout Plain Layout

roxygen2                In-Line Documentation for R
\end_layout

\begin_layout Plain Layout

RPostgreSQL             R interface to the PostgreSQL database system
\end_layout

\begin_layout Plain Layout

rprojroot               Finding Files in Project Subdirectories
\end_layout

\begin_layout Plain Layout

rsconnect               Deployment Interface for R Markdown Documents
\end_layout

\begin_layout Plain Layout

                        and Shiny Applications
\end_layout

\begin_layout Plain Layout

RSiena                  Siena - Simulation Investigation for Empirical
\end_layout

\begin_layout Plain Layout

                        Network Analysis
\end_layout

\begin_layout Plain Layout

RSQLite                 'SQLite' Interface for R
\end_layout

\begin_layout Plain Layout

rstan                   R Interface to Stan
\end_layout

\begin_layout Plain Layout

rstudioapi              Safely Access the RStudio API
\end_layout

\begin_layout Plain Layout

Rvmmin                  Variable Metric Nonlinear Function Minimization
\end_layout

\begin_layout Plain Layout

sand                    Statistical Analysis of Network Data with R
\end_layout

\begin_layout Plain Layout

sandwich                Robust Covariance Matrix Estimators
\end_layout

\begin_layout Plain Layout

SAScii                  Import ASCII files directly into R using only a
\end_layout

\begin_layout Plain Layout

                        SAS input script
\end_layout

\begin_layout Plain Layout

scales                  Scale Functions for Visualization
\end_layout

\begin_layout Plain Layout

scatterplot3d           3D Scatter Plot
\end_layout

\begin_layout Plain Layout

segmented               Regression Models with Breakpoints/Changepoints
\end_layout

\begin_layout Plain Layout

                        Estimation
\end_layout

\begin_layout Plain Layout

setRNG                  Set (Normal) Random Number Generator and Seed
\end_layout

\begin_layout Plain Layout

shiny                   Web Application Framework for R
\end_layout

\begin_layout Plain Layout

slam                    Sparse Lightweight Arrays and Matrices
\end_layout

\begin_layout Plain Layout

sna                     Tools for Social Network Analysis
\end_layout

\begin_layout Plain Layout

snow                    Simple Network of Workstations
\end_layout

\begin_layout Plain Layout

SnowballC               Snowball stemmers based on the C libstemmer
\end_layout

\begin_layout Plain Layout

                        UTF-8 library
\end_layout

\begin_layout Plain Layout

sourcetools             Tools for Reading, Tokenizing and Parsing R
\end_layout

\begin_layout Plain Layout

                        Code
\end_layout

\begin_layout Plain Layout

sp                      Classes and Methods for Spatial Data
\end_layout

\begin_layout Plain Layout

SparseM                 Sparse Linear Algebra
\end_layout

\begin_layout Plain Layout

spatstat                Spatial Point Pattern Analysis, Model-Fitting,
\end_layout

\begin_layout Plain Layout

                        Simulation, Tests
\end_layout

\begin_layout Plain Layout

StanHeaders             C++ Header Files for Stan
\end_layout

\begin_layout Plain Layout

stargazer               Well-Formatted Regression and Summary
\end_layout

\begin_layout Plain Layout

                        Statistics Tables
\end_layout

\begin_layout Plain Layout

statnet                 Software Tools for the Statistical Analysis of
\end_layout

\begin_layout Plain Layout

                        Network Data
\end_layout

\begin_layout Plain Layout

statnet.common          Common R Scripts and Utilities Used by the
\end_layout

\begin_layout Plain Layout

                        Statnet Project Software
\end_layout

\begin_layout Plain Layout

stringi                 Character String Processing Facilities
\end_layout

\begin_layout Plain Layout

stringr                 Simple, Consistent Wrappers for Common String
\end_layout

\begin_layout Plain Layout

                        Operations
\end_layout

\begin_layout Plain Layout

survey                  Analysis of Complex Survey Samples
\end_layout

\begin_layout Plain Layout

survival                Survival Analysis
\end_layout

\begin_layout Plain Layout

svDialogs               SciViews GUI API - Dialog boxes
\end_layout

\begin_layout Plain Layout

svGUI                   SciViews GUI API - Functions to manage GUIs
\end_layout

\begin_layout Plain Layout

svUnit                  SciViews GUI API - Unit testing
\end_layout

\begin_layout Plain Layout

tables                  Formula-Driven Table Generation
\end_layout

\begin_layout Plain Layout

tensor                  Tensor product of arrays
\end_layout

\begin_layout Plain Layout

tergm                   Fit, Simulate and Diagnose Models for Network
\end_layout

\begin_layout Plain Layout

                        Evolution Based on Exponential-Family Random
\end_layout

\begin_layout Plain Layout

                        Graph Models
\end_layout

\begin_layout Plain Layout

testthat                Unit Testing for R
\end_layout

\begin_layout Plain Layout

texreg                  Conversion of R Regression Output to LaTeX or
\end_layout

\begin_layout Plain Layout

                        HTML Tables
\end_layout

\begin_layout Plain Layout

TH.data                 TH's Data Archive
\end_layout

\begin_layout Plain Layout

tibble                  Simple Data Frames
\end_layout

\begin_layout Plain Layout

tidyr                   Easily Tidy Data with 'spread()' and 'gather()'
\end_layout

\begin_layout Plain Layout

                        Functions
\end_layout

\begin_layout Plain Layout

tm                      Text Mining Package
\end_layout

\begin_layout Plain Layout

triangle                Provides the Standard Distribution Functions
\end_layout

\begin_layout Plain Layout

                        for the Triangle Distribution
\end_layout

\begin_layout Plain Layout

trimcluster             Cluster analysis with trimming
\end_layout

\begin_layout Plain Layout

tripack                 Triangulation of Irregularly Spaced Data
\end_layout

\begin_layout Plain Layout

truncnorm               Truncated normal distribution
\end_layout

\begin_layout Plain Layout

trust                   Trust Region Optimization
\end_layout

\begin_layout Plain Layout

TTR                     Technical Trading Rules
\end_layout

\begin_layout Plain Layout

tweedie                 Tweedie Exponential Family Models
\end_layout

\begin_layout Plain Layout

ucminf                  General-Purpose Unconstrained Non-Linear
\end_layout

\begin_layout Plain Layout

                        Optimization
\end_layout

\begin_layout Plain Layout

vcd                     Visualizing Categorical Data
\end_layout

\begin_layout Plain Layout

VGAM                    Vector Generalized Linear and Additive Models
\end_layout

\begin_layout Plain Layout

viridis                 Default Color Maps from 'matplotlib'
\end_layout

\begin_layout Plain Layout

visreg                  Visualization of Regression Models
\end_layout

\begin_layout Plain Layout

wordcloud               Word Clouds
\end_layout

\begin_layout Plain Layout

xlsx                    Read, write, format Excel 2007 and Excel
\end_layout

\begin_layout Plain Layout

                        97/2000/XP/2003 files
\end_layout

\begin_layout Plain Layout

xlsxjars                Package required POI jars for the xlsx package
\end_layout

\begin_layout Plain Layout

XML                     Tools for Parsing and Generating XML Within R
\end_layout

\begin_layout Plain Layout

                        and S-Plus
\end_layout

\begin_layout Plain Layout

xml2                    Parse XML
\end_layout

\begin_layout Plain Layout

xtable                  Export Tables to LaTeX or HTML
\end_layout

\begin_layout Plain Layout

xts                     eXtensible Time Series
\end_layout

\begin_layout Plain Layout

yaml                    Methods to Convert R Data to YAML and Back
\end_layout

\begin_layout Plain Layout

zoo                     S3 Infrastructure for Regular and Irregular
\end_layout

\begin_layout Plain Layout

                        Time Series (Z's Ordered Observations)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Packages in library '/usr/lib/R/library':
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

base                    The R Base Package
\end_layout

\begin_layout Plain Layout

boot                    Bootstrap Functions (Originally by Angelo Canty
\end_layout

\begin_layout Plain Layout

                        for S)
\end_layout

\begin_layout Plain Layout

class                   Functions for Classification
\end_layout

\begin_layout Plain Layout

cluster                 "Finding Groups in Data": Cluster Analysis
\end_layout

\begin_layout Plain Layout

                        Extended Rousseeuw et al.
\end_layout

\begin_layout Plain Layout

codetools               Code Analysis Tools for R
\end_layout

\begin_layout Plain Layout

compiler                The R Compiler Package
\end_layout

\begin_layout Plain Layout

datasets                The R Datasets Package
\end_layout

\begin_layout Plain Layout

foreign                 Read Data Stored by Minitab, S, SAS, SPSS,
\end_layout

\begin_layout Plain Layout

                        Stata, Systat, Weka, dBase, ...
\end_layout

\begin_layout Plain Layout

graphics                The R Graphics Package
\end_layout

\begin_layout Plain Layout

grDevices               The R Graphics Devices and Support for Colours
\end_layout

\begin_layout Plain Layout

                        and Fonts
\end_layout

\begin_layout Plain Layout

grid                    The Grid Graphics Package
\end_layout

\begin_layout Plain Layout

KernSmooth              Functions for Kernel Smoothing Supporting Wand
\end_layout

\begin_layout Plain Layout

                        & Jones (1995)
\end_layout

\begin_layout Plain Layout

lattice                 Trellis Graphics for R
\end_layout

\begin_layout Plain Layout

MASS                    Support Functions and Datasets for Venables and
\end_layout

\begin_layout Plain Layout

                        Ripley's MASS
\end_layout

\begin_layout Plain Layout

Matrix                  Sparse and Dense Matrix Classes and Methods
\end_layout

\begin_layout Plain Layout

methods                 Formal Methods and Classes
\end_layout

\begin_layout Plain Layout

mgcv                    Mixed GAM Computation Vehicle with GCV/AIC/REML
\end_layout

\begin_layout Plain Layout

                        Smoothness Estimation
\end_layout

\begin_layout Plain Layout

nlme                    Linear and Nonlinear Mixed Effects Models
\end_layout

\begin_layout Plain Layout

nnet                    Feed-Forward Neural Networks and Multinomial
\end_layout

\begin_layout Plain Layout

                        Log-Linear Models
\end_layout

\begin_layout Plain Layout

parallel                Support for Parallel computation in R
\end_layout

\begin_layout Plain Layout

rpart                   Recursive Partitioning and Regression Trees
\end_layout

\begin_layout Plain Layout

spatial                 Functions for Kriging and Point Pattern
\end_layout

\begin_layout Plain Layout

                        Analysis
\end_layout

\begin_layout Plain Layout

splines                 Regression Spline Functions and Classes
\end_layout

\begin_layout Plain Layout

stats                   The R Stats Package
\end_layout

\begin_layout Plain Layout

stats4                  Statistical Functions using S4 Classes
\end_layout

\begin_layout Plain Layout

survival                Survival Analysis
\end_layout

\begin_layout Plain Layout

tcltk                   Tcl/Tk Interface
\end_layout

\begin_layout Plain Layout

tools                   Tools for Package Development
\end_layout

\begin_layout Plain Layout

utils                   The R Utils Package
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Warning message:
\end_layout

\begin_layout Plain Layout

In library() :
\end_layout

\begin_layout Plain Layout

  libraries '/usr/local/lib/R/site-library', '/usr/lib/R/site-library'
\end_layout

\begin_layout Plain Layout

contain no packages
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The package collections are in "libraries"}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Did you notice sections in previous output? Those are library folders
\end_layout

\begin_layout Itemize
R packages are sorted among folders (AKA 
\begin_inset Quotes eld
\end_inset

libraries
\begin_inset Quotes erd
\end_inset

)
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
System-wide folders
\end_layout

\begin_deeper
\begin_layout Enumerate
The main R distribution (e.g., stats, graphics)
\end_layout

\begin_layout Enumerate
recommended packages distributed with R (e.g., MASS, parallel)
\end_layout

\begin_layout Enumerate
Others added by system administrator
\end_layout

\end_deeper
\begin_layout Enumerate
Personal user folders, often within user HOME folder
\end_layout

\end_deeper
\begin_layout Itemize
To see your current R PATH folders, run the function 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
.libPaths()
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The first letter in that functions name is a period! (UNIX tradition)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=F>>=
\end_layout

\begin_layout Plain Layout

op <- options()
\end_layout

\begin_layout Plain Layout

options(width = 50)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

.libPaths()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=F>>=
\end_layout

\begin_layout Plain Layout

options(op)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{To load a package, run library(package-name-here)}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Almost every time I run
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

library(package-name-here)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Whenever I run 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
library
\end_layout

\end_inset

, I almost always also run
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

help(package = "package-name-here")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
MASS
\end_layout

\end_inset

 is a famous recommended package distributed with R.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T>>=
\end_layout

\begin_layout Plain Layout

library(MASS)
\end_layout

\begin_layout Plain Layout

help(package = "MASS")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
CRAN: Worldwide server network
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Repository: a package server}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
When you start R, an object named 
\begin_inset Quotes eld
\end_inset

options
\begin_inset Quotes erd
\end_inset

 is created in the workspace.
 It supplies settings, which you can change.
\end_layout

\begin_layout Itemize
Do you have any repositories configured?
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

options("repos")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
On some computers I use, I'll see a list of servers, which will be searched
 in order
\end_layout

\begin_layout Itemize
But sometimes I see
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Soutput}
\end_layout

\begin_layout Plain Layout

$repos
\end_layout

\begin_layout Plain Layout

CRAN
\end_layout

\begin_layout Plain Layout

"@CRAN@"
\end_layout

\begin_layout Plain Layout


\backslash
end{Soutput}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This means my default repository is undefined.
\end_layout

\end_deeper
\begin_layout Itemize
If you do not have specified repos, then when you run any functions like
 
\begin_inset Quotes eld
\end_inset

update.packages()
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

install.packages()
\begin_inset Quotes erd
\end_inset

, and so forth, R will ask you to choose a repository
\end_layout

\begin_layout Standard
\noindent
\begin_inset listings
lstparams "basicstyle={\tiny},tabsize=2"
inline false
status open

\begin_layout Plain Layout

--- Please select a CRAN mirror for use in this session ---
\end_layout

\begin_layout Plain Layout

HTTPS CRAN mirror 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

 1: 0-Cloud [https]                 2: Algeria [https]              
\end_layout

\begin_layout Plain Layout

 3: Australia (Canberra) [https]    4: Australia (Melbourne) [https]
\end_layout

\begin_layout Plain Layout

 5: Australia (Perth) [https]       6: Austria [https]              
\end_layout

\begin_layout Plain Layout

 7: Belgium (Ghent) [https]         8: Brazil (PR) [https]          
\end_layout

\begin_layout Plain Layout

 9: Brazil (RJ) [https]            10: Brazil (SP 1) [https]        
\end_layout

\begin_layout Plain Layout

11: Bulgaria [https]               12: Canada (MB) [https]          
\end_layout

\begin_layout Plain Layout

13: Chile 1 [https]                14: Chile 2 [https]              
\end_layout

\begin_layout Plain Layout

15: China (Beijing) [https]        16: China (Hefei) [https]        
\end_layout

\begin_layout Plain Layout

17: China (Lanzhou) [https]        18: Colombia (Cali) [https]      
\end_layout

\begin_layout Plain Layout

19: Czech Republic [https]         20: Denmark [https]              
\end_layout

\begin_layout Plain Layout

21: Estonia [https]                22: France (Lyon 1) [https]      
\end_layout

\begin_layout Plain Layout

23: France (Lyon 2) [https]        24: France (Marseille) [https]   
\end_layout

\begin_layout Plain Layout

25: France (Montpellier) [https]   26: France (Paris 2) [https]     
\end_layout

\begin_layout Plain Layout

27: Germany (Göttingen) [https]    28: Germany (Münster) [https]    
\end_layout

\begin_layout Plain Layout

29: Iceland [https]                30: India [https]                
\end_layout

\begin_layout Plain Layout

31: Indonesia (Jakarta) [https]    32: Ireland [https]              
\end_layout

\begin_layout Plain Layout

33: Italy (Padua) [https]          34: Japan (Tokyo) [https]        
\end_layout

\begin_layout Plain Layout

35: Malaysia [https]               36: Mexico (Mexico City) [https] 
\end_layout

\begin_layout Plain Layout

37: New Zealand [https]            38: Norway [https]               
\end_layout

\begin_layout Plain Layout

39: Philippines [https]            40: Russia (Moscow) [https]      
\end_layout

\begin_layout Plain Layout

41: Serbia [https]                 42: Spain (A Coruña) [https]     
\end_layout

\begin_layout Plain Layout

43: Spain (Madrid) [https]         44: Sweden [https]               
\end_layout

\begin_layout Plain Layout

45: Switzerland [https]            46: Taiwan (Chungli) [https]     
\end_layout

\begin_layout Plain Layout

47: Turkey (Denizli) [https]       48: Turkey (Mersin) [https]      
\end_layout

\begin_layout Plain Layout

49: UK (Bristol) [https]           50: UK (Cambridge) [https]       
\end_layout

\begin_layout Plain Layout

51: UK (London 1) [https]          52: USA (CA 1) [https]           
\end_layout

\begin_layout Plain Layout

53: USA (IA) [https]               54: USA (IN) [https]             
\end_layout

\begin_layout Plain Layout

55: USA (KS) [https]               56: USA (MI 1) [https]           
\end_layout

\begin_layout Plain Layout

57: USA (OR) [https]               58: USA (TN) [https]             
\end_layout

\begin_layout Plain Layout

59: USA (TX 1) [https]             60: USA (TX 2) [https]           
\end_layout

\begin_layout Plain Layout

61: Vietnam [https]                62: (HTTP mirrors)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
CRMDA hosts server 55.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Repository: a package server}
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned

\end_layout

\begin_deeper
\begin_layout Column
3cm
\end_layout

\begin_layout Standard
In Windows, looks like this:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/R-win-cran.png
	width 2.5cm

\end_inset


\end_layout

\begin_layout Column
9cm
\end_layout

\begin_layout Standard

\series bold
Ways
\series default
 to avoid that interactive repos choice
\end_layout

\begin_layout Enumerate
Put this at the top of your R script:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

CRAN <- "https://rweb.crmda.ku.edu/cran" 
\end_layout

\begin_layout Plain Layout

options(repos = CRAN)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
To check result, look at ALL of the options with
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

options()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
or just check that one:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

options("repos")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Specify the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
repos
\end_layout

\end_inset

 argument in 
\begin_inset Quotes eld
\end_inset

install.packages
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

update.packages
\begin_inset Quotes erd
\end_inset

 (example coming up)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Perhaps the Company that provided your GUI configured "repos"}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I recently installed RStudio in Windows and found that they decided for
 me
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Soutput}
\end_layout

\begin_layout Plain Layout

> options("repos")
\end_layout

\begin_layout Plain Layout

$repos
\end_layout

\begin_layout Plain Layout

                                CRAN 
\end_layout

\begin_layout Plain Layout

         "https://cran.rstudio.com/" 
\end_layout

\begin_layout Plain Layout

                           CRANextra 
\end_layout

\begin_layout Plain Layout

"http://www.stats.ox.ac.uk/pub/RWin" 
\end_layout

\begin_layout Plain Layout

attr(,"RStudio")
\end_layout

\begin_layout Plain Layout

[1] TRUE
\end_layout

\begin_layout Plain Layout


\backslash
end{Soutput}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Whereas R for Windows GUI has 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Soutput}
\end_layout

\begin_layout Plain Layout

> options("repos")
\end_layout

\begin_layout Plain Layout

$repos
\end_layout

\begin_layout Plain Layout

                                CRAN 
\end_layout

\begin_layout Plain Layout

                           "@CRAN@" 
\end_layout

\begin_layout Plain Layout

                           CRANextra 
\end_layout

\begin_layout Plain Layout

"http://www.stats.ox.ac.uk/pub/RWin" 
\end_layout

\begin_layout Plain Layout


\backslash
end{Soutput}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R for Windows GUI has a pull down:
\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Packages
\series default
 -> 
\series bold
Set CRAN Mirror
\end_layout

\begin_layout Standard
which has the same effect as options() function previously described.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Check Available Packages}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Browse a CRAN server's list of packages.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://rweb.crmda.ku.edu/cran/web/packages/index.html
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Number of packages in CRAN is growing
\end_layout

\begin_deeper
\begin_layout Itemize
2017-05-13: 10606 packages
\end_layout

\begin_layout Itemize
2016-05-17: 8500 
\end_layout

\begin_layout Itemize
2015-04-28: 6400.
 
\end_layout

\end_deeper
\begin_layout Itemize
Difficult to know which packages are worthwhile.
 
\emph on
Buyer Beware!
\end_layout

\begin_layout Itemize
Inside R, check for the list of packages on CRAN
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

giantList <- available.packages(repos="https://rweb.crmda.ku.edu/cran")
\end_layout

\begin_layout Plain Layout

row.names(giantList)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What Packages Do You Really Need?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
When we started with R, there were 100 packages and our policy was to install
 everything and keep it up to date.
 Today, that is impractical.
 
\end_layout

\begin_layout Itemize
CRMDA workstations have a script that runs nightly to make sure that about
 500 packages are installed and up-to-date.
 
\end_layout

\begin_layout Itemize
R program will be found in the R folder of this project.
\end_layout

\begin_layout Itemize
Beyond that, users can install packages for themselves in their own HOME
 directories (that's the next topic).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{How to install new packages}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Run install.packages().
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

install.packages(c("rockchalk", "kutils"), dependencies = TRUE, repos = "https://
rweb.crmda.ku.edu/cran")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
All good KU students install the package 
\begin_inset Quotes eld
\end_inset

rockchalk
\begin_inset Quotes erd
\end_inset

 and look at its beautiful vignettes.
\end_layout

\begin_layout Itemize
In that example, I set dependencies = TRUE.
 That means I also get others on which this 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Depends
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Imports
\begin_inset Quotes erd
\end_inset

 (package you want loads features from a package)
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

LinkingTo
\begin_inset Quotes erd
\end_inset

 (package you want uses C/Fortran libraries from others)
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Suggests
\begin_inset Quotes erd
\end_inset

 (package you want has examples that require these packages)
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Enhances
\begin_inset Quotes erd
\end_inset

 (other packages that might benefit from the one you are installing)
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Suggests
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

Enhances
\begin_inset Quotes erd
\end_inset

 sometimes cause in trouble, pull in too many things you don't want.
\end_layout

\begin_layout Itemize
For example, when I install the package 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
rms
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 with 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
dep = TRUE
\end_layout

\end_inset

, I see
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Soutput}
\end_layout

\begin_layout Plain Layout

also installing the dependencies 'stringi', 'magrittr', 'colorspace', 'RColorBre
wer', 'chron', 'stringr', 'dichromat', 'munsell', 'labeling', 'zoo', 'Formula',
 'latticeExtra', 'acepack', 'gtable', 'gridExtra', 'data.table', 'digest',
 'plyr', 'reshape2', 'scales', 'mvtnorm', 'TH.data', 'sandwich', 'Hmisc',
 'ggplot2', 'polspline', 'multcomp'
\end_layout

\begin_layout Plain Layout


\backslash
end{Soutput}
\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
As a result, these days I'm more likely to run with a leaner mixture:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

install.packages("rockchalk", dep = c("Depends", "Imports", "LinkingTo"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The default for dependencies in R is now 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
c("Depends", "Imports", "LinkingTo", "Suggests")
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Installing several packages: Example}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

install.packages(c("lme4", "car"), dep = c("Depends", "Imports", "LinkingTo"),
 repos = "http://rweb.crmda.ku.edu/cran")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{:: and :::}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Packages have functions in 2 categories
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
exported, meaning you can use them by typing their names
\end_layout

\begin_layout Itemize
non-exported (private) functions, which are more difficult to access.
\end_layout

\end_deeper
\begin_layout Itemize
Same-named functions may exist in many packages.
 I put 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
summarize()
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 in the rockchalk package, without realizing that functions of same name
 existed in the packages 
\begin_inset Quotes eld
\end_inset

Hmisc
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

plyr
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Itemize
The package that is loaded last will 
\begin_inset Quotes eld
\end_inset

steal
\begin_inset Quotes erd
\end_inset

 control of that name, blocking access to previously loaded functions of
 same name.
\end_layout

\begin_layout Itemize
To access those functions, use the 
\emph on
disambiguator
\emph default
 
\begin_inset Quotes eld
\end_inset

::
\begin_inset Quotes erd
\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Syntax package::function().
 
\end_layout

\begin_layout Description
Namespace The name of the package is also a 
\begin_inset Quotes eld
\end_inset

namespace
\begin_inset Quotes erd
\end_inset

 where functions can be found.
\end_layout

\end_deeper
\begin_layout Itemize
Paranoid people might call a base-R function like plot by naming its namespace
 as well: 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

graphics::plot(whatever, whatever)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I don't generally write out the full package::function name unless I'm sure
 there is a conflict
\end_layout

\end_deeper
\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

:::
\begin_inset Quotes erd
\end_inset

 access method
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Some functions are 
\begin_inset Quotes eld
\end_inset

private
\begin_inset Quotes erd
\end_inset

, not exported.
 
\end_layout

\begin_layout Itemize
package:::function() is syntax to access those functions.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Difference between library load and ::}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
library()
\end_layout

\end_inset

 function to loads all of a package's functions
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

library(rockchalk)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
But loading full package not absolutely necessary.
 Can access functions from a package with the 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
::
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 notation.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Example
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<optold,eval=T,include=F>>=
\end_layout

\begin_layout Plain Layout

opt.old <- options()
\end_layout

\begin_layout Plain Layout

options(digits=2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

data(swiss)
\end_layout

\begin_layout Plain Layout

## Assign shorter names to fit on one page
\end_layout

\begin_layout Plain Layout

colnames(swiss) <- c("Agric", "Cath", "Educ", "Exam", "Fert", "Inf.Mort")
\end_layout

\begin_layout Plain Layout

rockchalk::summarize(swiss)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<optold,eval=T,include=F>>=
\end_layout

\begin_layout Plain Layout

options(opt.old)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Some experts avoid loading whole package if possible–R session is more 
\begin_inset Quotes eld
\end_inset

responsive
\begin_inset Quotes erd
\end_inset

 if list of immediately accessible functions is smaller.
 Don't worry about this until you see a problem.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Staying up to date}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Please remember that the package world is always changing.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

update.packages()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Triggers 2 interactive steps
\end_layout

\begin_layout Enumerate
R asks which CRAN server do you use?
\end_layout

\begin_layout Enumerate
R will ask about each and every package to be updated.
\end_layout

\end_deeper
\begin_layout Itemize
Don't let R ask you one-by-one about packages.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

update.packages(ask = FALSE, checkBuilt = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
I generally insert checkBuilt as well
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

update.packages(ask = FALSE, checkBuilt = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Packages built with old R version are replaced, even if package's version
 is not updated.
\end_layout

\end_deeper
\begin_layout Itemize
Avoid the repo-chooser with
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

update.packages(ask = FALSE, checkBuilt = TRUE, repos = "http://rweb.crmda.ku.edu/cr
an")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Other repositories exist as well}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The R script to maintain CRMDA computers looks at 3 repositories:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<repos, eval=F>>=
\end_layout

\begin_layout Plain Layout

CRAN <- "http://rweb.crmda.ku.edu/cran"
\end_layout

\begin_layout Plain Layout

KRAN <- "http://rweb.crmda.ku.edu/kran"
\end_layout

\begin_layout Plain Layout

BIOC <- "http://www.bioconductor.org/packages/3.3/bioc"
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

options(repos = c(KRAN, CRAN, BIOC))
\end_layout

\begin_layout Plain Layout

update.packages(ask = FALSE, checkBuilt = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
KRAN is our testing server, for fine packages like 
\begin_inset Quotes eld
\end_inset

rockchalk
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

kutils
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
After CRAN, Bioconductor (BIOC) is the most notable package repository.
 (
\emph on
Setting that up is bothersome/tricky
\emph default
).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{System administration questions}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
When you run this, where does your package 
\begin_inset Quotes eld
\end_inset

go
\begin_inset Quotes erd
\end_inset

?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

install.packages(c("lme4"), dep = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R selects among folders in .libPaths().
\end_layout

\begin_layout Itemize
But which one? That's a puzzler!
\end_layout

\begin_layout Itemize
If you are an Administrator, R may (usually will) try to put new packages
 in a System-wide directory so other users can use as well.
\end_layout

\begin_layout Itemize
If you are a limited user, R it will ask if you want to install in your
 own user account (only for you, not for other users).
\end_layout

\begin_layout Itemize
The argument 
\begin_inset Quotes eld
\end_inset

lib
\begin_inset Quotes erd
\end_inset

 can be used to specify the install directory, as in 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

install.packages(c("lme4"), dep = TRUE, lib = "/some/folder/you/like")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Don't forget about help after loading packages}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Make a package's functions immediately accessible.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

library(lme4)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Dont forget to always run 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

help(package = "lme4")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
See helps on specifics
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

?lmer
\end_layout

\begin_layout Plain Layout

?glmer
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I just got some bad news
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
On Mac and Windows, the default help shows in the Web Browser
\end_layout

\begin_layout Itemize
That's less than ideal because running the examples line-by-line is a problem.
 (I'll show how to avoid that if you use Emacs)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Summary
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Points of emphasis}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R is an 
\begin_inset Quotes eld
\end_inset

extensible
\begin_inset Quotes erd
\end_inset

 software framework built on a packaging system
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
help.start()
\end_layout

\end_inset

 to review docs and review installed packages
\end_layout

\begin_layout Itemize
Retrieve a list of installed packages:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

> library()
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Use the functions 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
install.packages()
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
update.packages()
\end_layout

\end_inset

 to keep everything in order
\end_layout

\begin_layout Itemize
When you have trouble, ALWAYS include output from 
\begin_inset Quotes eld
\end_inset

sessionInfo()
\begin_inset Quotes erd
\end_inset

 in your requests for help.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{References}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../../R"
options "apalike2"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Session}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sess10>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<opts20, include=F>>=
\end_layout

\begin_layout Plain Layout

## Don't delete this.
 It puts the interactive session options
\end_layout

\begin_layout Plain Layout

## back the way they were.
 If this is compiled within a session
\end_layout

\begin_layout Plain Layout

## it is vital to do this.
\end_layout

\begin_layout Plain Layout

options(opts.orig)
\end_layout

\begin_layout Plain Layout

options(par.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
