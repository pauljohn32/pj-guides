#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}
\usepackage{array}
\usepackage{longtable}
\usepackage{graphicx}
%\newcommand\makebeamertitle{\frame{\maketitle}}%
\renewcommand{\doiprefix}{doi:\kern-1pt}
\setlength{\bibsep}{10pt}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
%for bold upright roman in math for matrix algebra
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}

%%\input{theme/guidePreambleSweavel.tex} 
%%% From beamer slide:
\usepackage{Sweave}
%% 
%% This controls display of code chunks
\usepackage{ae,fancyvrb,relsize,listings}

\providecommand{\Sweavesize}{\normalsize}
\providecommand{\Rsize}{}
\renewcommand{\Rsize}{\normalsize}
\providecommand{\Routsize}{\scriptsize}

\providecommand{\Rcolor}{\color[rgb]{0.1, 0.1, 0.1}}
\providecommand{\Routcolor}{\color[rgb]{0.2, 0.2, 0.2}}
\providecommand{\Rcommentcolor}{\color[rgb]{0.101, 0.43, 0.432}}

\providecommand{\Rbackground}{\color[gray]{0.91}}
\providecommand{\Routbackground}{\color[gray]{0.935}}
% Can specify \color[gray]{1} for white background or just \color{white}

\lstdefinestyle{Rinput}{
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  basicstyle=\Rsize\Rcolor\ttfamily,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%,
  commentstyle=\Rcommentcolor\ttfamily,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1{==}{{=\,=}}2{--}{{-\,-}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},%
  backgroundcolor=\Rbackground,%
  numbers=left,%
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}%

% Other options of interest:
% frame=single,framerule=0.1pt,framesep=1pt,rulecolor=\color{blue},
% numbers=left,numberstyle=\tiny,stepnumber=1,numbersep=7pt,
% keywordstyle={\bf\Rcolor}

\lstdefinestyle{Routput}{fancyvrb=false,
  literate={~}{{$\sim$}}1{R^2}{{$R^{2}$}}2{^}{{$^{\scriptstyle\wedge}$}}1{R-squared}{{$R^{2}$}}2,%
  basicstyle=\Routcolor\Routsize\ttfamily,%
  backgroundcolor=\Routbackground,
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1 {==}{{=\,=}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},
  numbers=left,
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}

\renewenvironment{Schunk}{}{}
\renewenvironment{Sinput}{}{}
\let\Sinput\relax
\let\Scode\relax
\let\Soutput\relax
\lstnewenvironment{Sinput}{\lstset{style=Rinput}}{}
\lstnewenvironment{Scode}{\lstset{style=Rinput}}{}
\lstnewenvironment{Soutput}{\lstset{style=Routput}}{}
%%end paste in from guidePreambleSweavel.tex


\lstset{tabsize=2, breaklines=true, style=Rinput, breakatwhitespace=true}

\fvset{listparameters={\setlength{\topsep}{0em}}}

\usepackage{xcolor}
\definecolor{light-gray}{gray}{0.90}
\usepackage{realboxes}
\providecommand*{\code}[1]{\texttt{#1}}
\renewcommand{\code}[1]{%
\Colorbox{light-gray}{#1}%
}%
%% end of paste

\usepackage[natbibapa]{apacite}

\definecolor{darkblue}{HTML}{1e2277}

%would be in beamerthemekucrmda%
\mode<presentation>
\definecolor{kublue}{RGB}{0,81,186}
\usefonttheme{professionalfonts}
\useoutertheme{infolines}
\useinnertheme{rounded}
%disable rounded for alert and example boxes%
\setbeamertemplate{blocks}[default]
\usecolortheme{whale}
\usecolortheme{orchid}
\setbeamercolor{structure}{bg=kublue,fg=kublue!90!black}
%\setbeamercolor{structure}{fg=kublue}
\setbeamercolor{frametitle}{bg=kublue}
\setbeamercolor{section in toc}{fg=kublue!40!black}

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}
\beamertemplatenavigationsymbolsempty
%end of beamerthemekucrmda%

%If you want bigger margins, try this:
\setbeamersize{text margin left=05mm,text margin right=10mm} 
\hypersetup{colorlinks,allcolors=.,urlcolor=darkblue}
%Following seems to have no effect now
%\usepackage{handoutWithNotes}
%\pgfpagesuselayout{3 on 1 with notes}[letterpaper, border shrink=5mm]

\titlegraphic{\includegraphics[width=6cm]{theme/logo}}
\logo{\includegraphics[width=5mm]{theme/logomini}}
\end_preamble
\options aspectratio=1609
\use_default_options false
\begin_modules
logicalmkup
sweave
natbibapa
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style \use_bibtopic false
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch semboot
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\branch cfalvm
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%following is LyX shortcut 
\backslash
vb for bold upright math for matrices
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\vb}[1]{\bm{\mathrm{#1}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch R
inverted 0
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% tmpout directory must exist first
\end_layout

\begin_layout Plain Layout

<<tmpout, echo=FALSE, include=FALSE, results=hide>>=
\end_layout

\begin_layout Plain Layout

tdir <- "tmpout"
\end_layout

\begin_layout Plain Layout

if(!dir.exists(tdir)) dir.create(tdir, showWarnings=FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=tmpout/p,split=T,ae=F,height=4.5,width=7}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, include=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

opts.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=100, prompt = " ", continue = "  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE)
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

par.orig <- par(no.readonly = TRUE) 
\end_layout

\begin_layout Plain Layout

pjmar <- c(4.1, 4.1, 1.5, 2.1)
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12, xpd=F)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

if(!file.exists("theme")) file.symlink("../../../../template/theme", "theme")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
First R Experience 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
hello
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul E.
 Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Political Science
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Center for Research Methods and Data Analysis, University of Kansas
\begin_inset Argument 1
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Date
2018
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Outline}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Get Started
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Assume you Installed R
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
R
\begin_inset CommandInset citation
LatexCommand citep
key "RCore"
literal "true"

\end_inset

 is freely downloadable from any CRAN MIRROR, such as 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://rweb.crmda.ku.edu/cran
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
CRMDA offers tips about installation and system maintenance
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://crmda.ku.edu/setup
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Includes Video 
\begin_inset Quotes eld
\end_inset

voiceover
\begin_inset Quotes erd
\end_inset

 to demonstrate installation on Win/Mac
\end_layout

\end_deeper
\begin_layout Itemize
MAC special alert: see our guide about addon support libraries
\end_layout

\begin_deeper
\begin_layout Itemize
XQuartz: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://xquartz.macosforge.org
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
And, if you can get it, also Xcode (App Store).
\end_layout

\end_deeper
\begin_layout Itemize
R Core offers OS-specific FAQ
\end_layout

\begin_deeper
\begin_layout Itemize
Win FAQ 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://rweb.crmda.ku.edu/cran
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Mac Faq: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://cran.r-project.org/bin/macosx/RMacOSX-FAQ.html
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Don't worry about 
\begin_inset Quotes eld
\end_inset

development environments
\begin_inset Quotes erd
\end_inset

 RStudio, Emacs, Notepad++ at the beginning.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Launch R for some Interactive Fun
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Windows: Find the R icon and double click on it
\end_layout

\begin_layout Itemize
Mac: Use that Finder thing to launch R
\end_layout

\begin_layout Itemize
Linux: get a terminal, type R
\end_layout

\begin_layout ExampleBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Either Way, you should be in a 
\begin_inset Quotes eld
\end_inset

Console
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

>
\begin_inset Quotes erd
\end_inset

 is called the 
\begin_inset Quotes eld
\end_inset

prompt
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Type there to directly interact with the R system
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
containsverbatim
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Type this
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align left
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

curve(3 + 0.2 * x + 0.1 * x^2, from = -2, 
\end_layout

\begin_layout Plain Layout

to = 2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Description
curve is the name of a function.
\end_layout

\begin_layout Description
arguments are the comma-separated bits inside the parentheses
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Linux R in a Terminal
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
On my Linux system, the 
\begin_inset Quotes eld
\end_inset

R console
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/R-Linux.png
	width 10cm

\end_inset


\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Graphic Device Window Pops up
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/R-Linux-Graphics.png
	width 6cm

\end_inset


\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
Can have several 
\begin_inset Quotes eld
\end_inset

output devices
\begin_inset Quotes erd
\end_inset

 open at once.
\end_layout

\begin_layout Itemize
device: 
\begin_inset Quotes eld
\end_inset

just a place to draw
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
We will show you how to create 
\begin_inset Quotes eld
\end_inset

file devices
\begin_inset Quotes erd
\end_inset

 (PDF, png) as well.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
In Windows, more GUI
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/R-Windows-2016.png
	width 6cm

\end_inset


\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
Similar to running R inside a 
\begin_inset Quotes eld
\end_inset

DOS Box
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
(run 
\begin_inset Quotes eld
\end_inset

cmd
\begin_inset Quotes erd
\end_inset

, then type 
\begin_inset Quotes eld
\end_inset

Rterm
\begin_inset Quotes erd
\end_inset

 and hit enter)
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Graph pops up in a separate sub-window
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/R-Windows-2016-2.png
	width 6cm

\end_inset


\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
The R Windows install offers a choice of 
\begin_inset Quotes eld
\end_inset

one big window
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

many separate windows
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
On A Mac, the Terminal is a Little Fancier
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Standard
This is 
\begin_inset Quotes eld
\end_inset


\series bold
R.app
\series default

\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/R-Mac-1.png
	width 6cm

\end_inset


\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
This is 
\begin_inset Quotes eld
\end_inset

R.app
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
which has a Terminal Window wrapped inside an editor window
\end_layout

\begin_layout Itemize
\begin_inset Formula $\sswarrow$
\end_inset

Note the handy 
\begin_inset Quotes eld
\end_inset

tooltip
\begin_inset Quotes erd
\end_inset

 down below
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Mac Graphic!
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/R-Mac-2.png
	width 6cm

\end_inset


\end_layout

\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
Quartz is one of the 
\begin_inset Quotes eld
\end_inset

graphic device drivers
\begin_inset Quotes erd
\end_inset

 available
\end_layout

\begin_layout Itemize
Mac users need to install XQuartz because many R packages assume the existence
 of the Quartz device.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Terminals have minimal Creature Comfort
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
I use the terminal for quick chores, like calculating 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
sqrt(534)
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

History
\begin_inset Quotes erd
\end_inset

 shortcut key
\end_layout

\begin_deeper
\begin_layout Itemize
On Windows: 
\begin_inset Quotes eld
\end_inset

up arrow
\begin_inset Quotes erd
\end_inset

 cycles through previous commands
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
containsverbatim, allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
When you are ready to quit
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Run the function
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

q(save = "no")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
If you forget '
\begin_inset Flex Code
status open

\begin_layout Plain Layout
save = 
\begin_inset Quotes eld
\end_inset

no
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

', and you just run '
\begin_inset Flex Code
status open

\begin_layout Plain Layout
q()
\end_layout

\end_inset

', R asks you
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Soutput}
\end_layout

\begin_layout Plain Layout

Save workspace image? [y/n/c]
\end_layout

\begin_layout Plain Layout


\backslash
end{Soutput}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Almost never do I say 
\begin_inset Quotes eld
\end_inset

y
\begin_inset Quotes erd
\end_inset

.
 Here is why.
\end_layout

\begin_deeper
\begin_layout Itemize
If you say 
\begin_inset Quotes eld
\end_inset

yes
\begin_inset Quotes erd
\end_inset

, R will save a snapshot of the current session in a file 
\begin_inset Quotes eld
\end_inset

.RData
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
R will try to re-load that session next time you start R
\end_layout

\end_deeper
\begin_layout Itemize
Why I always explicitly close down R sessions: If I kill the window without
 'q()' then R will generally save a workspace.
\end_layout

\end_deeper
\begin_layout Section
Console = Terminal 
\begin_inset Formula $\Longrightarrow$
\end_inset

 Interactive!
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Don't waste too much effort in the Console!
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Nothing you type there is 
\begin_inset Quotes eld
\end_inset

remembered
\begin_inset Quotes erd
\end_inset

 for future session
\end_layout

\begin_layout Itemize
Instead build a 
\begin_inset Quotes eld
\end_inset

script
\begin_inset Quotes erd
\end_inset

! A file of R commands
\end_layout

\begin_layout Itemize
The Terminal is for quick testing of 
\begin_inset Quotes eld
\end_inset

what works,
\begin_inset Quotes erd
\end_inset

 which you then put into a script file.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Your first Data Analysis!}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
How old are Jane's children?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

x <- c(3, 5, 7, 9, 11)
\end_layout

\begin_layout Plain Layout

x
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
x is a 
\begin_inset Quotes eld
\end_inset

vector
\begin_inset Quotes erd
\end_inset

 with 5 elements
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

mean(x)
\end_layout

\begin_layout Plain Layout

var(x)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Note Well}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Assignment symbol is 
\begin_inset Quotes eld
\end_inset


\begin_inset listings
inline true
status open

\begin_layout Plain Layout

<-
\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

y <- 2 * x
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Is the assignment symbol, we pronounce 
\begin_inset Quotes eld
\end_inset


\begin_inset listings
inline true
status open

\begin_layout Plain Layout

y <- 2 * x
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 as 
\begin_inset Quotes eld
\end_inset

y is assigned as 2 times x
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Enumerate
All function use requires parentheses.
 Even simple things no arguments require parens.
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ls()
\end_layout

\end_inset

 displays an object list for the current session:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T>>=
\end_layout

\begin_layout Plain Layout

ls()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

print(x)
\end_layout

\end_inset

 is the same as 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

x
\end_layout

\end_inset

, because R assumes that, if you type the name of something, then your must
 want to print it.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

print(x)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

x
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The assignment symbol <- is preferred to =}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Historically, 
\begin_inset Quotes eld
\end_inset

=
\begin_inset Quotes erd
\end_inset

 caused an error
\end_layout

\begin_layout Enumerate
Around 2002, the R command interpreter was redesigned to treat 
\begin_inset Quotes eld
\end_inset

=
\begin_inset Quotes erd
\end_inset

 as 
\begin_inset Quotes eld
\end_inset

<-
\begin_inset Quotes erd
\end_inset

 most of the time
\end_layout

\begin_layout Enumerate
Some books are published which use the 
\begin_inset Quotes eld
\end_inset

=
\begin_inset Quotes erd
\end_inset

 sign, forgetting altogether about 
\begin_inset Quotes eld
\end_inset

<-
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
R FAQ says 
\begin_inset Quotes eld
\end_inset

<-
\begin_inset Quotes erd
\end_inset

 still preferred because 
\begin_inset Quotes eld
\end_inset

=
\begin_inset Quotes erd
\end_inset

 leads to some hard-to-fix bugs.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Your first statistics in the R Terminal}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
How much do those children weigh?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

y <- c(21, 41, 44, 115, 105)
\end_layout

\begin_layout Plain Layout

mean(y)
\end_layout

\begin_layout Plain Layout

var(y)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Your first plot, launched from the R Terminal}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This should launch a scatterplot in a separate display window
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<p1, fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

plot(y ~ x, xlab = "Age", ylab = "Weight", main = "My First Plot")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/p-p1.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=8cm]{tmpout/p-p1.pdf}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{That's an unrealistic example}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
We will import from text, or Excel, or SPSS, or 
\begin_inset Formula $\ldots$
\end_inset


\end_layout

\begin_layout Itemize
But I often do create little 
\begin_inset Quotes eld
\end_inset

fake
\begin_inset Quotes erd
\end_inset

 data examples for testing things.
 Very often, I simulate draws from a random variable, such as 
\begin_inset Formula $N(\mu,\sigma^{2})$
\end_inset

, with 
\begin_inset Formula $\mu$
\end_inset

 (
\begin_inset Quotes eld
\end_inset

mu
\begin_inset Quotes erd
\end_inset

) and 
\begin_inset Formula $\sigma$
\end_inset

 (
\begin_inset Quotes eld
\end_inset

sigma
\begin_inset Quotes erd
\end_inset

) as arguments.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

rnorm(n = 5, mean = 100, sd = 10)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Draws 5 
\begin_inset Quotes eld
\end_inset

pseudo random
\begin_inset Quotes erd
\end_inset

 values from 
\begin_inset Formula $N(100,10^{2})$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Quick Look at R Graphics
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Manufacture example data}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Lets use some random normal draws
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

set.seed(66565) #put in any integer you like
\end_layout

\begin_layout Plain Layout

x <- rnorm(n = 40, mean = 7, sd = 2)
\end_layout

\begin_layout Plain Layout

y <- rnorm(n = 40, mean = 35, sd = 10)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Two data vectors, x and y, with 40 observations in each one
\end_layout

\begin_layout Itemize
Example demonstrates 
\begin_inset Quotes eld
\end_inset


\emph on
named
\emph default
 arguments,
\begin_inset Quotes erd
\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
n
\end_layout

\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
mean
\end_layout

\end_inset

, and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sd
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{A histogram is a basic type of R Graphic}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<p2, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

hist(x, prob = TRUE, main = "My First Histogram")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/p-p2.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=8cm]{tmpout/p-p2.pdf}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Better labels}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<p3, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

hist(x, prob = TRUE, ylim = c(0, 0.20), xlim = c(0, 14), main = "", xlab
 = "Ages of Jane's 40 Hypothetical Children")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/p-p3.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=8cm]{tmpout/p-p3.pdf}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Want more detail on histograms?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Read the R documentation
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=T, eval=F>>=
\end_layout

\begin_layout Plain Layout

?hist
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Run their examples
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=T, eval=F>>=
\end_layout

\begin_layout Plain Layout

example(hist)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Lets check the scatterplot}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<p4, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

plot(y ~ x)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Column
4cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/p-p4.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $\sim$
\end_inset


\begin_inset Quotes erd
\end_inset

 is 
\begin_inset Quotes eld
\end_inset

formula notation
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Because x and y are numeric variables, R guesses we want scatterplot
\end_layout

\begin_layout Column
8cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=8cm]{tmpout/p-p4.pdf}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Draw a regression line on top of a scatterplot}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<p5, fig=T, include=F>>=
\end_layout

\begin_layout Plain Layout

plot(y ~ x, main = "linear regression")
\end_layout

\begin_layout Plain Layout

mod1 <- lm(y ~ x)
\end_layout

\begin_layout Plain Layout

abline(mod1)
\end_layout

\begin_layout Plain Layout

## abline shortcut only works for one-predictor models
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/p-p5.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=8cm]{tmpout/p-p5.pdf}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Re-group Variables into Data Frame}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I left 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
x
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
y
\end_layout

\end_inset

 floating loose, all by themselves in my workspace.
\end_layout

\begin_layout Itemize
Usually, I'd gather them together into a data frame, by doing
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

mydf <- data.frame(x = x, y = y)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R functions will generally work better with data in a data.frame structure,
 rather than stray vectors floating about.
 
\end_layout

\begin_layout Itemize
After putting copies in the data frame mydf, 
\begin_inset Quotes eld
\end_inset

clean up
\begin_inset Quotes erd
\end_inset

 by removing those stray vectors
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

rm(x, y)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Itemize
After that, verify that x, y, are no longer objects
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

ls()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The data.frame 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
mydf
\end_layout

\end_inset

 exists, we adjust the code in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
plot
\end_layout

\end_inset

 to tell it to look into mydf for the variables 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
data = mydf
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plotdf10, fig=T,include=F>>=
\end_layout

\begin_layout Plain Layout

plot(y ~ x, data = mydf, main = "Notice I used a data frame")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/p-plotdf10.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includegraphics[width=8cm]{tmpout/p-plotdf10.pdf}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Named and Unnamed arguments
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{My Previous Example used Named arguments}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

set.seed(1234)
\end_layout

\begin_layout Plain Layout

x <- rnorm(n = 40, mean = 7, sd = 2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\series bold
NEWS FLASH
\series default
: Names are not required.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

set.seed(1234)
\end_layout

\begin_layout Plain Layout

x <- rnorm(40, 7, 2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
As long as the first 3 legal arguments are the ones you want, this is a
 safe gamble.
\end_layout

\begin_layout Itemize
Can jumble the order of 
\emph on
named
\emph default
 arguments (must use names!)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

set.seed(1234)
\end_layout

\begin_layout Plain Layout

x <- rnorm(sd = 2, mean = 7, n = 40)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Also possible: Partial matching of partially spelled names
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

set.seed(1234)
\end_layout

\begin_layout Plain Layout

x <- rnorm(40, m = 7, s = 2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
How to ask for help
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks,containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{When you ask for help}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
People who want help forget to tell us
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
What 
\emph on
exactly
\emph default
 they did, or
\end_layout

\begin_layout Enumerate
What 
\emph on
exactly
\emph default
 went wrong
\end_layout

\end_deeper
\begin_layout Itemize
We waste time writing back asking
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
What did you do?
\end_layout

\begin_layout Enumerate
What kind of computer do you have?
\end_layout

\begin_layout Enumerate
What were the error messages, exactly? 
\end_layout

\begin_layout Enumerate
Show us your code! We require a 
\begin_inset Quotes eld
\end_inset

minimal reproducible example
\begin_inset Quotes erd
\end_inset

 (MRE) of the problem.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Give sessionInfo()}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
If you are writing to ask anybody for help about R, they need these bits
 of information.
\end_layout

\begin_layout Standard
1.
 ALWAYS provide the output of sessionInfo().
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sessionInfo,echo=T,include=F>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
tiny}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{tmpout/p-sessionInfo.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{sessionInfo() from a Mac}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/R-Mac-session.png
	width 10cm

\end_inset


\end_layout

\begin_layout Itemize
Observe the uniformity across operating systems (for which the R team has
 fought and struggled for a decade).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Editors and IDEs
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Editors and IDEs}
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned

\end_layout

\begin_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
GOOD PROGRAM EDITOR.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Itemize
R's editor for Windows is not adequate
\end_layout

\begin_layout Itemize
Try 
\end_layout

\begin_deeper
\begin_layout Itemize
Notepad++
\end_layout

\begin_layout Itemize
Emacs
\end_layout

\begin_layout Itemize
RStudio
\end_layout

\end_deeper
\begin_layout Itemize
Mac's R.app is OK, but possible now to use
\end_layout

\begin_deeper
\begin_layout Itemize
Emacs
\end_layout

\begin_layout Itemize
RStudio
\end_layout

\end_deeper
\begin_layout Column
6cm
\end_layout

\begin_layout Itemize
Automatic Indentation
\end_layout

\begin_layout Itemize
Highlight Matching Parentheses
\end_layout

\begin_layout Itemize
Color-coded text, program 
\begin_inset Quotes eld
\end_inset

tips
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
About These Notes
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{PDF, R, Rnw}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Look in the summeR-1-1 folder
\end_layout

\begin_layout Itemize
I'm preparing this file with LaTeX using
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
Beamer
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 class for slide shows and
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
Sweave
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 to put together R code and R code output into the PDF
\end_layout

\end_deeper
\begin_layout Itemize
By-product from manufacturing PDF
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
summeR-1-1-hello.R
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 has the R code 
\begin_inset Quotes eld
\end_inset

chunks
\begin_inset Quotes erd
\end_inset

 that are used in producing this PDF
\end_layout

\begin_layout Itemize
You can open that R file and run the commands, assuming you have correctly
 specified the working directory (to be explained later)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{References}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../../R"
options "apalike2"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Session}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sess10>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<opts20, include=F>>=
\end_layout

\begin_layout Plain Layout

## Don't delete this.
 It puts the interactive session options
\end_layout

\begin_layout Plain Layout

## back the way they were.
 If this is compiled within a session
\end_layout

\begin_layout Plain Layout

## it is vital to do this.
\end_layout

\begin_layout Plain Layout

options(opts.orig)
\end_layout

\begin_layout Plain Layout

options(par.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
