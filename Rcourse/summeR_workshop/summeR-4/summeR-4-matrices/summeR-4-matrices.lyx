#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}
\usepackage{array}
\usepackage{longtable}
\usepackage{graphicx}
\renewcommand{\doiprefix}{doi:\kern-1pt}
\setlength{\bibsep}{10pt}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
%for bold upright roman in math for matrix algebra
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}

%%\input{theme/guidePreambleSweavel.tex} 
%%% From beamer slide:
\usepackage{Sweave}
%% 
%% This controls display of code chunks
\usepackage{ae,fancyvrb,relsize,listings}

\providecommand{\Sweavesize}{\normalsize}
\providecommand{\Rsize}{}
\renewcommand{\Rsize}{\normalsize}
\providecommand{\Routsize}{\scriptsize}

\providecommand{\Rcolor}{\color[rgb]{0.1, 0.1, 0.1}}
\providecommand{\Routcolor}{\color[rgb]{0.2, 0.2, 0.2}}
\providecommand{\Rcommentcolor}{\color[rgb]{0.101, 0.43, 0.432}}

\providecommand{\Rbackground}{\color[gray]{0.91}}
\providecommand{\Routbackground}{\color[gray]{0.935}}
% Can specify \color[gray]{1} for white background or just \color{white}

\lstdefinestyle{Rinput}{
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  basicstyle=\Rsize\Rcolor\ttfamily,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%,
  commentstyle=\Rcommentcolor\ttfamily,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1{==}{{=\,=}}2{--}{{-\,-}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},%
  backgroundcolor=\Rbackground,%
  numbers=left,%
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}%

% Other options of interest:
% frame=single,framerule=0.1pt,framesep=1pt,rulecolor=\color{blue},
% numbers=left,numberstyle=\tiny,stepnumber=1,numbersep=7pt,
% keywordstyle={\bf\Rcolor}

\lstdefinestyle{Routput}{fancyvrb=false,
  literate={~}{{$\sim$}}1{R^2}{{$R^{2}$}}2{^}{{$^{\scriptstyle\wedge}$}}1{R-squared}{{$R^{2}$}}2,%
  basicstyle=\Routcolor\Routsize\ttfamily,%
  backgroundcolor=\Routbackground,
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1 {==}{{=\,=}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},
  numbers=left,
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}

\renewenvironment{Schunk}{}{}
\renewenvironment{Sinput}{}{}
\let\Sinput\relax
\let\Scode\relax
\let\Soutput\relax
\lstnewenvironment{Sinput}{\lstset{style=Rinput}}{}
\lstnewenvironment{Scode}{\lstset{style=Rinput}}{}
\lstnewenvironment{Soutput}{\lstset{style=Routput}}{}
%%end paste in from guidePreambleSweavel.tex


\lstset{tabsize=2, breaklines=true, style=Rinput, breakatwhitespace=true}

\fvset{listparameters={\setlength{\topsep}{0em}}}

\usepackage{xcolor}
\definecolor{light-gray}{gray}{0.90}
\usepackage{realboxes}
\providecommand*{\code}[1]{\texttt{#1}}
\renewcommand{\code}[1]{%
\Colorbox{light-gray}{#1}%
}%
%% end of paste

\usepackage[natbibapa]{apacite}

\definecolor{darkblue}{HTML}{1e2277}

%would be in beamerthemekucrmda%
\mode<presentation>
\definecolor{kublue}{RGB}{0,81,186}
\usefonttheme{professionalfonts}
\useoutertheme{infolines}
\useinnertheme{rounded}
%disable rounded for alert and example boxes%
\setbeamertemplate{blocks}[default]
\usecolortheme{whale}
\usecolortheme{orchid}
\setbeamercolor{structure}{bg=kublue,fg=kublue!90!black}
%\setbeamercolor{structure}{fg=kublue}
\setbeamercolor{frametitle}{bg=kublue}
\setbeamercolor{section in toc}{fg=kublue!40!black}

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}
\beamertemplatenavigationsymbolsempty
%end of beamerthemekucrmda%

%If you want bigger margins, try this:
\setbeamersize{text margin left=05mm,text margin right=10mm} 
\hypersetup{colorlinks,allcolors=.,urlcolor=darkblue}
%Following seems to have no effect now
%\usepackage{handoutWithNotes}
%\pgfpagesuselayout{3 on 1 with notes}[letterpaper, border shrink=5mm]

\titlegraphic{\includegraphics[width=6cm]{theme/logo}}
\logo{\includegraphics[width=5mm]{theme/logomini}}
\end_preamble
\options aspectratio=1609
\use_default_options false
\begin_modules
logicalmkup
sweave
natbibapa
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style \use_bibtopic false
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch semboot
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\branch cfalvm
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%following is LyX shortcut 
\backslash
vb for bold upright math for matrices
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\vb}[1]{\bm{\mathrm{#1}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch R
inverted 0
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% tmpout directory must exist first
\end_layout

\begin_layout Plain Layout

<<tmpout, echo=FALSE, include=FALSE, results=hide>>=
\end_layout

\begin_layout Plain Layout

tdir <- "tmpout"
\end_layout

\begin_layout Plain Layout

if(!dir.exists(tdir)) dir.create(tdir, showWarnings=FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=tmpout/t,split=T,ae=F,height=4.5,width=7}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, include=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

opts.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=100, prompt = " ", continue = "  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE)
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

par.orig <- par(no.readonly = TRUE) 
\end_layout

\begin_layout Plain Layout

pjmar <- c(4.1, 4.1, 1.5, 2.1)
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12, xpd=F)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

if(!file.exists("theme")) file.symlink("../../../../template/theme", "theme")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
Matrix Algebra in R 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Matrices
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul E.
 Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset


\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Johnson
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Political Science
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Center for Research Methods and Data Analysis, University of Kansas
\begin_inset Argument 1
status open

\begin_layout Plain Layout
K.U.
\end_layout

\end_inset


\end_layout

\begin_layout Date
2018
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Outline}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Objectives
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Key Terms
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Vector: a column of numbers
\end_layout

\begin_layout Description
Matrix: columns of equal length side-by-side, all elements of same type
 (numeric, etc)
\end_layout

\begin_layout Itemize
This presentation reviews the R 
\begin_inset CommandInset citation
LatexCommand citep
key "RCore"
literal "true"

\end_inset

 way of working with vectors and matrices
\end_layout

\begin_layout Itemize
Along the way, we try to become tolerant of jargon like 
\begin_inset Quotes eld
\end_inset

inner product
\begin_inset Quotes erd
\end_inset

 
\begin_inset Quotes eld
\end_inset

conform
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

transpose
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

symmetry
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

identity matrix
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

inverse
\begin_inset Quotes erd
\end_inset

, and orthogonal.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Matrix in stats: Regression!
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Regression
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Y=X\beta+\varepsilon
\]

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $X\beta$
\end_inset

 is the 
\begin_inset Quotes eld
\end_inset

linear predictor
\begin_inset Quotes erd
\end_inset

, the inputs converted to a 
\begin_inset Quotes eld
\end_inset

regression line
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dep.
 var
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Slopes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
indep var
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
error
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $y=\left[\begin{array}{c}
y_{1}\\
y_{2}\\
\vdots\\
y_{N}
\end{array}\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\beta=\left[\begin{array}{c}
\beta_{0}\\
\beta_{1}\\
\vdots\\
\beta_{p}
\end{array}\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $X=\left[\begin{array}{ccc}
1 & x1_{1}\ldots & xp_{1}\\
1 & x1_{2} & xp_{2}\\
\vdots & \vdots & \vdots\\
1 & x1_{N}\ldots & xp_{N}
\end{array}\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[\begin{array}{c}
\varepsilon_{1}\\
\varepsilon_{2}\\
\vdots\\
\varepsilon_{N}
\end{array}\right]$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
predicted values
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\hat{y}=\left[\begin{array}{c}
\hat{y}_{1}\\
\hat{y}_{2}\\
\vdots\\
\hat{y}_{N}
\end{array}\right]=X\hat{\beta}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Frame

\end_layout

\begin_layout Section
Vector
\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Terminology: vector 
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
In math, 
\series bold

\begin_inset Quotes eld
\end_inset

vector
\begin_inset Quotes erd
\end_inset


\series default
 means 
\series bold
column
\series default
 vector.
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula 
\[
y=\left[\begin{array}{c}
y_{1}\\
y_{2}\\
\vdots\\
y_{N}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
If anybody says 
\begin_inset Quotes eld
\end_inset

vector
\begin_inset Quotes erd
\end_inset

, it is assumed they mean a column.
\end_layout

\begin_layout Itemize
This has 
\begin_inset Formula $N$
\end_inset

 elements.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Creating Vectors in R: easy as falling off a log}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Many R functions create vectors.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<v10>>=
\end_layout

\begin_layout Plain Layout

x1a <- vector(mode = "double", length = 10)
\end_layout

\begin_layout Plain Layout

x1b <- double(length = 10) 
\end_layout

\begin_layout Plain Layout

x1c <- numeric(length = 10)
\end_layout

\begin_layout Plain Layout

## numeric is older terminology
\end_layout

\begin_layout Plain Layout

x1a
\end_layout

\begin_layout Plain Layout

identical(x1a, x1b, x1c)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
On screen, these things look like rows.
 But they are to be thought of as rows.
\end_layout

\begin_layout Itemize
Use 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
length()
\end_layout

\end_inset

 to ask a vector how many pieces of information it holds
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

length(x1a)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
c()
\end_layout

\end_inset

 is 
\begin_inset Quotes eld
\end_inset

concatenate
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
seq()
\end_layout

\end_inset

 creates 
\begin_inset Quotes eld
\end_inset

sequences
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<v20>>=
\end_layout

\begin_layout Plain Layout

x2a <- c(10, 9, 8, 7, 6, 5, 4, 3, 2, 1)
\end_layout

\begin_layout Plain Layout

x2b <- seq(10, 1, by = -1)
\end_layout

\begin_layout Plain Layout

identical(x2a, x2b)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R refers to vectors of numbers or letters as 
\begin_inset Quotes eld
\end_inset

atomic
\begin_inset Quotes erd
\end_inset

 vectors.
 These hold values which are not further reducible into other structures.
 It does not have 
\begin_inset Quotes eld
\end_inset

attributes
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Add and Subtract Vectors 
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
In Math, Addition and Subtraction allowed if vectors that are EXACTLY the
 same size
\size footnotesize

\begin_inset Formula 
\[
\left[\begin{array}{c}
4\\
2\\
1\\
0\\
3
\end{array}\right]+\left[\begin{array}{c}
1\\
2\\
5\\
0\\
1
\end{array}\right]=\left[\begin{array}{c}
5\\
4\\
6\\
0\\
4
\end{array}\right]\,\,or\,\,\left[\begin{array}{c}
4\\
2\\
1\\
0\\
3
\end{array}\right]-\left[\begin{array}{c}
1\\
2\\
5\\
0\\
1
\end{array}\right]=\left[\begin{array}{c}
3\\
0\\
-4\\
0\\
2
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
Conformability of vectors: same size!
\end_layout

\begin_layout Itemize
Addition is term-by-term.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks, containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Vector addition in R}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R is similar
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<v40>>=
\end_layout

\begin_layout Plain Layout

x <- c(4, 2, 1, 0, 3)
\end_layout

\begin_layout Plain Layout

y <- c(1, 2, 5, 0, 1)
\end_layout

\begin_layout Plain Layout

x + y
\end_layout

\begin_layout Plain Layout

y - x
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
R differs: 
\begin_inset Quotes eld
\end_inset

recycling
\begin_inset Quotes erd
\end_inset

! 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<v60>>=
\end_layout

\begin_layout Plain Layout

x <- c(1,2,3,4,5,6)
\end_layout

\begin_layout Plain Layout

y <- c(1,2)
\end_layout

\begin_layout Plain Layout

x + y
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks, containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{R allows coercion of vector types}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
An integer can be promoted to floating point values
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<v80>>=
\end_layout

\begin_layout Plain Layout

x <- c(1L, 2L, 3L)
\end_layout

\begin_layout Plain Layout

class(x)
\end_layout

\begin_layout Plain Layout

## same as as.numeric()
\end_layout

\begin_layout Plain Layout

y <- as.double(x)
\end_layout

\begin_layout Plain Layout

y
\end_layout

\begin_layout Plain Layout

class(y)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
as.integer()
\end_layout

\end_inset

 has effect of 
\begin_inset Quotes eld
\end_inset

rounding down
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<v90>>=
\end_layout

\begin_layout Plain Layout

x <- c(1.1, 2.2, 3.9)
\end_layout

\begin_layout Plain Layout

is.integer(x)
\end_layout

\begin_layout Plain Layout

y <- as.integer(x)
\end_layout

\begin_layout Plain Layout

y
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks, containsverbatim]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Transpose= turn sideways}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\series bold
The superscript T means transpose
\series default
, the column becomes a row:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\left[\begin{array}{c}
1\\
2\\
3\\
4\\
5
\end{array}\right]^{T}=\left[\begin{array}{ccccc}
1 & 2 & 3 & 4 & 5\end{array}\right]
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
Often the symbol 
\begin_inset Formula $'$
\end_inset

 is also common, 
\begin_inset Formula $x^{T}=x'$
\end_inset

, esp.
 in older books.
\end_layout

\end_deeper
\begin_layout Itemize
In R, transpose is a function 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
t()
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Itemize
On the screen, however, they both look like rows, but indexes differ slightly
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

x
\end_layout

\begin_layout Plain Layout

t(x)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Multiply 2 Vectors: 
\begin_inset Quotes eld
\end_inset

inner product
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The inner product is defined as the sum of the products, 
\begin_inset Formula $x^{T}\cdot y$
\end_inset

, as follows
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\left[\begin{array}{ccccc}
a & b & c & d & e\end{array}\right]\cdot\left[\begin{array}{c}
f\\
g\\
h\\
i\\
j
\end{array}\right]=af+bg+ch+di+ej\label{eq:innerproduct}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
The result is a single number (a 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Bold
status open

\begin_layout Plain Layout
scalar
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Inner product of 2 vectors
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\left[\begin{array}{ccccc}
a & b & c & d & e\end{array}\right]\cdot\left[\begin{array}{c}
f\\
g\\
h\\
i\\
j
\end{array}\right]=af+bg+ch+di+ej
\]

\end_inset


\end_layout

\begin_layout Itemize
In math, this is defined ONLY IF the row and column vectors have EXACTLY
 the same number of elements.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Conformability
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Itemize
Sometimes called a 
\begin_inset Quotes eld
\end_inset

dot product
\begin_inset Quotes erd
\end_inset

, but it is not necessary to write the dot 
\end_layout

\begin_layout Itemize
Example
\begin_inset Formula 
\[
[\begin{array}{cccc}
3 & 1 & 6 & 2\end{array}]\cdot\left[\begin{array}{c}
1/3\\
1\\
1/6\\
1/2
\end{array}\right]=1+1+1+1=4
\]

\end_inset


\end_layout

\begin_layout Itemize
Now you tell me.
 What is:
\begin_inset Formula 
\[
[\begin{array}{ccc}
1 & 12 & 21\end{array}]\left[\begin{array}{c}
0.1\\
0.5\\
1/3
\end{array}\right]\mathrm{?}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Back to the R side}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
%*%
\end_layout

\end_inset

 is the R operator calculates inner-product
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

x <- c(1, 12, 21)
\end_layout

\begin_layout Plain Layout

y <- c(0.1, 0.5, 1/3)
\end_layout

\begin_layout Plain Layout

t(x) %*% y
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{R does check conformability for multiplication!}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

x <- c(1, 12, 21, 19, 18)
\end_layout

\begin_layout Plain Layout

y <- c(0.1, 0.5, 1/3)
\end_layout

\begin_layout Plain Layout

t(x) %*% y
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Soutput}
\end_layout

\begin_layout Plain Layout

Error in x %*% y : non-conformable arguments
\end_layout

\begin_layout Plain Layout


\backslash
end{Soutput}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Application: Sum of Squares
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Calculate the sum of 
\begin_inset Quotes eld
\end_inset

squares
\begin_inset Quotes erd
\end_inset

 as 
\begin_inset Formula $x^{T}x$
\end_inset

 
\begin_inset Formula 
\[
\left[\begin{array}{ccccc}
a & b & c & d & e\end{array}\right]\cdot\left[\begin{array}{c}
a\\
b\\
c\\
d\\
e
\end{array}\right]=a^{2}+b^{2}+c^{2}+d^{2}+e^{2}
\]

\end_inset


\end_layout

\begin_layout Itemize
Sum of squared residuals in regression:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\sum_{i}^{N}(y_{i}-\hat{y}_{i})^{2}\\
=(y_{1}-\hat{y}_{1})^{2}+(y_{2}-\hat{y}_{2})^{2}+(y_{3}-\hat{y}_{3})^{2}\ldots
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=(y-\hat{y})^{T}(y-\hat{y})
\]

\end_inset


\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula 
\[
=(y_{1}-\hat{y}_{1},y_{2}-\hat{y}_{2},y_{3}-\hat{y}_{3}\ldots,y_{N}-\hat{y}_{N})\left[\begin{array}{c}
y_{1}-\hat{y}_{1}\\
y_{2}-\hat{y}_{2}\\
\vdots\\
y_{N}-\hat{y}_{N}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Itemize
Recall the Pythagorean theorem, the length of a hypotenuse is square root
 of the sum of squared sides? 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset Formula 
\[
a^{2}+b^{2}=c^{2}\Longrightarrow c=\sqrt{a^{2}+b^{2}}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
You see here that the sum of squares is the squared 
\begin_inset Quotes eld
\end_inset

length
\begin_inset Quotes erd
\end_inset

 of the residual vector
\end_layout

\begin_layout Itemize
In linear algebra, the length of a vector is called its 
\begin_inset Quotes eld
\end_inset

norm
\begin_inset Quotes erd
\end_inset

, represented as 
\begin_inset Formula $\parallel x\parallel$
\end_inset

.
 Sometimes they put a subscript 2 on that to remember it is a distance calculate
d by a sum of squares, 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\parallel x\parallel_{2}$
\end_inset

.
\end_layout

\begin_layout Itemize
Think of the sum of squares as a squared norm of the residual.
\begin_inset Formula 
\[
(y-\hat{y})^{T}(y-\hat{y})=\parallel y-\hat{y}\parallel_{2}^{2}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Back on the R side of the story}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
While in the math book, an inner product is not defined unless the first
 vector is transposed, R does not care.
 
\end_layout

\begin_layout Itemize
Observe.
 You can transpose if you want to.
 But it is not necessary.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

x <- c(1,2,3)
\end_layout

\begin_layout Plain Layout

y <- c(4,5,6) 
\end_layout

\begin_layout Plain Layout

x %*% y
\end_layout

\begin_layout Plain Layout

t(x) %*% y
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What if you forget the percent signs in the 
\backslash
%*
\backslash
% Symbol?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In a math book, it would be very rare to see vector multiplication that
 is not an inner product.
 
\end_layout

\begin_layout Itemize
However, in stats, we do sometimes want an element-by-element multiplication
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

x <- c(1,2,3)
\end_layout

\begin_layout Plain Layout

y <- c(4,5,6) 
\end_layout

\begin_layout Plain Layout

x * y
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R recycles x and issues a warning:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

x <- 1:3
\end_layout

\begin_layout Plain Layout

y <- 1:10
\end_layout

\begin_layout Plain Layout

x*y  
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Soutput}
\end_layout

\begin_layout Plain Layout

Warning message: 
\end_layout

\begin_layout Plain Layout

In x * y : longer object length is not a multiple
\end_layout

\begin_layout Plain Layout

of shorter object length
\end_layout

\begin_layout Plain Layout


\backslash
end{Soutput}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Itemize
See what it did? It manufactured a 10 element 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
x
\end_layout

\end_inset

 for us, 
\emph on
as if
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

(x <- c(1:3, 1:3, 1:3, 1))
\end_layout

\begin_layout Plain Layout

(y <- 1:10)
\end_layout

\begin_layout Plain Layout

x*y  
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Matrix
\end_layout

\begin_layout Subsection
Create a matrix in R
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Many ways to create matrices}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Use the matrix function to manufacture a 
\begin_inset Formula $4\times6$
\end_inset

 matrix
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Rsize{
\backslash
footnotesize}
\end_layout

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

X <- matrix(1:24, nrow = 4, ncol = 6, byrow = FALSE, dimnames = list(NULL,
 letters[1:6]))
\end_layout

\begin_layout Plain Layout

X
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Code
status open

\begin_layout Plain Layout
byrow = FALSE
\end_layout

\end_inset

 is the default, not needed to explicitly state that.
 
\end_layout

\begin_layout Standard
Not necessary to supply values, could have put 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
NA
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
0
\end_layout

\end_inset

 instead.
\end_layout

\begin_layout Standard
I insert 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
dimnames
\end_layout

\end_inset

 just to prove I can.
 That seems difficult for beginners.
 NULL row names, and a vector of column names
\end_layout

\end_deeper
\begin_layout Enumerate
Combine columns to form a matrix (
\begin_inset Flex Code
status open

\begin_layout Plain Layout
cbind
\end_layout

\end_inset

 = column bind)
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

x1 <- 1:4; x2 <- 5:8; x3 <- 9:12;
\end_layout

\begin_layout Plain Layout

x4 <- 13:16; x5 <- 17:20; x6 <- 21:24
\end_layout

\begin_layout Plain Layout

cbind(x1, x2, x3, x4, x5, x6)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Difference between vectors and matrices}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In mathematics, one might say a vector is a one column matrix
\end_layout

\begin_layout Itemize
R would differentiate those ideas.
 
\end_layout

\begin_layout Itemize
One hint of the difference in R is that a vector does not answer to the
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
dim()
\end_layout

\end_inset

 function (or nrow()), but a matrix does:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

dim(x1a)
\end_layout

\begin_layout Plain Layout

dim(X)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A vector answers 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
length()
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Observe that if we create a one column selection from an R matrix, R 
\begin_inset Quotes eld
\end_inset

demotes
\begin_inset Quotes erd
\end_inset

 that thing to a vector.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

## Take 4th column from X
\end_layout

\begin_layout Plain Layout

X4 <- X[ , 4]
\end_layout

\begin_layout Plain Layout

is.matrix(X)
\end_layout

\begin_layout Plain Layout

is.matrix(X4)
\end_layout

\begin_layout Plain Layout

is.vector(X4)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
We can ask R to 
\emph on
not demote 
\emph default
X4 to become a vector by inserting a third argument
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

X4mat <- X[ , 4, drop = FALSE]
\end_layout

\begin_layout Plain Layout

is.matrix(X4mat)
\end_layout

\begin_layout Plain Layout

is.vector(X4mat)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If you have a vector, however, some special functions exist that will treat
 it like a matrix.
 For example:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

NROW(x1a)
\end_layout

\begin_layout Plain Layout

NCOL(x1a)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
These capital-letter versions of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
nrow
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ncol
\end_layout

\end_inset

 can be convenient in functions where we don't know for sure if in put might
 be a vector or a matrix.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Matrix times Vector
\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Multiply a matrix times a vector 
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
I'll create a matrix that is 
\begin_inset Formula $(2\times5)$
\end_inset

 (2 rows, 5 columns).
 
\end_layout

\begin_layout Itemize
multiply 
\begin_inset Quotes eld
\end_inset

on the right
\begin_inset Quotes erd
\end_inset

 by a vector 
\begin_inset Formula $(5\times1)$
\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left[\begin{array}{ccccc}
a & b & c & d & e\\
r & s & t & u & v
\end{array}\right]\cdot\left[\begin{array}{c}
f\\
g\\
h\\
i\\
j
\end{array}\right]=\left[\begin{array}{c}
af+bg+ch+di+ej\\
rf+sg+th+ui+vj
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
Idea: treat matrix as two rows, calculate inner product for each one.
\end_layout

\begin_layout Itemize
\begin_inset Formula $[2\times5]\cdot[5\times1]$
\end_inset

 yields a 
\begin_inset Formula $[2\times1]$
\end_inset

 result
\end_layout

\begin_layout Itemize
Matrices must 
\series bold
conform
\series default
.
 Number of columns of first matrix must equal number of rows in 2nd one.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Itemize
Example: 
\begin_inset Formula $X\hat{\beta}$
\end_inset

 is predicted values in regression
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccccc}
 & \left[\begin{array}{ccc}
1 & x1_{1} & x2_{1}\\
1 & x1_{2} & x2_{2}\\
1 & \ldots & \ldots\\
1 & x1_{N} & x2_{N}
\end{array}\right] & \left[\begin{array}{c}
\hat{\beta}_{0}\\
\hat{\beta}_{1}\\
\hat{\beta}_{2}
\end{array}\right] & = & \left[\begin{array}{c}
\hat{\beta}_{0}+\hat{\beta}_{1}x1_{1}+\hat{\beta}_{2}x2_{1}\\
\hat{\beta}_{0}+\hat{\beta}_{1}x1_{2}+\hat{\beta}_{2}x2_{2}\\
\ldots\\
\hat{\beta}_{0}+\hat{\beta}_{1}x1_{N}+\hat{\beta}_{2}x2_{N}
\end{array}\right]\end{array}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsection
Matrix Multiplication
\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Multiply a matrix times a matrix 
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\left[\begin{array}{ccccc}
a & b & c & d & e\\
r & s & t & u & v
\end{array}\right]\cdot\left[\begin{array}{cc}
f & k\\
g & l\\
h & m\\
i & n\\
j & o
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=\left[\begin{array}{cc}
af+bg+ch+di+ej & ak+bl+cm+dn+eo\\
rf+sg+th+ui+vj & rk+sl+tm+un+vo
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
Break into sequences of vector multiplications, row 1 
\begin_inset Formula $\cdot$
\end_inset

 column 1, row2 
\begin_inset Formula $\cdot$
\end_inset

 column 1, row 1 
\begin_inset Formula $\cdot$
\end_inset

 column 2, row 2 
\begin_inset Formula $\cdot$
\end_inset

 column 2.
\end_layout

\begin_layout Itemize
\begin_inset Formula $[2\times5]\cdot[5\times2]$
\end_inset

 yields a 
\begin_inset Formula $[2\times2]$
\end_inset

 result
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{R has matrix multiplication also: $
\backslash
%*
\backslash
%$}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

X1 <- matrix(1:12, nrow = 2)
\end_layout

\begin_layout Plain Layout

X1
\end_layout

\begin_layout Plain Layout

X2 <- matrix(13:24, ncol = 2)
\end_layout

\begin_layout Plain Layout

X2
\end_layout

\begin_layout Plain Layout

X1 %*% X2
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Example: sum of squares matrix
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Transpose a Matrix}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $X^{T}$
\end_inset

 means 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $X$
\end_inset

 turned on its side
\begin_inset Quotes erd
\end_inset


\begin_inset Formula 
\[
X^{T}=\left[\begin{array}{ccccc}
1 & 1 & 1 & \ldots & 1\\
x1_{1} & x1_{2} & x1_{3} &  & x1_{N}\\
x2_{1} & x2_{2} & x2_{3} &  & x2_{N}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
Example, predictors in a regression:
\begin_inset Formula 
\[
X=\left[\begin{array}{ccc}
1 & 3 & 33\\
1 & 2 & 62\\
1 & 5 & 65\\
1 & 1 & 45\\
1 & 5 & 66
\end{array}\right]\,\,\mathrm{\mathit{X}\,is\,}5x3
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
X^{T}=\left[\begin{array}{ccccc}
1 & 1 & 1 & 1 & 1\\
3 & 2 & 5 & 1 & 5\\
33 & 62 & 65 & 45 & 66
\end{array}\right]\,\,\mathrm{\mathit{X^{T}}\,\,is\,3x5}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{$X^TX$ is an important matrix in statistics}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
And the product 
\begin_inset Formula $X^{T}X$
\end_inset

 is
\begin_inset Formula 
\[
\left[\begin{array}{ccccc}
1 & 1 & 1 & 1 & 1\\
3 & 2 & 5 & 1 & 5\\
33 & 62 & 65 & 45 & 66
\end{array}\right]\left[\begin{array}{ccc}
1 & 3 & 33\\
1 & 2 & 62\\
1 & 5 & 65\\
1 & 1 & 45\\
1 & 5 & 66
\end{array}\right]=\left[\begin{array}{ccc}
5 & 16 & 271\\
16 & 64 & 923\\
271 & 923 & 15539
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
Sum of squares (diagonal) and cross products (off-diagonals)
\end_layout

\begin_layout Itemize
Used to calculate correlations, regression coefficients
\end_layout

\begin_layout Itemize
\begin_inset Formula $X$
\end_inset

 is 
\begin_inset Formula $N\times p$
\end_inset

, 
\begin_inset Formula $X^{T}$
\end_inset

 is 
\begin_inset Formula $(p\times N)$
\end_inset

, so 
\begin_inset Formula $X^{T}X$
\end_inset

 is (
\begin_inset Formula $p\times p$
\end_inset

), much smaller than either 
\begin_inset Formula $X$
\end_inset

 or 
\begin_inset Formula $X^{T}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
In the pencil days of stats, the matrix 
\begin_inset Formula $X^{T}X$
\end_inset

 was especially heavily emphasized
\end_layout

\begin_layout Itemize
In computer era, it has less emphasis because of 
\begin_inset Quotes eld
\end_inset

rounding error
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{R has 2 ways to get this done}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In R, do not run t(X) %*% X
\end_layout

\begin_layout Itemize
Instead, use the optimized function
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
footnotesize}
\end_layout

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

crossprod(X)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
Why is 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
crossprod
\end_layout

\end_inset

 better? (more efficient! faster!)
\end_layout

\begin_layout Enumerate
The result is 
\begin_inset Quotes eld
\end_inset

symmetric
\begin_inset Quotes erd
\end_inset

, same above and below.
 Hence, computer should only need to calculate an upper triangle and copy
 the answer to the other triangle.
\end_layout

\begin_layout Enumerate
Creating a new transposed matrix 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
t(X)
\end_layout

\end_inset

 unnecessarily requires a copy of the columns of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
X
\end_layout

\end_inset

 into the rows of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
t(X)
\end_layout

\end_inset

.
 Computer can find values in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
X
\end_layout

\end_inset

 (whereas humans need to see 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
t(X)
\end_layout

\end_inset

 explicitly).
\end_layout

\begin_layout Standard
See also 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
tcrossprod()
\end_layout

\end_inset

 and functions in the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Matrix
\end_layout

\end_inset

 package.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Accelerated matrix algebra libraries}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Many C, C++, and Fortran libraries exist, competing to be the fastest, most
 accurate calculation routines
\end_layout

\begin_layout Itemize
They adhere to a common, internationally accepted interface (generally referred
 to as BLAS)
\end_layout

\begin_layout Itemize
Over time, R has relied on LINPACK, and now LAPACK for fast calculations
\end_layout

\begin_layout Itemize
On the horizon, some are narrower stats & modeling matrix libraries, like
 Armadillo and Eigen, are in the spotlight through packages like RcppArmadillo
 and RcppEigen
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Special Square Matrices
\end_layout

\begin_layout Subsection
Covariance Matrix
\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
containsverbatim,allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Got Simulations?
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The MASS package for R (Venables and Ripley, 2002) introduced a simulator
 for Multivariate Normal draws.
 Allows us to generate 
\begin_inset Quotes eld
\end_inset

correlated columns
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize
The theoretical model is represented as
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
MVN(\mu,\Sigma)
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\mu$
\end_inset

 is a vector of means and 
\begin_inset Formula $\Sigma$
\end_inset

 is the covariance matrix .
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
MVN\left(\left[\begin{array}{c}
\mu_{1}\\
\mu_{2}\\
\vdots\\
\mu_{p}
\end{array}\right],\left[\begin{array}{cccc}
\sigma_{1}^{2} & \sigma_{12} &  & \sigma_{1p}\\
\sigma_{12} & \sigma_{2}^{2} &  & \sigma_{2p}\\
 &  & \ddots\\
\sigma_{1p} & \sigma_{2p} &  & \sigma_{p}^{2}
\end{array}\right]\right)
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
If the variables all have 0 means and are uncorrelated, of course, MVN is
 the same as drawing 3 separate uncorrelated 
\begin_inset Quotes eld
\end_inset

standard normal
\begin_inset Quotes erd
\end_inset

 columns
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

library(MASS)
\end_layout

\begin_layout Plain Layout

mu <- c(0, 0, 0)
\end_layout

\begin_layout Plain Layout

Sigma <- diag(c(1, 1, 1))
\end_layout

\begin_layout Plain Layout

Sigma
\end_layout

\begin_layout Plain Layout

mvrnorm(5, mu, Sigma)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
But we might have correlated values, for example 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

mu <- rep(0, 3)
\end_layout

\begin_layout Plain Layout

Sigma <- matrix(c(1, .3, -.1, .3, 1, .2, -.1, .2, 1), nrow = 3)
\end_layout

\begin_layout Plain Layout

Sigma
\end_layout

\begin_layout Plain Layout

mvrnorm(5, mu = mu, Sigma = Sigma)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The Challenge: On a theoretical level, how do we conceptualize the desired
 covariance matrix? What do we write in?
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
I understand mean and variance
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The expected value is the center point of a distribution (AKA mean).
\end_layout

\begin_layout Itemize
Variance is 
\begin_inset Quotes eld
\end_inset

dispersion
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

diversity
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
Suppose 
\begin_inset Formula $x$
\end_inset

 is Normally distributed (
\begin_inset Formula $x\sim N(\mu,\sigma_{x}^{2})$
\end_inset

)
\end_layout

\begin_deeper
\begin_layout Itemize
Expected Value: 
\begin_inset Formula $E[x]=\mu$
\end_inset


\end_layout

\begin_layout Itemize
Variance: 
\begin_inset Formula $V[x]=\sigma_{x}^{2}$
\end_inset

, the standard deviation is 
\begin_inset Formula $\sigma_{x}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
Next, we expand this to apply to several variables
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Variance-Covariance Matrix
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Think of 
\begin_inset Formula $X$
\end_inset

 as 5 predictor columns, 
\begin_inset Formula $x1,$
\end_inset

 ..., 
\begin_inset Formula $x5$
\end_inset

 for 
\begin_inset Formula $N$
\end_inset

 rows of observations
\begin_inset Formula 
\begin{equation}
X=\left[\begin{array}{ccccc}
x1_{1} & x2_{1} & x3_{1} & x4_{1} & x5_{1}\\
x1_{2} & x2_{2} & x3_{2} & x4_{2} & x5_{2}\\
x1_{3} & x2_{3} & x3_{3} & x4_{3} & x5_{3}\\
 &  & \vdots\\
x1_{N} & x2_{N} & x3_{N} & x4_{N} & x5_{N}
\end{array}\right]\label{eq:Xcolumns}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Var(X)=\Sigma=\left[\begin{array}{ccccc}
\sigma_{x1}^{2} & \sigma_{x2,x1} & \sigma_{x3,x1} & \sigma_{x4,x1} & \sigma_{x5,x1}\\
\sigma_{x2,x1} & \sigma_{x1}^{2} & \sigma_{x3,x2}^{2} & \sigma_{x4,x2} & \sigma_{x5,x2}\\
\sigma_{x3,x1} & \sigma_{x3,x2} & \sigma_{x3}^{2} & \sigma_{x4,x3} & \sigma_{x5,x3}\\
\sigma_{x4,x1} & \sigma_{x4,x2} & \sigma_{x4,x3} & \sigma_{x4}^{2} & \sigma_{x5,x4}\\
\sigma_{x5,x1} & \sigma_{x5,x2} & \sigma_{x5,x3} &  & \sigma_{x5}^{2}
\end{array}\right]\label{eq:Var}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
The diagonals are variances, which range from 
\begin_inset Formula $[0,\infty)$
\end_inset

, but the off-diagonals are scale-free numbers called 
\begin_inset Quotes eld
\end_inset


\emph on
covariances
\emph default

\begin_inset Quotes erd
\end_inset

, that range from 
\begin_inset Formula $(-\infty,\infty).$
\end_inset

 
\end_layout

\begin_layout Itemize
If covariance is positive, two variables 
\begin_inset Quotes eld
\end_inset

go together
\begin_inset Quotes erd
\end_inset

.
 But how big should it be? I can't conceptualize that.
\end_layout

\begin_layout Itemize
It is easier for me to conceptualize
\end_layout

\begin_deeper
\begin_layout Enumerate
The standard deviations of the columns: 
\begin_inset Formula $[\sigma_{x1},\sigma_{x2},\ldots,\sigma_{x5}]$
\end_inset


\end_layout

\begin_layout Enumerate
The Pearson correlation matrix among the columns
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks, plain
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
You know correlations, right?
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Pearson product moment correlation is the ratio of covariance to the product
 of the standard deviations (example with variables 
\begin_inset Formula $x1$
\end_inset

 and 
\begin_inset Formula $x3$
\end_inset

):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\rho_{x1,x3}=\frac{\sigma_{x1,x3}}{\sigma_{x1}\cdot\sigma_{x3}}
\]

\end_inset


\end_layout

\begin_layout Itemize
Correlation ranges from 
\begin_inset Formula $(-1,1)$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $0$
\end_inset

 indicates 2 variables are not related.
\end_layout

\end_deeper
\begin_layout Itemize
Rearrange to create another way to calculate Covariance
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\sigma_{x1,x3}=\sigma_{x1}\cdot\sigma_{x3}\cdot\rho_{x1,x3}
\end{equation}

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Cov and Corr matrices
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
A Correlation matrix
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\rho=\left[\begin{array}{ccccc}
1 & \rho_{12} & \rho_{13} & \ldots & \rho_{1p}\\
\rho_{21} & 1 & \rho_{23} &  & \rho_{2p}\\
\rho_{31} & \ddots & 1 &  & \rho_{3p}\\
\vdots &  & \rho_{11} & \ddots\\
\rho_{p1} & \rho_{11} & \rho_{11} &  & 1
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
Its Symmetric! Elements bounded between -1 and +1
\end_layout

\begin_layout Itemize
Example
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\rho=\left[\begin{array}{ccccc}
1 & .8 & 0 & \ldots & 0\\
.8 & 1 & 0 &  & 0\\
0 & \ddots & 1 &  & 0\\
\vdots &  & 0 & \ddots\\
0 & 0 & 0 &  & 1
\end{array}\right]
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Restriction: the intercorrelations among several variables must make sense.
 Suppose 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $x1$
\end_inset

 is very tightly correlated with 
\begin_inset Formula $x2$
\end_inset

, and
\end_layout

\begin_layout Itemize
\begin_inset Formula $x2$
\end_inset

 is tightly correlated with 
\begin_inset Formula $x3$
\end_inset

, then
\end_layout

\begin_layout Itemize
its not conceptually meaningful to suppose 
\begin_inset Formula $x1$
\end_inset

 is negatively related to 
\begin_inset Formula $x3$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The restriction is that 
\begin_inset Formula $\rho$
\end_inset

 is 
\begin_inset Quotes eld
\end_inset

positive definite
\begin_inset Quotes erd
\end_inset

, meaning 
\begin_inset Formula $y^{T}\rho\,y>0$
\end_inset

 for any vector 
\begin_inset Formula $y$
\end_inset

.
 Roughly speaking, a vector cannot be negatively correlated with itself.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Variance-Covariance Matrix as Re-scaled Correlation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
Variance=Std.Deviation\times Correlation\times Std.Deviation
\]

\end_inset


\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset Formula 
\begin{eqnarray}
\Sigma & = & \left[\begin{array}{ccccc}
\sigma_{x1} & 0 & 0 & 0 & 0\\
0 & \sigma_{x2} & 0 & 0 & 0\\
0 & 0 & \sigma_{x3} & 0 & 0\\
0 & 0 & 0 & \sigma_{x4} & 0\\
0 & 0 & 0 & 0 & \sigma_{x5}
\end{array}\right]\times\left[\begin{array}{ccccc}
1 & \rho_{12} & \rho_{13} & \ldots & \rho_{1p}\\
\rho_{21} & 1 & \rho_{23} &  & \rho_{2p}\\
\rho_{31} & \ddots & 1 &  & \rho_{3p}\\
\vdots & _{11} & \rho_{11} & \ddots\\
\rho_{p1} & \rho_{11} & \rho_{11} &  & 1
\end{array}\right]\nonumber \\
 &  & \times\left[\begin{array}{ccccc}
\sigma_{x1} & 0 & 0 & 0 & 0\\
0 & \sigma_{x2} & 0 & 0 & 0\\
0 & 0 & \sigma_{x3} & 0 & 0\\
0 & 0 & 0 & \sigma_{x4} & 0\\
0 & 0 & 0 & 0 & \sigma_{x5}
\end{array}\right]\label{eq:Cov1}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Itemize
Inspect an individual piece
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\Sigma_{11}$
\end_inset

 should be the variance of 
\begin_inset Formula $x1$
\end_inset


\begin_inset Formula 
\[
\sigma_{x1,x1}=\sigma_{x1}\cdot\sigma_{x1}=\sigma_{x1}^{2}
\]

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\Sigma_{13}$
\end_inset

 is a 
\begin_inset Quotes eld
\end_inset

cross
\begin_inset Quotes erd
\end_inset

 term, that weights the two standard deviations by their correlations
\begin_inset Formula 
\begin{equation}
\sigma_{x1,x3}=\rho_{13}\sigma_{x1}\sigma_{x2}
\end{equation}

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Check if $
\backslash
Sigma$ is a legal correlation matrix?}
\end_layout

\end_inset


\end_layout

\begin_layout ColumnsTopAligned

\end_layout

\begin_deeper
\begin_layout Column
7cm
\end_layout

\begin_layout Itemize
Obviously, it is necessary that the 
\end_layout

\begin_deeper
\begin_layout Itemize
diagonal is 1's
\end_layout

\begin_layout Itemize
off-diagonals are between -1 and 1
\end_layout

\begin_layout Itemize
symmetric
\end_layout

\end_deeper
\begin_layout Itemize
The values must be coherent, 
\begin_inset Quotes eld
\end_inset

positive definite
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Column
5cm
\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\[
\left[\begin{array}{ccccc}
1 & \rho_{12} & \rho_{13} & \ldots & \rho_{1p}\\
\rho_{21} & 1 & \rho_{23} &  & \rho_{2p}\\
\rho_{31} & \ddots & 1 &  & \rho_{3p}\\
\vdots & _{11} & \rho_{11} & \ddots\\
\rho_{p1} & \rho_{11} & \rho_{11} &  & 1
\end{array}\right]
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{R has tools to get that done}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
An example correlation matrix: everything is equally strongly correlated
 with everything else:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<include=F>>=
\end_layout

\begin_layout Plain Layout

library(rockchalk)
\end_layout

\begin_layout Plain Layout

Rho <- lazyCor(.5, d = 5)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

Rho
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Is the diagonal full of 1's?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

Rho.d <- diag(Rho)
\end_layout

\begin_layout Plain Layout

Rho.d
\end_layout

\begin_layout Plain Layout

all.equal(Rho.d, rep(1, times = 5))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Is it symmetric?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

isSymmetric(Rho)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Are all values in 
\begin_inset Formula $[-1,1]$
\end_inset

?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

## Seems like should be more direct way, but...
\end_layout

\begin_layout Plain Layout

z <- as.vector(Rho)
\end_layout

\begin_layout Plain Layout

z
\end_layout

\begin_layout Plain Layout

## single | for vector compare
\end_layout

\begin_layout Plain Layout

any(z > 1 | z < -1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
How to check if it is positive definite? In the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
MASS::mvrnorm
\end_layout

\end_inset

 function, Venables and Ripley show one way.
 
\end_layout

\begin_deeper
\begin_layout Itemize
In 
\begin_inset Quotes eld
\end_inset

exact math
\begin_inset Quotes erd
\end_inset

 a matrix is positive definite if all of its eigenvalues are positive
\end_layout

\begin_layout Itemize
Computers don't do exact math, however
\end_layout

\begin_layout Itemize
V&R's solution is to require that the estimated eigenvalues must be positive,
 or nearly so.
 The variable 
\begin_inset Quotes eld
\end_inset

tol
\begin_inset Quotes erd
\end_inset

 is tolerance, 
\begin_inset Formula $10^{-6}$
\end_inset

, a practical standard
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

eS <- eigen(Sigma, symmetric = TRUE)
\end_layout

\begin_layout Plain Layout

ev <- eS$values
\end_layout

\begin_layout Plain Layout

if (!all(ev >= -tol * abs(ev[1L])))
\end_layout

\begin_layout Plain Layout

        stop("'Sigma' is not positive definite")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This allows the possibility that the smallest eigenvalue,
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ev[1L]
\end_layout

\end_inset

, might be negative, but it must not be too far below 0.
\end_layout

\begin_layout Itemize
I found that so useful I put same calculation into a function in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rockchalk
\end_layout

\end_inset

 called 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
checkPosDef
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{What's all that good for?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In 30 years of teaching, I wrote 2 good lectures, one of which is:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://pj.freefaculty.org/guides/stat/Regression/Multicollinearity/Multicollineari
ty-1-lecture.pdf
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Get the highlights:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F,include=T>>=
\end_layout

\begin_layout Plain Layout

library(rockchalk)
\end_layout

\begin_layout Plain Layout

example(mcGraph3)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
OMG, why didn't I get the memo?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Regression Book says $
\backslash
ldots$}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Regression book says
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y=X\beta+\varepsilon
\]

\end_inset


\end_layout

\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

first order condition
\begin_inset Quotes erd
\end_inset

 for optimizing values of 
\begin_inset Formula $\beta$
\end_inset

 is the 
\begin_inset Quotes eld
\end_inset

normal equation
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
(X^{T}X)\beta=X^{T}y\label{eq:normal}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
Which the book will say is solved by finding an inverse matrix 
\begin_inset Formula $(X^{T}X)^{-1}$
\end_inset

 that we multiply on the left to get 
\begin_inset Formula $\hat{\beta}$
\end_inset

 by itself
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\bcancel{(X^{T}X)^{-1}}\bcancel{(X^{T}X)}\hat{\beta}=(X^{T}X)^{-1}X^{T}y
\]

\end_inset


\begin_inset Formula 
\begin{equation}
\hat{\beta}=(X^{T}X)^{-1}X^{T}y\label{eq:betahat}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
While correct on a theoretical level, this amounts to poor computational
 numeric linear algebra.
 Regression estimates are not calculated in that way.
\end_layout

\begin_layout Itemize
Now I'll explain all of the inter-related terms.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Identity Matrix}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The matrix equivalent of the number 1 is 
\begin_inset Formula $I$
\end_inset

, the Identity Matrix
\begin_inset Formula 
\[
I=\left[\begin{array}{cccc}
1 & 0 & 0 & 0\\
0 & 1 & 0 & 0\\
0 & 0 & \ddots & 0\\
0 & 0 & 0 & 1
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $I$
\end_inset

 times 
\begin_inset Formula $anything$
\end_inset

 gives back 
\begin_inset Formula $anything$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $anything$
\end_inset

 times 
\begin_inset Formula $I$
\end_inset

 gives back 
\begin_inset Formula $anything$
\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
I\times y=y
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
X\times I=X
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Inverse Matrix}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The sum of squares and cross products is a square matrix 
\begin_inset Formula $(X^{T}X)$
\end_inset

.
 
\end_layout

\begin_layout Itemize
If we could find an inverse matrix 
\begin_inset Formula $(X^{T}X)^{-1}$
\end_inset

, then
\begin_inset Formula 
\[
(X^{T}X)^{-1}(X^{T}X)=I
\]

\end_inset


\end_layout

\begin_layout Itemize
The matrix 
\begin_inset Formula $(X^{T}X)$
\end_inset

 is 
\begin_inset Quotes eld
\end_inset

invertible
\begin_inset Quotes erd
\end_inset

 under some 
\begin_inset Quotes eld
\end_inset

regularity
\begin_inset Quotes erd
\end_inset

 conditions (lets worry about that another time).
\end_layout

\begin_layout Itemize
Hence, in exact math, the normal equation 
\begin_inset Formula $(X^{T}X)\beta=X^{T}y$
\end_inset

 can be converted to the solution 
\begin_inset Formula 
\[
\hat{\beta}=(X^{T}X)^{-1}X^{T}y
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{R can calculate the inverse of a matrix}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Virtually every stats teacher I know has used R matrix calculations to show
 we can reproduce the estimates from a regression function.
 Here's a sketch
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

mod1 <- lm(y ~ x1 + x2 + x3, data = any_data_you_have)
\end_layout

\begin_layout Plain Layout

summary(mod1)
\end_layout

\begin_layout Plain Layout

X <- model.matrix(mod1)
\end_layout

\begin_layout Plain Layout

XTX <- t(X) %*% X
\end_layout

\begin_layout Plain Layout

XTXinv <- solve(XTX)
\end_layout

\begin_layout Plain Layout

BetaHat <- XTXinv %*% t(X) %*% any_data_you_have$y
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I ran example(lm), which created an outcome variable weight and a regression
 object lm.D9.
\end_layout

\begin_deeper
\begin_layout Itemize
Then:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Sweavesize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

X <- model.matrix(lm.D9)
\end_layout

\begin_layout Plain Layout

XTX <- t(X) %*% X
\end_layout

\begin_layout Plain Layout

XTXinv <- solve(XTX)
\end_layout

\begin_layout Plain Layout

Beta <- XTXinv %*% t(X) %*% weight
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Which appears to be the same as the fitted model:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Soutput}
\end_layout

\begin_layout Plain Layout

> Beta
\end_layout

\begin_layout Plain Layout

              [,1]
\end_layout

\begin_layout Plain Layout

(Intercept)  5.032
\end_layout

\begin_layout Plain Layout

groupTrt    -0.371
\end_layout

\begin_layout Plain Layout

> coef(lm.D9)
\end_layout

\begin_layout Plain Layout

(Intercept)    groupTrt
\end_layout

\begin_layout Plain Layout

      5.032      -0.371
\end_layout

\begin_layout Plain Layout


\backslash
end{Soutput}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
But, if we dial up the number of displayed digits, the numbers are not the
 same:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{Soutput}
\end_layout

\begin_layout Plain Layout

options.orig <- options()
\end_layout

\begin_layout Plain Layout

options(digits = 22)
\end_layout

\begin_layout Plain Layout

> coef(lm.D9)
\end_layout

\begin_layout Plain Layout

              (Intercept)                  groupTrt
\end_layout

\begin_layout Plain Layout

 5.0320000000000000284217 -0.3709999999999997188915
\end_layout

\begin_layout Plain Layout

> Beta
\end_layout

\begin_layout Plain Layout

                                [,1]
\end_layout

\begin_layout Plain Layout

(Intercept)  5.032000000000000916600
\end_layout

\begin_layout Plain Layout

groupTrt    -0.371000000000000995648
\end_layout

\begin_layout Plain Layout

options(options.orig)
\end_layout

\begin_layout Plain Layout


\backslash
end{Soutput}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Why these differ in the decimal places, or how they come to differ, is the
 big news in the next few slides.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Now the tragic news}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
No respectable software today would explicitly form 
\begin_inset Formula $X^{T}X$
\end_inset

 for the purpose of calculating regression estimates.
 Digital rounding error, inherent in floating point calculations, is damaging
 and unnecessary
\end_layout

\begin_layout Itemize
No respectable software calculates 
\begin_inset Formula $(X^{T}X)^{-1}$
\end_inset

.
 Doing so compounds on the rounding error inherent in 
\begin_inset Formula $X^{T}X$
\end_inset


\end_layout

\begin_layout Itemize
There are many ways to calculate inverses, some are more numerically stable,
 some faster.
 But all are better than 
\begin_inset Formula $(X^{T}X)^{-1}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{How do they actually do it?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Use the Source, Luke
\begin_inset Quotes erd
\end_inset

 (Kenobe, 1977)
\end_layout

\begin_layout Itemize
First, type 
\begin_inset Quotes eld
\end_inset

lm
\begin_inset Quotes erd
\end_inset

 with no parentheses
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F,echo=T>>=
\end_layout

\begin_layout Plain Layout

lm
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Scan through there, look for 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
lm.fit(x, y, ...)
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 .
\end_layout

\begin_layout Itemize
Check the code for 
\begin_inset Quotes eld
\end_inset

lm.fit
\begin_inset Quotes erd
\end_inset

.
 There's no 
\begin_inset Formula $(X^{T}X)^{-1}$
\end_inset

, no hint of t(x) %*% x 
\end_layout

\begin_layout Itemize
Instead, the magic bullet is
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

z <- .Call(C_Cdqrls, x, y, tol, FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
That's a call to a C function which calculates the 
\begin_inset Quotes eld
\end_inset

QR
\begin_inset Quotes erd
\end_inset

 decomposition of x
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The QR decomposition of the predictor matrix}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The QR decomposition: A matrix X can be reproduced as the product of 2 parts,
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
An orthogonal matrix Q
\end_layout

\begin_layout Enumerate
An upper right triangular R (with rows of 0's padding the bottom so that
 it is length N).
\end_layout

\end_deeper
\begin_layout Itemize
Suppose 
\begin_inset Formula $X$
\end_inset

 is 
\begin_inset Formula $N\,\times\,p$
\end_inset

 (regression predictors).
 Reproduce X as 
\begin_inset Formula 
\[
X=Q\left[\begin{array}{c}
R\\
0
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
The matrix 
\begin_inset Formula $Q$
\end_inset

 is 
\begin_inset Formula $N\times N$
\end_inset

, which means it is huge, but it has a very interesting property: the correlatio
n between each column and any of the other columns is 0.
 I mean to say, the columns are orthogonal to each other.
 For two columns 
\begin_inset Formula $Q_{.j}$
\end_inset

 and 
\begin_inset Formula $Q_{.k}$
\end_inset

, 
\begin_inset Formula 
\[
Q_{.j}^{T}Q_{.k}=0
\]

\end_inset


\end_layout

\begin_layout Itemize
The 
\begin_inset Formula $Q$
\end_inset

 matrix is also scaled so the inner product of any column with itself is
 1.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Q_{.j}^{T}Q_{.j}=1
\]

\end_inset


\end_layout

\begin_layout Itemize
This implies: 
\begin_inset Formula $Q^{T}Q=I$
\end_inset

, 
\begin_inset Formula $QQ^{T}=I$
\end_inset

.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Literally, 
\begin_inset Formula $Q^{-1}=Q^{T}$
\end_inset

.
\end_layout

\begin_layout Itemize
The inverse of an orthogonal matrix is very easy to calculate, in other
 words.
\end_layout

\end_deeper
\begin_layout Itemize
The requirement that 
\begin_inset Formula $Q$
\end_inset

 is huge, 
\begin_inset Formula $N\times N$
\end_inset

, would ordinarily discourage us because memory storage would be very expensive.
 However, it turns out we only need the first 
\begin_inset Formula $p$
\end_inset

 columns from 
\begin_inset Formula $Q$
\end_inset

.
\end_layout

\begin_layout Itemize
The bottom part of the stack, 
\begin_inset Formula $\left[\begin{array}{c}
R\\
0
\end{array}\right]$
\end_inset

, is 
\begin_inset Formula $N-p$
\end_inset

 rows of 
\begin_inset Formula $0$
\end_inset

's:
\begin_inset Formula 
\begin{equation}
\left[\begin{array}{c}
R\\
0
\end{array}\right]=\left[\begin{array}{c}
\begin{array}{ccccc}
r_{11} & r_{12} & r_{13} & r_{14} & r_{1p}\\
0 & r_{22} & r_{23} & r_{24} & r_{2p}\\
0 & 0 & r_{33} & r_{34} & r_{3p}\\
0 & 0 & 0 & \ddots & r_{(N-1)p}\\
0 & 0 & 0 & 0 & r_{NN}\\
0 & 0 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 0\\
0 & 0 & 0 & 0 & 0
\end{array}\end{array}\right]\mbox{ }
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
The bottom rows of 
\begin_inset Formula $R$
\end_inset

 are all zeros, meaning that the columns on the right side of 
\begin_inset Formula $Q$
\end_inset

 don't matter.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\size footnotesize
\begin_inset Formula 
\begin{equation}
X=\left[\begin{array}{ccc}
q_{11} &  & q_{1N}\\
q_{21} & \ddots\\
 & [N\times N]\\
 & \ddots\\
q_{N1} &  & q_{NN}
\end{array}\right]\left[\begin{array}{c}
\begin{array}{cccc}
r_{11} & r_{12} & r_{13} & r_{1p}\\
0 & r_{22} & r_{23} & r_{2p}\\
0 & 0 & r_{33} & r_{3p}\\
0 & 0 & \ddots & r_{(p-1)p}\\
0 & 0 & 0 & r_{pp}\\
0 & 0 & [N-p] & 0\\
0 & 0 & [rows] & 0\\
0 & 0 & [of\,0's] & 0
\end{array}\end{array}\right]\mbox{ }
\end{equation}

\end_inset


\size default
The last 
\begin_inset Formula $m-n$
\end_inset

 columns of 
\begin_inset Formula $Q$
\end_inset

 get zeroed out by the 
\begin_inset Formula $0$
\end_inset

's on the bottom of 
\begin_inset Formula $R$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
The original matrix 
\begin_inset Formula $X$
\end_inset

 can be reproduced if we just use the 
\begin_inset Formula $p$
\end_inset

 columns on the left side of 
\begin_inset Formula $Q$
\end_inset

 and the triangular matrix 
\begin_inset Formula $R$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
X=\left[\begin{array}{cccc}
q_{11} & q_{12} &  & q_{1p}\\
q_{21} & \ddots\\
\\
 & [N\times p]\\
\\
\\
q_{N1} &  &  & q_{Np}
\end{array}\right]\left[\begin{array}{c}
\begin{array}{ccccc}
r_{11} & r_{12} & r_{13} & r_{14} & r_{1p}\\
0 & r_{22} & r_{23} & r_{24} & r_{2p}\\
0 & 0 & r_{33} & r_{34} & r_{3p}\\
0 & 0 & 0 & \ddots & r_{(p-1)p}\\
0 & 0 & 0 & 0 & r_{pp}
\end{array}\end{array}\right]\mbox{ }
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
This more 
\begin_inset Quotes eld
\end_inset

petite
\begin_inset Quotes erd
\end_inset

 version (
\begin_inset Formula $Q_{f})$
\end_inset

 is the one that R saves in memory
\begin_inset Formula 
\begin{equation}
X=Q_{f}R
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
In regression analysis, we symbolically derive
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\hat{\beta}=(X^{T}X)^{-1}X^{T}y
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
A very accurate, reasonably fast way to calculate that is with QR.
 Replace 
\begin_inset Formula $X$
\end_inset

 by the petite 
\begin_inset Formula $Q_{f}R$
\end_inset

.
\begin_inset Formula 
\begin{equation}
\hat{\beta}=((Q_{f}R)^{T}(Q_{f}R))^{-1}(Q_{f}R)^{T}y
\end{equation}

\end_inset

If we use the rules for inverses and transposes mentioned above, we can
 algebraically reduce that:z > 1 || z < -1
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\hat{\beta} & = & (R^{T}Q_{f}^{T}Q_{f}R))^{-1}(Q_{f}R)^{T}y\\
 &  & (R^{T}R)^{-1}R^{T}Q_{f}^{T}y\\
 &  & R^{-1}R^{T^{-1}}R^{T}Q_{f}^{T}y\\
 &  & R^{-1}Q_{f}^{T}y
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Itemize
What's the big idea there? 
\end_layout

\begin_deeper
\begin_layout Itemize
We need the QR decomposition of 
\begin_inset Formula $X$
\end_inset

 to calculate regression estimates
\end_layout

\begin_layout Itemize
We do not need 
\begin_inset Formula $(X^{T}X)^{-1}$
\end_inset

.z > 1 || z < -1
\end_layout

\end_deeper
\begin_layout Itemize
The only regression book in which I have found this written out clearly
 is Simon Wood's 
\emph on
Generalized Additive Models
\emph default
 (2006).
\end_layout

\begin_layout Itemize
I started more notes on this 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://pj.freefaculty.org/guides/stat/Math/Matrix-Decompositions
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The High Points}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If we are doing statistics, we are doing math
\end_layout

\begin_deeper
\begin_layout Itemize
with vectors and matrices
\end_layout

\end_deeper
\begin_layout Itemize
There are some basic chores that all methodologists should be able to handle
 which will require some comfort with matrices
\end_layout

\begin_deeper
\begin_layout Itemize
Creating covariance and correlation matrices
\end_layout

\begin_layout Itemize
Drawing random samples
\end_layout

\end_deeper
\begin_layout Itemize
This lecture introduced only a small slice of matrix algebra in order to
 illustrate 2 main points
\end_layout

\begin_deeper
\begin_layout Itemize
R has code to do calculations that math books describe, but
\end_layout

\begin_layout Itemize
in a digital computer, matrix algebra does not work exactly as planned in
 a math book that presumes exact calculations of floating point numbers
\end_layout

\end_deeper
\begin_layout Itemize
If we study the way the R team has implemented numerical calculations, we
 can push forward our study of matrix algebra by focusing on the tools that
 are immediately relevant (the QR decomposition, for example)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{That intriguing comment in prcomp}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In the base R distribution, there are 2 functions for principal components
 analysis, princomp and prcomp.
\end_layout

\begin_deeper
\begin_layout Itemize
princomp is the older one
\end_layout

\begin_layout Itemize
prcomp is the newer one
\end_layout

\end_deeper
\begin_layout Itemize
Care to guess why there are two?
\end_layout

\begin_deeper
\begin_layout Itemize
In princomp, 
\begin_inset Quotes eld
\end_inset

Details
\begin_inset Quotes erd
\end_inset

 explains
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

The calculation is done using 'eigen' on the correlation or covariance matrix,
 as determined by 'cor'.
  This is done for compatibility with the S-PLUS result.
 A preferred method of      calculation is to use 'svd' on 'x', as is done
 in 'prcomp'
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The SVD (Singular Value Decomposition) of a matrix is 
\end_layout

\begin_deeper
\begin_layout Itemize
more accurate, but also more expensive to calculate 
\end_layout

\begin_layout Itemize
The traditional approach is to calculate the eigenvalue-decomposition on
 a square crossproducts matrix, 
\begin_inset Formula $X^{T}X$
\end_inset

, rather than 
\begin_inset Formula $X$
\end_inset

 itself.
\end_layout

\begin_layout Itemize
Because SVD can apply to 
\begin_inset Formula $X$
\end_inset

, without forming 
\begin_inset Formula $X^{T}X$
\end_inset

, it is more accurate.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Online Free Resources}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
H
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
o{}
\end_layout

\end_inset

jsgaard, Soren, 
\begin_inset Quotes eld
\end_inset

Linear algebra in R
\begin_inset Quotes erd
\end_inset

.
 This is my favorite.
 A beautifully done essay that covers many details.
 I can't find this in Hojsgaard's page today, but I find plenty of other
 people have it available if you search in Google.
\end_layout

\begin_layout Itemize
Farnsworth, Grant V, 
\begin_inset Quotes eld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "Econometrics in R"
target "https://cran.r-project.org/doc/contrib/Farnsworth-EconometricsInR.pdf"
literal "false"

\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
Bates, Douglas, (June 2004) “
\begin_inset CommandInset href
LatexCommand href
name "Least Squares Calculations in R: Timing Different Approaches"
target "http://cran.r-project.org/doc/Rnews/Rnews_2004-1.pdf"
literal "false"

\end_inset

”, Rnews, 4(1): 17 
\end_layout

\begin_layout Itemize
Quick R, 
\begin_inset Quotes eld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "Matrix Algebra"
target "http://www.statmethods.net/advstats/matrix.html"
literal "false"

\end_inset


\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Section
Appendices
\end_layout

\begin_layout Plain Layout
This section has some chunks that I wrote out but, in the end, don't use
 in this presentation.
 However, I may need them someday.
\end_layout

\begin_layout Subsection*
Inverse Matrices
\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Inverse does not always exist
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
A poem I made up:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Quote
Not all square matrices are invertible
\end_layout

\begin_layout Quote
But only square matrices can be inverted
\end_layout

\end_deeper
\begin_layout Itemize
A matrix that has redundant columns is not invertible.
 
\end_layout

\begin_deeper
\begin_layout Itemize
the 4th column is a sum or product of previous
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\[
\left[\begin{array}{cccc}
a_{1} & b_{1} & c_{1} & 3a_{1}\\
a_{2} & b_{2} & c_{2} & 3a_{2}\\
a_{3} & b_{3} & c_{3} & 3a_{3}\\
a_{4} & b_{4} & c_{4} & 3a_{4}
\end{array}\right]
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Note that the 4th column is 
\begin_inset Flex Bold
status open

\begin_layout Plain Layout
linearly dependent
\end_layout

\end_inset

, 
\begin_inset Formula $3\cdot a$
\end_inset


\end_layout

\begin_layout Itemize
Calculation of an inverse requires that there is no formula to manufacture
 one column as a weighted sum of all of the others.
 This is impossible in a 
\begin_inset Quotes eld
\end_inset

linearly independent
\begin_inset Quotes erd
\end_inset

 matrix
\begin_inset Formula 
\[
d=k_{1}a+k_{2}b+k_{3}c
\]

\end_inset


\end_layout

\begin_layout Itemize
The 
\begin_inset Flex Bold
status open

\begin_layout Plain Layout
rank
\end_layout

\end_inset

 of a matrix is the number of linearly independent columns.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
A matrix that is 
\begin_inset Quotes eld
\end_inset

rank deficient
\begin_inset Quotes erd
\end_inset

 has a redundant column, it cannot be inverted.
\end_layout

\end_deeper
\begin_layout Itemize
In regression, how do we usually end up with 
\begin_inset Quotes eld
\end_inset

rank deficient
\begin_inset Quotes erd
\end_inset

 predictor matrices?
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsection*
Orthogonal Matrix
\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Orthogonal Matrix, Orthonormal Matrix
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Consider a set of columns that makes up a matrix
\begin_inset Formula 
\[
X=\{X1,X2,X3,X4\}
\]

\end_inset


\end_layout

\begin_layout Itemize
Orthogonal means that 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
the dot product of any column with any other column is 0
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset Formula 
\[
X1^{T}\cdot X2=0
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Those two columns are 
\begin_inset Quotes eld
\end_inset

unrelated
\begin_inset Quotes erd
\end_inset

, there's no tendency of positive values to coincide, or negative values
 to coincide.
 They 
\begin_inset Quotes eld
\end_inset

uncorrelated
\begin_inset Quotes erd
\end_inset

 in a statistical sense.
 If we plotted their values in a 2-D scatterplot, there would be no visible
 
\begin_inset Quotes eld
\end_inset

relationship
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Plain Layout
Property 1: The product is a 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Quotes eld
\end_inset

diagonal" matrix
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 
\begin_inset Formula 
\[
X^{T}X=\left[\begin{array}{ccccc}
a & 0 & 0 & 0 & 0\\
0 & b & 0 & 0 & 0\\
0 & 0 & c & 0 & 0\\
0 & 0 & 0 & d & 0\\
0 & 0 & 0 & 0 & e
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
The product is thus diagonal, but the elements on the main diagonal are
 not all equal to the same number.
\end_layout

\begin_layout Plain Layout
Property 2: A stronger property would have product as an identity matrix:
\begin_inset Formula 
\[
X^{T}X=\left[\begin{array}{ccccc}
1 & 0 & 0 & 0 & 0\\
0 & 1 & 0 & 0 & 0\\
0 & 0 & 1 & 0 & 0\\
0 & 0 & 0 & 1 & 0\\
0 & 0 & 0 & 0 & 1
\end{array}\right]
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Property 2 holds when the columns of 
\begin_inset Formula $X$
\end_inset

 are 
\begin_inset Quotes eld
\end_inset

unit vectors
\begin_inset Quotes erd
\end_inset

, meaning they have length 
\begin_inset Formula $1$
\end_inset

.
\end_layout

\begin_layout Itemize
Sometimes I become confused because when people say 
\begin_inset Quotes eld
\end_inset

orthogonal
\begin_inset Quotes erd
\end_inset

, they simply mean property 1 holds, while others discussing orthogonal
 matrices are referring to property 2.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Orthogonal 
\begin_inset Formula $\Longrightarrow$
\end_inset

All zeros above and below the diagonal of 
\begin_inset Formula $X^{T}X$
\end_inset


\end_layout

\begin_layout Itemize
Orthonormal 
\begin_inset Formula $\Longrightarrow$
\end_inset

Columns are scaled so that their norms are all 1, i.e.
 
\begin_inset Formula $X1^{T}X1=1$
\end_inset

, 
\begin_inset Formula $X2^{T}X2=1$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Plain Layout
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Orthogonal Matrices are Easy! (if you can find them)
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Notice how convenient a diagonal matrix is when we need its inverse.
\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\[
\left[\begin{array}{ccccc}
a & 0 & 0 & 0 & 0\\
0 & b & 0 & 0 & 0\\
0 & 0 & c & 0 & 0\\
0 & 0 & 0 & d & 0\\
0 & 0 & 0 & 0 & e
\end{array}\right]\left[\begin{array}{ccccc}
1/a & 0 & 0 & 0 & 0\\
0 & 1/b & 0 & 0 & 0\\
0 & 0 & 1/c & 0 & 0\\
0 & 0 & 0 & 1/d & 0\\
0 & 0 & 0 & 0 & 1/e
\end{array}\right]=I
\]

\end_inset


\end_layout

\begin_layout Itemize
Orthonormal Matrices Simplify Everything
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
If 
\begin_inset Formula $X$
\end_inset

 is an orthogonal matrix of unit vectors (orthonormal), then 
\begin_inset Formula 
\[
XX^{T}=X^{T}X=I
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Hence, the inverse of 
\begin_inset Formula $X^{T}X$
\end_inset

 or 
\begin_inset Formula $XX^{T}$
\end_inset

 is EXTREMELY SUPER VERY EASY to calculate: Just Transpose.
 (With this, regression analysis is terrific, fun, numerically stable and
 life-extending!) 
\end_layout

\begin_layout Itemize
Another quirk: An orthogonal matrix changes the 
\begin_inset Quotes eld
\end_inset

direction
\begin_inset Quotes erd
\end_inset

 of a vector, but it does not change its magnitude.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Let 
\begin_inset Formula $Q$
\end_inset

 be an orthogonal matrix and let 
\begin_inset Formula $x$
\end_inset

 be a vector.
 
\end_layout

\begin_layout Itemize
Claim: The norm of 
\begin_inset Formula $Qx$
\end_inset

 is equal to the norm of 
\begin_inset Formula $x$
\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset Formula 
\[
\left\Vert Qx\right\Vert =\left\Vert x\right\Vert 
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Proof
\begin_inset Formula 
\begin{eqnarray*}
\left\Vert Qx\right\Vert ^{2} & = & (Qx)^{T}(Qx)\\
 & = & x^{T}Q^{T}Qx\\
 & = & x^{T}x
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Itemize
The significance of this is that the orthonormal matrix can be thought of
 as a 
\begin_inset Quotes eld
\end_inset

direction changer
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

reflector
\begin_inset Quotes erd
\end_inset

 of any vector 
\begin_inset Formula $x$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Plain Layout
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Subsection*
Cross Product, Variance
\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Variance-Covariance Matrix
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The variance of a column variable 
\begin_inset Formula $x1$
\end_inset


\begin_inset Formula 
\begin{equation}
Var(x1)=\frac{\sum_{i=1}^{N}(x1{}_{i}-\overline{x1})^{2}}{N}\label{eq:var1}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
can be re-arranged as
\begin_inset Formula 
\begin{eqnarray}
Var(x1) & = & \frac{\sum_{i=1}^{N}x1_{i}^{2}}{N}-\left(\overline{x1}\right){}^{2}\label{eq:var2}\\
 &  & =mean\,of\,\{x1\,squared\}\,-\{mean\,of\,x1\}\,squared\\
 &  & (\overline{x1^{2})}-(\overline{x1})^{2}\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Itemize
In the pencil-and-paper days, it was noted that to calculate variance with
 formula 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:var1"

\end_inset

 required 2 passes through the data
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Calculate 
\begin_inset Formula $\overline{x1}=\frac{1}{N}\sum x1_{i}$
\end_inset


\end_layout

\begin_layout Enumerate
Calculate the squares 
\begin_inset Formula $\sum(x1_{i}-\overline{x1})$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The shorter formula (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:var2"

\end_inset

), on the other hand, requires one pass through the rows, during which we
 calculate both.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\sum x1_{i}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\sum x1_{i}^{2}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The Covariance of 2 variables is similar
\begin_inset Formula 
\[
Cov(x1,x2)=\frac{\sum_{1}^{N}(x1_{i}-\overline{x1})(x2_{i}-\overline{x2_{i}})}{N}
\]

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
can be written with the same simplifying trick as
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Formula 
\begin{eqnarray*}
Cov(x1,x2) & = & \frac{\sum(x1_{i}\cdot x2_{i})}{N}-\overline{x1}\cdot\overline{x2}\\
 &  & =mean\,of\,\{x1\cdot x2\}-\{mean\,of\,x1\}\{mean\,of\,x2\}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Itemize
At least in the pencil-and-paper math era, it was possible to see that variety
 is summarized if we 
\begin_inset Formula 
\[
\sum x1_{i}^{2}\,,\,\sum x2_{i}^{2}\,and\,\sum x1_{i}x2_{i}
\]

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
for all the pairs of variables
\end_layout

\end_deeper
\begin_layout Itemize
The variance/covariance matrix, often just called the variance matrix
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout

\size tiny
\begin_inset Formula 
\[
Var(X)=\left[\begin{array}{ccccc}
Var(x1) & Cov(x1,x2) & Cov(x1,x3) & Cov(x1,x4) & Cov(x1,x5)\\
Cov(x2,x1) & Var(x2)\\
Cov(x3,x1) & Cov(x3,x2) & Var(x3)\\
Cov(x4,x1) & Cov(x4,x2) &  & \ddots & Cov(x4,x5)\\
Cov(x5,x1) & Cov(x5,x2 &  & Cov(x5,x4) & Var(x5)
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Plain Layout
Making it obvious that
\end_layout

\begin_layout Itemize
\begin_inset Formula $Var(x1)=Cov(x1,x1)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $Cov(x2,x1)=Cov(x1,x2)$
\end_inset

, so this is symmetric (same in lower triangle as upper right triangle)
\end_layout

\begin_layout Itemize
The Standard Deviations of the variables are the square root of the diagonal
 of 
\begin_inset Formula $Var(x)$
\end_inset


\begin_inset Formula 
\[
\sqrt{diag(Var(X))}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
It is very common to use the letter 
\begin_inset Formula $\sigma$
\end_inset

 with subscripts to fill in this kind of matrix.
 The matrix is often named capital sigma, 
\begin_inset Formula $\Sigma$
\end_inset

.
 
\end_layout

\begin_layout Itemize
In the 
\begin_inset Quotes eld
\end_inset

usual
\begin_inset Quotes erd
\end_inset

 matrix style
\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\[
\Sigma=\left[\begin{array}{ccccc}
\sigma_{1}^{2} & \sigma_{12} & \sigma_{13} & \sigma_{14} & \sigma_{15}\\
\sigma_{21} & \sigma_{22} & \sigma_{23}\\
 &  & \ddots\\
 &  &  & \ddots\\
\sigma_{51} &  &  &  & \sigma_{55}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
my kind of notation
\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\[
\Sigma=\left[\begin{array}{ccccc}
\sigma_{x_{1}}^{2} & \sigma_{x_{1}x_{2}} & \sigma_{x_{1}x_{3}} & \sigma_{x_{1}x_{4}}\\
\sigma_{x_{2}x_{1}} & \sigma_{x_{2}x_{2}}^{2} & \sigma_{x_{2}x_{3}}\\
 &  & \ddots\\
 &  &  & \ddots\\
\sigma_{x_{5}x_{1}} &  &  &  & \sigma_{x_{5}x_{5}}^{2}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
Here we see the standard deviations are just the square root of the diagonal.
 
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Sum of Squares and Crossproducts versus Variance
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The term 
\begin_inset Quotes eld
\end_inset

sweep operator
\begin_inset Quotes erd
\end_inset

 refers to the act of 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Calculating the mean of each column of 
\begin_inset Formula $X$
\end_inset

,
\end_layout

\begin_layout Itemize
Subtracting that result from each row in the matrix.
\end_layout

\end_deeper
\begin_layout Itemize
The result is said to be 
\begin_inset Quotes eld
\end_inset

mean-centered
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
If we start with this
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset Formula 
\[
\left[\begin{array}{cccccc}
1 & x1_{1} & x2_{1} & x3_{1} & x4_{1} & x5_{1}\\
1 & x1_{2} & x2_{2} & x3_{2} & x4_{2} & x5_{2}\\
1 & \ldots & \ldots & \ddots\\
1 & x1_{N} & x2_{N} & x3_{N} &  & x5_{N}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
the means will be 
\begin_inset Formula $\{1,\overline{x1},\overline{x2}\}$
\end_inset

 (intercept was in column 1)
\end_layout

\end_deeper
\begin_layout Itemize
The mean centered version has a column of 0's on the first column
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
\begin_inset Formula 
\[
XC=\left[\begin{array}{cccccc}
0 & xc1_{1} & xc2_{1} & xc3_{1} & xc4_{1} & xc5_{1}\\
0 & xc1_{2} & xc2_{2} & xc3_{2} & xc4_{2} & xc5_{2}\\
0 & \ldots & \ldots & \ldots & \ldots & \ldots\\
0 & xc1_{N} & xc2_{N} & xc3_{N} & xc4_{N} & xc5_{N}
\end{array}\right]
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Simplifying benefits of working with mean centered data
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
We lose a column, we generally throw away the first one, since it is all
 zeros
\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\[
XC=\left[\begin{array}{ccccc}
xc1_{1} & xc2_{1} & xc3_{1} & xc4_{1} & xc5_{1}\\
xc1_{2} & xc2_{2} & xc3_{2} & xc4_{2} & xc5_{2}\\
\ldots & \ldots & \ldots & \ldots & \ldots\\
xc1_{N} & xc2_{N} & xc3_{N} & xc4_{N} & xc5_{N}
\end{array}\right]
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The Variance and Covariance formulas simplify and we can read off their
 values from 
\begin_inset Formula $XC^{T}XC$
\end_inset

.
 Variance matrix is
\size tiny

\begin_inset Formula 
\[
Var(XC)=\left[\begin{array}{ccccc}
\frac{1}{N}\sum xc1_{i}^{2} & \frac{1}{N}\sum xc1_{i}xc2_{i} & \frac{1}{N}\sum xc1_{i}xc3_{i} & \frac{1}{N}\sum xc1_{i}xc4{}_{i} & \frac{1}{N}\sum xc1_{i}xc5_{i}\\
\frac{1}{N}\sum xc1_{i}xc2_{i} & \frac{1}{N}\sum xc2_{i}^{2} &  &  & \frac{1}{N}\sum xc2_{i}xc5{}_{i}\\
\frac{1}{N}\sum xc1_{i}xc3_{i} &  & \frac{1}{N}\sum xc3_{i}^{2}\\
\frac{1}{N}\sum xc1_{i}xc4_{i} &  &  & \frac{1}{N}\sum xc4_{k}^{2}\\
\frac{1}{N}\sum xc1_{i}xc5_{i} &  &  &  & \frac{1}{N}\sum xc5_{i}^{2}
\end{array}\right]
\]

\end_inset


\size default

\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
The variance of 
\begin_inset Formula $x1$
\end_inset

 would ordinarily be 
\begin_inset Formula $\frac{1}{N}\sum x1_{i}^{2}-\left(\overline{x1}\right)^{2}$
\end_inset

, but the last part is now 0 because we are mean centered.
\end_layout

\end_deeper
\begin_layout Itemize
And if you factor out the 
\begin_inset Formula $1/N$
\end_inset

, then you see the variance matrix for a centered variable is simply proportiona
l to 
\begin_inset Formula $XC^{T}XC$
\end_inset

.
\end_layout

\begin_layout Itemize
I hope you agree it is 
\begin_inset Quotes eld
\end_inset

easy to see
\begin_inset Quotes erd
\end_inset

 that 
\begin_inset Formula $\frac{1}{N}XC^{T}XC$
\end_inset

 is a variance matrix, but the next claim is not easy for me to prove.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\frac{1}{N}X^{T}X$
\end_inset

 is the covariance matrix even if 
\begin_inset Formula $X$
\end_inset

 is not mean-centered.
\end_layout

\begin_layout Itemize
There is a proof in Greene's 
\emph on
Econometric Analysis
\end_layout

\end_deeper
\end_deeper
\begin_layout Plain Layout
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Subsection*
Cholesky decomposition
\end_layout

\begin_layout Frame
\begin_inset Argument 3
status collapsed

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Cholesky decomposition : 
\begin_inset Quotes eld
\end_inset

matrix square root
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Given a square matrix, such as 
\begin_inset Formula 
\[
\Sigma=\left[\begin{array}{cccc}
\sigma_{11} & \sigma_{12} & \ldots & \sigma_{1N}\\
\sigma_{21} & \sigma_{22}\\
\vdots &  & \ddots\\
\sigma_{N1} &  &  & \sigma_{NN}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
Find an upper-triangular matrix of the same size 
\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\[
\left[\begin{array}{cccc}
c_{11} & c_{12} & \ldots & c_{1N}\\
0 & c_{22} &  & c_{2N}\\
\vdots & 0 & \ddots\\
0 & 0 & 0 & c_{NN}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Plain Layout
so that if you multiply that by its transpose, then you recover 
\begin_inset Formula $\Sigma.$
\end_inset


\begin_inset Formula 
\[
\Sigma=\left[\begin{array}{cccc}
c_{11} & 0 & \ldots & 0\\
c_{12} & c_{22} &  & 0\\
\vdots &  & \ddots\\
c_{1N} & c_{2N} & \ldots & c_{NN}
\end{array}\right]\left[\begin{array}{cccc}
c_{11} & c_{12} & \ldots & c_{1N}\\
0 & c_{22} &  & c_{2N}\\
\vdots & 0 & \ddots\\
0 & 0 & 0 & c_{NN}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\[
\Sigma=R^{T}R
\]

\end_inset


\end_layout

\begin_layout Itemize
See why they call this a matrix square root, yes? 
\end_layout

\begin_layout Itemize
The Cholesky decomposition does not always exist, but it does for most of
 the matrices that we are interested in (positive definite).
 In particular, it exists for variance matrices (and anything created as
 a cross product, such as 
\begin_inset Formula $X^{T}X$
\end_inset

).
\end_layout

\begin_layout Itemize
There is a computational benefit here on a number of levels, but right now
 I'm interested in the symbolic benefit.
 
\end_layout

\begin_layout Itemize
We often arrive at a point where we have a calculation like this
\begin_inset Formula 
\begin{equation}
y^{T}\Sigma y\label{eq:quad}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
Replace 
\begin_inset Formula $\Sigma$
\end_inset

 by its Cholesky decomposition
\begin_inset Formula 
\[
y^{T}R^{T}Ry
\]

\end_inset


\end_layout

\begin_layout Itemize
Put some parentheses in to make clear what's coming next
\begin_inset Formula 
\[
(y^{T}R^{T})(Ry)
\]

\end_inset


\end_layout

\begin_layout Itemize
Because of the rule 
\begin_inset Quotes eld
\end_inset

the transpose of a product is the product of transposes in reverse order
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Formula 
\[
y^{T}R^{T}=(Ry)^{T}
\]

\end_inset


\end_layout

\begin_layout Itemize
Hence we can simplify the calculation of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:quad"

\end_inset

) if we create an updated, 
\begin_inset Quotes eld
\end_inset

re-weighted
\begin_inset Quotes erd
\end_inset

 version of y
\begin_inset Formula 
\[
\tilde{y}=Ry
\]

\end_inset


\end_layout

\begin_layout Itemize
Then (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:quad"

\end_inset

) is simply
\begin_inset Formula 
\[
\tilde{y}^{T}\tilde{y}
\]

\end_inset


\end_layout

\begin_layout Itemize
All the algorithms and statistical results for sums of squares, for example,
 now are applicable to this re-weighted version of 
\begin_inset Formula $y$
\end_inset

.
\end_layout

\begin_layout Itemize
This is how we gracefully manage Weighted Least Squares, Generalized Least
 Squares, Penalized Least Squares, etc.
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{References}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../../R"
options "apalike2"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Session}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sess10>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<opts20, include=F>>=
\end_layout

\begin_layout Plain Layout

## Don't delete this.
 It puts the interactive session options
\end_layout

\begin_layout Plain Layout

## back the way they were.
 If this is compiled within a session
\end_layout

\begin_layout Plain Layout

## it is vital to do this.
\end_layout

\begin_layout Plain Layout

options(opts.orig)
\end_layout

\begin_layout Plain Layout

options(par.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
