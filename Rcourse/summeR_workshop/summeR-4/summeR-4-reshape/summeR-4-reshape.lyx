#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usepackage{dcolumn}
\usepackage{booktabs}
\usepackage{array}
\usepackage{longtable}
\usepackage{graphicx}
\renewcommand{\doiprefix}{doi:\kern-1pt}
\setlength{\bibsep}{10pt}

% use 'handout' to produce handouts
%\documentclass[handout]{beamer}
\usepackage{wasysym}
\usepackage{pgfpages}
%for bold upright roman in math for matrix algebra
\newcommand{\vn}[1]{\mbox{{\it #1}}}\newcommand{\vb}{\vspace{\baselineskip}}\newcommand{\vh}{\vspace{.5\baselineskip}}\newcommand{\vf}{\vspace{\fill}}\newcommand{\splus}{\textsf{S-PLUS}}\newcommand{\R}{\textsf{R}}

%%\input{theme/guidePreambleSweavel.tex} 
%%% From beamer slide:
\usepackage{Sweave}
%% 
%% This controls display of code chunks
\usepackage{ae,fancyvrb,relsize,listings}

\providecommand{\Sweavesize}{\normalsize}
\providecommand{\Rsize}{}
\renewcommand{\Rsize}{\normalsize}
\providecommand{\Routsize}{\scriptsize}

\providecommand{\Rcolor}{\color[rgb]{0.1, 0.1, 0.1}}
\providecommand{\Routcolor}{\color[rgb]{0.2, 0.2, 0.2}}
\providecommand{\Rcommentcolor}{\color[rgb]{0.101, 0.43, 0.432}}

\providecommand{\Rbackground}{\color[gray]{0.91}}
\providecommand{\Routbackground}{\color[gray]{0.935}}
% Can specify \color[gray]{1} for white background or just \color{white}

\lstdefinestyle{Rinput}{
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  basicstyle=\Rsize\Rcolor\ttfamily,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%,
  commentstyle=\Rcommentcolor\ttfamily,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1{==}{{=\,=}}2{--}{{-\,-}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},%
  backgroundcolor=\Rbackground,%
  numbers=left,%
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}%

% Other options of interest:
% frame=single,framerule=0.1pt,framesep=1pt,rulecolor=\color{blue},
% numbers=left,numberstyle=\tiny,stepnumber=1,numbersep=7pt,
% keywordstyle={\bf\Rcolor}

\lstdefinestyle{Routput}{fancyvrb=false,
  literate={~}{{$\sim$}}1{R^2}{{$R^{2}$}}2{^}{{$^{\scriptstyle\wedge}$}}1{R-squared}{{$R^{2}$}}2,%
  basicstyle=\Routcolor\Routsize\ttfamily,%
  backgroundcolor=\Routbackground,
  language=R,
  escapechar=`,
  fancyvrb=false,%
  tabsize=2,%
  breaklines=true,
  breakatwhitespace=true,%
  captionpos=b,%
  frame=single,%
  framerule=0.2pt,%
  framesep=1pt,%
  showstringspaces=false,%
  columns=fixed%,
  \lst@ifdisplaystyle\scriptsize\fi,%
  identifierstyle=,%
  keywords=\bfseries,%
  keywordstyle=\color[rgb]{0, 0.5, 0.5},
  escapeinside={(*}{*)},
  literate={~}{{$\sim$}}1 {==}{{=\,=}}2,
  alsoother={$},
  alsoletter={.<-},%
  otherkeywords={!,!=,~,$,*,\&,\%/\%,\%*\%,\%\%,<-,<<-,/},
  numbers=left,
  %numberblanklines=false,%
  stepnumber=5,
  firstnumber=1,
  numberstyle={\tiny}
}

\renewenvironment{Schunk}{}{}
\renewenvironment{Sinput}{}{}
\let\Sinput\relax
\let\Scode\relax
\let\Soutput\relax
\lstnewenvironment{Sinput}{\lstset{style=Rinput}}{}
\lstnewenvironment{Scode}{\lstset{style=Rinput}}{}
\lstnewenvironment{Soutput}{\lstset{style=Routput}}{}
%%end paste in from guidePreambleSweavel.tex


\lstset{tabsize=2, breaklines=true, style=Rinput, breakatwhitespace=true}

\fvset{listparameters={\setlength{\topsep}{0em}}}

\usepackage{xcolor}
\definecolor{light-gray}{gray}{0.90}
\usepackage{realboxes}
\providecommand*{\code}[1]{\texttt{#1}}
\renewcommand{\code}[1]{%
\Colorbox{light-gray}{#1}%
}%
%% end of paste

\usepackage[natbibapa]{apacite}

\definecolor{darkblue}{HTML}{1e2277}

%would be in beamerthemekucrmda%
\mode<presentation>
\definecolor{kublue}{RGB}{0,81,186}
\usefonttheme{professionalfonts}
\useoutertheme{infolines}
\useinnertheme{rounded}
%disable rounded for alert and example boxes%
\setbeamertemplate{blocks}[default]
\usecolortheme{whale}
\usecolortheme{orchid}
\setbeamercolor{structure}{bg=kublue,fg=kublue!90!black}
%\setbeamercolor{structure}{fg=kublue}
\setbeamercolor{frametitle}{bg=kublue}
\setbeamercolor{section in toc}{fg=kublue!40!black}

\setbeamertemplate{frametitle continuation}[from second]
\renewcommand\insertcontinuationtext{...}
\beamertemplatenavigationsymbolsempty
%end of beamerthemekucrmda%

%If you want bigger margins, try this:
\setbeamersize{text margin left=05mm,text margin right=10mm} 
\hypersetup{colorlinks,allcolors=.,urlcolor=darkblue}
%Following seems to have no effect now
%\usepackage{handoutWithNotes}
%\pgfpagesuselayout{3 on 1 with notes}[letterpaper, border shrink=5mm]

\titlegraphic{\includegraphics[width=6cm]{theme/logo}}
\logo{\includegraphics[width=5mm]{theme/logomini}}
\end_preamble
\options aspectratio=1609
\use_default_options false
\begin_modules
logicalmkup
sweave
natbibapa
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style \use_bibtopic false
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\branch R
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch semboot
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\branch cfalvm
\selected 1
\filename_suffix 0
\color #d6fbd6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%following is LyX shortcut 
\backslash
vb for bold upright math for matrices
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\vb}[1]{\bm{\mathrm{#1}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch R
inverted 0
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% tmpout directory must exist first
\end_layout

\begin_layout Plain Layout

<<tmpout, echo=FALSE, include=FALSE, results=hide>>=
\end_layout

\begin_layout Plain Layout

tdir <- "tmpout"
\end_layout

\begin_layout Plain Layout

if(!dir.exists(tdir)) dir.create(tdir, showWarnings=FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

% In document Latex options:
\end_layout

\begin_layout Plain Layout


\backslash
fvset{listparameters={
\backslash
setlength{
\backslash
topsep}{0em}}}
\end_layout

\begin_layout Plain Layout


\backslash
SweaveOpts{prefix.string=tmpout/t,split=T,ae=F,height=4.5,width=7}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Roptions, include=F, results=hide>>=
\end_layout

\begin_layout Plain Layout

opts.orig <- options()
\end_layout

\begin_layout Plain Layout

options(width=100, prompt = " ", continue = "  ")
\end_layout

\begin_layout Plain Layout

options(useFancyQuotes = FALSE)
\end_layout

\begin_layout Plain Layout

set.seed(12345)
\end_layout

\begin_layout Plain Layout

par.orig <- par(no.readonly = TRUE) 
\end_layout

\begin_layout Plain Layout

pjmar <- c(4.1, 4.1, 1.5, 2.1)
\end_layout

\begin_layout Plain Layout

options(SweaveHooks=list(fig=function() par(mar=pjmar, ps=12, xpd=F)))
\end_layout

\begin_layout Plain Layout

pdf.options(onefile=F,family="Times",pointsize=12)
\end_layout

\begin_layout Plain Layout

if(!file.exists("theme")) file.symlink("../../../../template/theme", "theme")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
Reshaping data 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
reshape
\end_layout

\end_inset


\end_layout

\begin_layout Author
Paul Johnson
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Johnson
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Center for Research Methods and Data Analysis 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
CRMDA
\end_layout

\end_inset


\end_layout

\begin_layout Date
2018
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Outline}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Why Reshape?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Data comes in like this}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/GPA-wide.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{But You Want This}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename importfigs/GPA-long.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{The Long form}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The long form has 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

duplicated
\begin_inset Quotes erd
\end_inset

 info for all of the non-time-varying individual characteristics
\end_layout

\begin_layout Itemize
A 
\begin_inset Quotes eld
\end_inset

case
\begin_inset Quotes erd
\end_inset

 identifier (
\begin_inset Quotes eld
\end_inset

student
\begin_inset Quotes erd
\end_inset

 in this case)
\end_layout

\begin_layout Itemize
A 
\begin_inset Quotes eld
\end_inset

observation instance
\begin_inset Quotes erd
\end_inset

 identifier (
\begin_inset Quotes eld
\end_inset

time
\begin_inset Quotes erd
\end_inset

)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Why reshape() is difficult}
\end_layout

\end_inset

R's 
\begin_inset CommandInset citation
LatexCommand citep
key "RCore"
literal "true"

\end_inset

 reshape function is, probably, the most difficult function to use.
 
\end_layout

\begin_layout Standard
Mastering this requires patience and mental agility.
\end_layout

\begin_layout Standard

\emph on
Generality is the enemy
\emph default
 in this case
\end_layout

\begin_layout Itemize
The same function does 2 kinds of transformations.
 IMHO, there should have been 2 functions 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

wide2long
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

long2wide
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
But instead we have
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

reshape(x, direction = "long", other arguments)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

reshape(x, direction = "wide", other arguments)
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Arguments are general in nature, but their names are specific to one subset
 of reshape's usage
\end_layout

\begin_layout Itemize
Sometimes reshape can sometimes guess correctly which variables are to be
 re-arranges, but not always
\end_layout

\begin_layout Itemize
Especially in the long-to-wide discussion, the terminology is especially
 difficult.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Wide To Long
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Wide 2 Long}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
You could use a spreadsheet program to 
\begin_inset Quotes eld
\end_inset

copy paste
\begin_inset Quotes erd
\end_inset

 the columns into stacks (hope you don't goof)
\end_layout

\begin_layout Itemize
Inspect ?reshape
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

help("reshape")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize},tabsize=4"
inline false
status open

\begin_layout Plain Layout

Arguments:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    data: a data frame
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

 varying: names of sets of variables in the wide format that correspond
\end_layout

\begin_layout Plain Layout

          to single variables in long format ('time-varying').
  This is
\end_layout

\begin_layout Plain Layout

          canonically a list of vectors of variable names, but it can
\end_layout

\begin_layout Plain Layout

          optionally be a matrix of names, or a single vector of names.
\end_layout

\begin_layout Plain Layout

          In each case, the names can be replaced by indices which are
\end_layout

\begin_layout Plain Layout

          interpreted as referring to 'names(data)'.
  See 'Details' for
\end_layout

\begin_layout Plain Layout

          more details and options.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

 v.names: names of variables in the long format that correspond to
\end_layout

\begin_layout Plain Layout

          multiple variables in the wide format.
  See 'Details'.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

 timevar: the variable in long format that differentiates multiple
\end_layout

\begin_layout Plain Layout

          records from the same group or individual.
  If more than one
\end_layout

\begin_layout Plain Layout

          record matches, the first will be taken (with a warning).
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   idvar: Names of one or more variables in long format that identify
\end_layout

\begin_layout Plain Layout

          multiple records from the same group/individual.
  These
\end_layout

\begin_layout Plain Layout

          variables may also be present in wide format.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

     ids: the values to use for a newly created 'idvar' variable in
\end_layout

\begin_layout Plain Layout

          long format.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   times: the values to use for a newly created 'timevar' variable in
\end_layout

\begin_layout Plain Layout

          long format.
  See 'Details'.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    drop: a vector of names of variables to drop before reshaping.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

direction: character string, partially matched to either '"wide"' to
\end_layout

\begin_layout Plain Layout

          reshape to wide format, or '"long"' to reshape to long
\end_layout

\begin_layout Plain Layout

          format.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

new.row.names: character or 'NULL': a non-null value will be used for
\end_layout

\begin_layout Plain Layout

          the row names of the result.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

     sep: A character vector of length 1, indicating a separating
\end_layout

\begin_layout Plain Layout

          character in the variable names in the wide format.
  This is
\end_layout

\begin_layout Plain Layout

          used for guessing 'v.names' and 'times' arguments based on
\end_layout

\begin_layout Plain Layout

          the names in 'varying'.
  If 'sep == ""', the split is just
\end_layout

\begin_layout Plain Layout

          before the first numeral that follows an alphabetic
\end_layout

\begin_layout Plain Layout

          character.
  This is also used to create variable names when
\end_layout

\begin_layout Plain Layout

          reshaping to wide format.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   split: A list with three components, 'regexp', 'include', and
\end_layout

\begin_layout Plain Layout

          (optionally) 'fixed'.
  This allows an extended interface to
\end_layout

\begin_layout Plain Layout

          variable name splitting.
  See 'Details'.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Import the gpa data}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Demonstrates the use of a zipped csv file
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
footnotesize}
\end_layout

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

ddir <- "data"
\end_layout

\begin_layout Plain Layout

gpa <- read.csv(unzip(file.path(ddir, "gpa.csv.zip")))
\end_layout

\begin_layout Plain Layout

head(gpa, 10)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Focus on "varying" and "v.names"}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Rsize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

gpa2 <- reshape(gpa, direction = "long",
\end_layout

\begin_layout Plain Layout

        varying = list(c("job1", "job2", "job3", "job4", "job5", "job6"),
     
\end_layout

\begin_layout Plain Layout

        c("gpa1", "gpa2", "gpa3", "gpa4", "gpa5", "gpa6")), 
\end_layout

\begin_layout Plain Layout

        v.names = c("job", "gpa"),  
\end_layout

\begin_layout Plain Layout

        idvar = "student") 
\end_layout

\begin_layout Plain Layout

head(gpa2, 10)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vitals
\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status open

\begin_layout Plain Layout
varying
\end_layout

\end_inset

 is a list of vectors, each vector includes variable names we need to 
\begin_inset Quotes eld
\end_inset

stack
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status open

\begin_layout Plain Layout
v.names
\end_layout

\end_inset

 is a vector with the SAME number of elements.
 These are new column names in long output
\end_layout

\begin_layout Enumerate
i
\begin_inset Flex Code
status open

\begin_layout Plain Layout
dvar
\end_layout

\end_inset

 = 
\begin_inset Quotes eld
\end_inset

student
\begin_inset Quotes erd
\end_inset

 has the effect of using an existing column from the wide set as the id
 values in the new set.
 
\end_layout

\begin_layout Enumerate
R created a new column 
\begin_inset Quotes eld
\end_inset

time
\begin_inset Quotes erd
\end_inset

 for me, decided what values to use.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
framebreak
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I want the output to be sorted
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

gpa2 <- gpa2[order(gpa2$student, gpa2$time), ]
\end_layout

\begin_layout Plain Layout

head(gpa2, 40)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
In usual work, I'd avoid typing by using paste to make 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
varying
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

gpa2 <- reshape(gpa, direction = "long", 
\end_layout

\begin_layout Plain Layout

           varying = list(paste0("job", 1:6), paste0("gpa", 1:6)), 
\end_layout

\begin_layout Plain Layout

           v.names = c("job", "gpa"),  
\end_layout

\begin_layout Plain Layout

           idvar = "student") 
\end_layout

\begin_layout Plain Layout

gpa2 <- gpa2[order(gpa2$student, gpa2$time), ]
\end_layout

\begin_layout Plain Layout

head(gpa2, 12)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
framebreak
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If you don't specify all of the varying columns, the variables 
\begin_inset Quotes eld
\end_inset

gpa1
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

gpa2
\begin_inset Quotes erd
\end_inset

 and so forth will be repeated.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Rsize{
\backslash
scriptsize}
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
footnotesize}
\end_layout

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

gpa3 <- reshape(gpa, varying = list(paste0("job", 1:6)), 
\end_layout

\begin_layout Plain Layout

          v.names = c("job"),  direction = "long", 
\end_layout

\begin_layout Plain Layout

          idvar = "student")
\end_layout

\begin_layout Plain Layout

gpa3 <- gpa3[order(gpa3$student, gpa3$time), ]
\end_layout

\begin_layout Plain Layout

head(gpa3, 12)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R created the variable named 
\begin_inset Quotes eld
\end_inset

time
\begin_inset Quotes erd
\end_inset

 and it decided what the values should be
\end_layout

\begin_layout Itemize
Observe here I rename the variables to be 
\begin_inset Quotes eld
\end_inset

gpa2-gpa7
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

job2-job7
\begin_inset Quotes erd
\end_inset

, but time is still integer 1-6.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

for(i in 7:2){
\end_layout

\begin_layout Plain Layout

   gpa[ , paste0("gpa", i)] <- gpa[ , paste0("gpa", i-1)]
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

gpa$gpa1 <- NULL
\end_layout

\begin_layout Plain Layout

for(i in 7:2){
\end_layout

\begin_layout Plain Layout

   gpa[ , paste0("job", i)] <- gpa[ , paste0("job", i-1)]
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

gpa$job1 <- NULL
\end_layout

\begin_layout Plain Layout

colnames(gpa)
\end_layout

\begin_layout Plain Layout

gpa4 <- reshape(gpa, varying = list(paste0("job", 2:7), paste0("gpa", 2:7)),
 
\end_layout

\begin_layout Plain Layout

                v.names = c("job", "gpa"),  direction = "long", 
\end_layout

\begin_layout Plain Layout

                idvar = "student") 
\end_layout

\begin_layout Plain Layout

gpa4 <- gpa4[order(gpa4$student, gpa4$time), ]
\end_layout

\begin_layout Plain Layout

head(gpa4, 12)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Can specify values to be used in time with 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
times
\end_layout

\end_inset

 = 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

gpa5 <- reshape(gpa, varying = list(paste0("job", 2:7), paste0("gpa", 2:7)),
 
\end_layout

\begin_layout Plain Layout

                v.names = c("job", "gpa"),  direction = "long", 
\end_layout

\begin_layout Plain Layout

                idvar = "student", times = 2:7) 
\end_layout

\begin_layout Plain Layout

gpa5 <- gpa5[order(gpa5$student, gpa5$time), ]
\end_layout

\begin_layout Plain Layout

head(gpa5, 12)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Note, it will not follow instructions if you put times in backwards
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

gpa5 <- reshape(gpa, varying = list(paste0("job", 2:7), paste0("gpa", 2:7)),
 
\end_layout

\begin_layout Plain Layout

                v.names = c("job", "gpa"),  direction = "long", 
\end_layout

\begin_layout Plain Layout

                idvar = "student", times = 7:2) 
\end_layout

\begin_layout Plain Layout

gpa5 <- gpa5[order(gpa5$student, gpa5$time), ]
\end_layout

\begin_layout Plain Layout

head(gpa5, 12)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
R sorts times and uses those in sorted order.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Long to Wide
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Terminology}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The R team assumed the process would generally be about panel time series.
 Convert this:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
country
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
year
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
z
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

USA
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2014
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
33
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

USA
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
44
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

Canada
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2014
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
55
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

Canada
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
51
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
to:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="7">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
country
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x2014
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y2014
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
z2014
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
z2015
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
USA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
33
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
44
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Canada
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
55
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
51
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Itemize
But sometimes we want this instead
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="7">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
year
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x.USA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y.USA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
z.USA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x.Canada
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y.Canada.y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
z.Canada
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2014
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
33
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
55
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
44
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
51
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
In 
\begin_inset Quotes eld
\end_inset

backwards land
\begin_inset Quotes erd
\end_inset

, the unit-names are times.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Arguments}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In almost all cases, going from 
\series bold
long
\series default
 to 
\series bold
wide
\series default
 requires these arguments:
\end_layout

\begin_layout Itemize

\series bold
idvar
\series default
: column name of variable that identifies a 
\begin_inset Quotes eld
\end_inset

case
\begin_inset Quotes erd
\end_inset

.
 Wide data will have 1 row for each one of these.
\end_layout

\begin_layout Itemize

\series bold
timevar
\series default
: name of column that differentiates of observations for same case.
 One column will be created for each value of this
\end_layout

\begin_deeper
\begin_layout Itemize
We wish they did not call it 
\begin_inset Quotes eld
\end_inset

timevar
\begin_inset Quotes erd
\end_inset

.
 Sometimes 
\begin_inset Quotes eld
\end_inset

timevar
\begin_inset Quotes erd
\end_inset

 is a country name.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
v.names
\series default
 : the column names of the long variable from which we will create new wide
 columns.
 
\end_layout

\begin_layout Standard
If we wanted this:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="7">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
year
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x.USA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y.USA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
z.USA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x.Canada
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y.Canada.y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
z.Canada
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2014
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
33
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
55
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
44
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
51
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Then idvar = 
\begin_inset Quotes eld
\end_inset

year
\begin_inset Quotes erd
\end_inset

 and timevar=
\begin_inset Quotes erd
\end_inset

Country
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Example of a Long format Data Set}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

tti_dat <- read.csv(unzip(file.path(ddir, "TTI_Data.csv.zip")), header = TRUE)
\end_layout

\begin_layout Plain Layout

colnames(tti_dat, 20)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{TTI}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The units, 
\begin_inset Quotes eld
\end_inset

Urban.Area
\begin_inset Quotes erd
\end_inset

 are observed for several values of 
\begin_inset Quotes eld
\end_inset

Year
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
We will try the 
\begin_inset Quotes eld
\end_inset

lazy
\begin_inset Quotes erd
\end_inset

 way, let R guess 
\begin_inset Quotes eld
\end_inset

v.names
\begin_inset Quotes erd
\end_inset

 (which means that all columns except 
\begin_inset Quotes eld
\end_inset

Year
\begin_inset Quotes erd
\end_inset

 will be split wide)
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

tti_dat_wide <- reshape(tti_dat, direction = "wide", timevar = "Year", idvar
 = "Urban.Area")
\end_layout

\begin_layout Plain Layout

colnames(tti_dat_wide)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{v.names and a warning}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If we try to specify v.names, but we DO NOT include all of the variables
 that R guesses should be converted, we get a longish warning message
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

tti_dat_wide2 <- reshape(tti_dat, direction = "wide", timevar = "Year",
 idvar = "Urban.Area", v.names = c("Annual.Congestion.Cost", "Delay.per.Commuter"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Warning message:
\end_layout

\begin_layout Plain Layout

In reshapeWide(data, idvar = idvar, timevar = timevar, varying = varying,
  :
\end_layout

\begin_layout Plain Layout

  some constant variables (Population, PopRank,  Peak.Travelers, Commuters,
 Freeway.Daily.VMT, Freeway.Lane.miles, Arterial.Daily.VMT, Arternial.Lane.miles,
 Transit.Passenger.Miles, Transit.Passenger.Trips, Value.of.Time, Commercial.Value.of.Tim
e, Avg..State.Gas.Cost, Avg..State.Diesel.Cost, X..Peak.VMT.Congested, X..Lane.miles.Congested,
 Number.of.Rush.Hours, Gallons.Excess.Fuel, Gallons.Excess.Ranged, Gallons.Excess.per.Comm
uter, Gallons.per.Rank, Total.Hours.of.Delay, Total.Delay.Rank, Rank, Travel.Time.Index,
 TTI.Rank, Commuter.Stress.Index, CSI.Rank, Freeway.Planning.Time.Index.95, Freeway.Plann
ing.Time.Index.95.Rank, Freeway.Planning.Time.Index.80, Freeway.Planning.Time.Index.80.Rank,
 Excess.CO2.lbs, Excess.CO2.Rank, Excess.CO2.per.Peak.Commuter, Excess.CO2.per.Peak.Commuter.
Rank, Truck.Congestion.Cost, Truck.Commodity.Value, Annual.Congestion.Cost.Rank,
 Congestion.Cost.per.Commuter, Congestion.Cost.per.Commuter.Rank, Delay.Reduced.due.to.Oper
ations.Treatments, Delay.Reduced.due.to.Operations.per.Commuter, Wasted.Fuel.Saved.
 [...
 truncated]
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
We will make a smaller data subset so we can test what is going on.
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

ttisub <- tti_dat[ , c("Urban.Area", "Year", "Annual.Congestion.Cost", "Delay.per.Com
muter", "Population")]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

tti_dat_wide2 <- 
\end_layout

\begin_layout Plain Layout

    reshape(ttisub, direction = "wide", 
\end_layout

\begin_layout Plain Layout

            timevar = "Year",
\end_layout

\begin_layout Plain Layout

            idvar = "Urban.Area",
\end_layout

\begin_layout Plain Layout

            v.names = c("Annual.Congestion.Cost", "Delay.per.Commuter"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Warning message: In reshapeWide(data, idvar = idvar, timevar = timevar,
 varying = varying,  :   some constant variables (Population) are really
 varying
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Inspect the top-left edge of the data,
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

tti_dat_wide2[1:10, c("Urban.Area", "Population", "Annual.Congestion.Cost.2011")]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I could not figure out where it was getting those scores for Population,
 but some data snooping shows the 
\begin_inset Quotes eld
\end_inset

Population
\begin_inset Quotes erd
\end_inset

 column is filled up with scores for 2011
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Routsize{
\backslash
tiny}
\end_layout

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

tti_dat_wide[1:10 , grep("Population", colnames(tti_dat_wide), value = TRUE)[1:5
]]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{In case you think nobody wants data like that}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This is the format necessary for estimating 
\begin_inset Quotes eld
\end_inset

latent growth curve structural equation models
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Itemize
One column per variable per observational time point
\end_layout

\begin_layout Itemize
Also used for multivariate analysis of variance
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Going Backwards in time and space
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{You want it the other way?}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Data from the UN often arrives with 
\begin_inset Quotes eld
\end_inset

Country.Varname
\begin_inset Quotes erd
\end_inset

 columns and years for the rows.
\end_layout

\begin_layout Itemize
I never considered creating that kind of data until today, but here goes.
\end_layout

\begin_layout Itemize
Lets work with the subset to make it easy.
\end_layout

\begin_layout Itemize
Again, we'll take the easy road and leave v.names unspecified
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

tti_dat_wide3 <- 
\end_layout

\begin_layout Plain Layout

    reshape(ttisub, direction = "wide", 
\end_layout

\begin_layout Plain Layout

            timevar = "Urban.Area",
\end_layout

\begin_layout Plain Layout

            idvar = "Year")
\end_layout

\begin_layout Plain Layout

## Leaves some illegal column names, fix with make.names
\end_layout

\begin_layout Plain Layout

colnames(tti_dat_wide3) <- make.names(colnames(tti_dat_wide3))
\end_layout

\begin_layout Plain Layout

tti_dat_wide3[1:10, 1:5]
\end_layout

\begin_layout Plain Layout

colnames(tti_dat_wide3)[1:40]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This is backwards land.
 Because time is a place and the group is a time.
 Only Einstein could understand that.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{References}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../../R"
options "apalike2"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{frame}[containsverbatim, allowframebreaks]
\end_layout

\begin_layout Plain Layout


\backslash
frametitle{Session}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<sess10>>=
\end_layout

\begin_layout Plain Layout

sessionInfo()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<opts20, include=F>>=
\end_layout

\begin_layout Plain Layout

## Don't delete this.
 It puts the interactive session options
\end_layout

\begin_layout Plain Layout

## back the way they were.
 If this is compiled within a session
\end_layout

\begin_layout Plain Layout

## it is vital to do this.
\end_layout

\begin_layout Plain Layout

options(opts.orig)
\end_layout

\begin_layout Plain Layout

options(par.orig)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
